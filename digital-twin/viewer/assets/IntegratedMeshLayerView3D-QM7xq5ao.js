import{L as n,N as m,O as l,P as p,Q as d,e as i,y as e,R as u,a as c}from"./index-D5ClABWK.js";import{A as h}from"./I3SMeshView3D-CGZMNfjQ.js";import{l as g}from"./LayerView3D-DPnmqfut.js";import{y}from"./LayerView-CeOBTF4G.js";import"./Transform-CZBa2I7F.js";import"./RenderTexture-CwzjN1Kr.js";import"./I3SOverrides-BgtgPFzc.js";import"./I3SNode-BqOiTooM.js";import"./I3SUtil-BRXeWWNn.js";import"./I3SBinaryReader-CMMXPkRr.js";import"./meshFeatureSet-BPpg0Nlx.js";import"./Mesh-BZCLRAOp.js";import"./MeshTransform-Bf9tOjbJ.js";import"./vertexSpaceConversion-CHEZWtgh.js";import"./External-BbAEnQVa.js";import"./infoFor3D-DsOdlPuA.js";import"./FeatureLayerView3D-ZO2BMjpj.js";import"./FeatureLayerViewBase3D-DPxrJlJ9.js";import"./HeatmapDensity.glsl-KyOkgBl7.js";import"./timeSupport-6fj5ubWM.js";import"./projectExtentUtils-C9REzSCW.js";import"./dehydratedFeatureComparison--Az78_7B.js";import"./queryForSymbologySnapping-lGthLg5F.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-BQk-Fr88.js";import"./optimizedFeatureQueryEngineAdapter-DguztIum.js";import"./PooledRBush-Byxb33Nz.js";import"./quickselect-CK2gJFDq.js";import"./popupUtils-B170fHVa.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-Bxscwxjb.js";import"./WhereClause-DM0W46oT.js";import"./TimeOnly-BlQFu_Bb.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-DQSyo722.js";import"./utils-BHTubVL8.js";import"./ClassBreaksDefinition-BnI_v5Mn.js";import"./FeatureStore-xHsq0oGW.js";import"./BoundsStore-jt4FkdZr.js";import"./WorkerHandle-5TQ37hzW.js";import"./EventedSet-CMFPHCnz.js";import"./RefreshableLayerView-6fZ5coPI.js";import"./SceneModification-D0seDj2d.js";import"./persistable-CCbE5WRl.js";import"./resourceExtension-CtQ6NVzZ.js";import"./SceneLayerWorker-Bsb-pyxI.js";import"./makeScheduleFunction-CggzEh3c.js";const f=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=!n("disable-feature:im-shading"),this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get visibleAtCurrentScale(){return l(this.i3slayer.effectiveScaleRange,this.view.terrainScale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),p),"modifications")}};i([e()],t.prototype,"layer",void 0),i([e()],t.prototype,"i3slayer",null),i([e(u)],t.prototype,"updatingProgress",void 0),i([e()],t.prototype,"updatingProgressValue",null),i([e()],t.prototype,"lodFactor",null),i([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),i([e({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=i([c("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const ut=t;export{ut as default};
