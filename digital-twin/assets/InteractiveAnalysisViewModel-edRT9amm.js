import{f as h,C as u,A as _,g as r,n as c,k as w,w as p,l as V,m as d,q as v,e as n,y as a,a as O}from"./index-h6vmjViw.js";import{p as g}from"./MeasurementWidgetContent-B5iNIQiq.js";var l;(function(s){s[s.PENDING=0]="PENDING",s[s.WAIT_FOR_VIEW_READY=1]="WAIT_FOR_VIEW_READY",s[s.RUNNING=2]="RUNNING"})(l||(l={}));let i=class extends g{constructor(s={}){super(s),this.analysisView=null,this._reconnectViewTask=null,this._parentChangeFromReconnect=!1,this._startUserOperation=null;const e=s==null?void 0:s.analysis;e!=null?this.analysis=e:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0))}normalizeCtorArgs(s){const{analysis:e,...t}=s;return t}initialize(){this.addHandles([h(()=>{var s;return(s=this.analysis)==null?void 0:s.parent},s=>{this._parentChangeFromReconnect||s===this.view||this._set("isAnalysisOwner",!1);const e=!this._parentChangeFromReconnect;this._parentChangeFromReconnect=!1,e&&this._scheduleViewReconnect()},u),h(()=>({view:this.view,ready:this.view!=null&&this.view.ready,supported:this.supported}),({view:s},e)=>{const t=e==null?void 0:e.view;s!==t&&(this._startUserOperation=r(this._startUserOperation),this._disconnectFromView(t)),this._scheduleViewReconnect()},_),h(()=>this.analysis.isEditable,(s,e)=>{this.analysisView!=null&&(s&&!e&&this.tool==null?this.createTool():s||!e||this.tool==null||this.tool.active||this.removeTool())})])}destroy(){this._reconnectViewTask=r(this._reconnectViewTask),this._startUserOperation=r(this._startUserOperation),this.analysisView!=null&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),this.analysis!=null&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}set analysis(s){s!==this._get("analysis")&&(this._startUserOperation=r(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(s),this._scheduleViewReconnect())}get ready(){return this.analysisView!=null&&!this.connectingToView}get connectingToView(){return this._reconnectViewTask!=null}get isAnalysisOwner(){return this._get("isAnalysisOwner")}set visible(s){this._set("visible",s),this.analysisView!=null&&(this.analysisView.visible=s)}async start(){if(!this.visible)return void c.getLogger(this).warn("Cannot start analysis when not visible");this.clear();const s={task:null,abort:null,state:l.PENDING},e=w(async t=>{s.state=l.WAIT_FOR_VIEW_READY,await p(()=>this.ready,t),s.state=l.RUNNING,this.createTool({interactive:!0})});return s.task=e,s.abort=()=>e.abort(),this._startUserOperation=s,e.promise}clear(){this._startUserOperation=r(this._startUserOperation),this.removeTool(),this.analysis.clear()}onConnectToAnalysisView(s){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=r(this._reconnectViewTask);const s=w(async e=>{try{await this._reconnectView(e)}catch(t){if(V(e),!d(t))return void c.getLogger(this).warn("Failed to use analysis in view model",t);throw t}finally{s===this._reconnectViewTask&&(this._reconnectViewTask=null)}});this._reconnectViewTask=s}async _reconnectView(s){const{view:e}=this,t=e!=null&&e.ready&&this.supported,o=this.analysis;if(this._startUserOperation=y(this._startUserOperation),this._disconnectFromView(e),t&&e!=null&&o!=null){if(this.isAnalysisOwner){if(o.parent!=null)return void this.logError("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,e.analyses.add(o)}this.analysisView=await e.whenAnalysisView(o),v(s)?this._startUserOperation=y(this._startUserOperation):(this.analysisView.visible=this.visible,this.onConnectToAnalysisView(this.analysisView),this.createTool())}}_disconnectFromView(s){this.removeTool(),s!=null&&this.isAnalysisOwner&&(this._parentChangeFromReconnect=!0,s.analyses.remove(this.analysis),this.analysis.clear()),this.analysisView=null,this.onDisconnectFromAnalysisView()}_setExternalAnalysis(s){this.analysisView==null||this.isAnalysisOwner||(this.analysisView.visible=!0),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",s),this._parentChangeFromReconnect=!1}get testInfo(){}};function y(s){return s!=null&&s.state>=l.RUNNING?(s.abort(),null):s}n([a({nonNullable:!0})],i.prototype,"analysis",null),n([a()],i.prototype,"analysisView",void 0),n([a()],i.prototype,"ready",null),n([a()],i.prototype,"connectingToView",null),n([a({readOnly:!0})],i.prototype,"isAnalysisOwner",null),n([a({type:Boolean,value:!0})],i.prototype,"visible",null),n([a()],i.prototype,"_reconnectViewTask",void 0),i=n([O("esri.widgets.support.InteractiveAnalysisViewModel")],i);export{i as u};
