import{F as d,o as p,fR as S,fV as E,dT as P,l as q,k as g,cQ as y,p as C,aP as I,fW as $,fX as b}from"./index-QRcEofMq.js";import{u as j}from"./executeQueryForSnapping-CLx-n0Fp.js";import{f as Q}from"./FeatureStore-C7Oce2_z.js";import{x as N,j as O}from"./FixedIntervalBinParameters-D7RuKqwT.js";import{L as k}from"./QueryEngine-CCUaxmSu.js";import{E as M,N as L}from"./geojson-DPABCZjz.js";import{g as A}from"./sourceUtils-DbsPb-cX.js";import{o as U,e as Z,K as _}from"./wfsUtils-CnjeNi17.js";import"./BoundsStore-B9J9KhVN.js";import"./PooledRBush-C8shqQuB.js";import"./quickselect-QQC62dOK.js";import"./optimizedFeatureQueryEngineAdapter-DGMyMfYI.js";import"./json-Wa8cmqdu.js";import"./WhereClauseCache-CTsnxWwR.js";import"./WhereClause-Cu3aXYZu.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./utils-D2xYeiin.js";import"./utils-DueuOxL_.js";import"./ClassBreaksDefinition-Dq1_7B_p.js";import"./date-Ctp1FiBW.js";import"./xmlUtils-CtUoQO7q.js";const x="esri.layers.WFSLayer";class ce{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=null}async load(e,t={}){const{getFeatureUrl:a,getFeatureOutputFormat:s,fields:n,geometryType:u,featureType:o,maxRecordCount:i,maxTotalRecordCount:c,maxPageCount:R,objectIdField:f,customParameters:F}=e,{spatialReference:h,getFeatureSpatialReference:m}=U(a,o,e.spatialReference);try{await N(m,h)}catch{throw new d("unsupported-projection","Projection not supported",{inSpatialReference:m,outSpatialReference:h})}p(t),this._customParameters=F,this._featureType=o,this._fieldsIndex=S.fromLayerJSON({fields:n,dateFieldsTimeReference:n.some(T=>T.type==="esriFieldTypeDate")?{timeZoneIANA:E}:null}),this._geometryType=u,this._getFeatureUrl=a,this._getFeatureOutputFormat=s,this._getFeatureSpatialReference=m,this._maxRecordCount=i,this._maxTotalRecordCount=c,this._maxPageCount=R,this._objectIdField=f,this._spatialReference=h;let l=await this._snapshotFeatures(t);if(l.errors.length>0&&(this._supportsPagination=!1,l=await this._snapshotFeatures(t),l.errors.length>0))throw l.errors[0];return this._queryEngine=new k({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,objectIdField:f,spatialReference:h,timeInfo:null,featureStore:new Q({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(l.features),{warnings:w(l),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new d("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(e,t.signal)).filter(P)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),j(this._queryEngine,e,t.signal)}async queryAttributeBins(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(e,t.signal)}async refresh(e){var t;return this._customParameters=e.customParameters,this._maxRecordCount=e.maxRecordCount,this._maxTotalRecordCount=e.maxTotalRecordCount,this._maxPageCount=e.maxPageCount,(t=this._snapshotTask)==null||t.abort(),this._snapshotTask=q(a=>this._snapshotFeatures({signal:a})),this._snapshotTask.promise.then(a=>{var s;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(a.features);for(const n of w(a))g.getLogger(x).warn(new y("wfs-layer:refresh-warning",n.message,n.details));(s=a.errors)!=null&&s.length&&g.getLogger(x).warn(new y("wfs-layer:refresh-error","Refresh completed with errors",{errors:a.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(e){const t=e==null?void 0:e.signal,a=this._maxTotalRecordCount,s=this._maxPageCount,n=this._supportsPagination?await Z(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:t}):void 0;let u=[];const o=[];if(n==null)try{u=await this._singleQuery(t)}catch(i){C(i)||o.push(i)}else{const i=Math.min(n,a),c=J(this,Math.max(1,Math.min(Math.ceil(i/this._maxRecordCount),s)),t);await Promise.allSettled(Array.from({length:10}).map(()=>W(c,u,o)))}return p(t),{features:u,totalRecordCount:n,maxTotalRecordCount:a,maxPageCount:s,errors:o}}async _singleQuery(e){const t=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:e});return this._processGeoJSON(t,{signal:e})}async _pageQuery(e,t){const a=e*this._maxRecordCount,s=await _(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:a,count:this._maxRecordCount,signal:t});return this._processGeoJSON(s,{startIndex:a,signal:t})}_processGeoJSON(e,t){M(e,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:s}=t;p(s);const n=L(e,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!I(this._spatialReference,this._getFeatureSpatialReference))for(const o of n)o.geometry!=null&&(o.geometry=$(O(b(o.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=a??1;for(const o of n){const i={};A(this._fieldsIndex,i,o.attributes,!0),o.attributes=i,i[this._objectIdField]==null&&(o.objectId=i[this._objectIdField]=u++)}return n}}function*J(r,e,t){for(let a=0;a<e;a++)yield r._pageQuery(a,t)}async function W(r,e,t){let a=r.next();for(;!a.done;){try{const s=await a.value;e.push(...s)}catch(s){C(s)||t.push(s)}a=r.next()}}function w(r){const e=[];return r.totalRecordCount!=null&&(r.features.length<r.totalRecordCount&&e.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${r.features.length} of ${r.totalRecordCount} in ${r.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount}}),r.totalRecordCount>r.maxTotalRecordCount&&e.push({name:"wfs-layer:large-dataset",message:`The number of ${r.totalRecordCount} features exceeds the maximum allowed of ${r.maxTotalRecordCount}.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount,maxTotalRecordCount:r.maxTotalRecordCount}})),e}export{ce as default};
