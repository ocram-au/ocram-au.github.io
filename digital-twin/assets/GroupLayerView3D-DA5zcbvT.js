import{W as o,e as h,C as n,hv as d,r as t,m as a,jQ as p,a as V}from"./index-BGUxYM9l.js";import{y as w}from"./LayerView-BX05mm1U.js";let r=class extends w{constructor(i){super(i),this.type="group",this.layerViews=new o}destroy(){this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.addHandles([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),h(()=>{var i;return(i=this.layer)==null?void 0:i.visibilityMode},()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},n),h(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},n)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}get creatingLayerViews(){var i,e;return((e=(i=this.view)==null?void 0:i.layerViewManager)==null?void 0:e.isCreatingLayerViewsForLayer(this.layer))??!1}set layerViews(i){this._set("layerViews",d(i,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.creatingLayerViews||this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>{const s=this._findLayerViewForLayer(e);return!!(s!=null&&s.visible)});return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){i==null&&(i=this._firstVisibleOnLayerOrder())==null&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.removeHandles("grouplayerview:visible"),this.addHandles(this.layerViews.map(s=>h(()=>s.visible,l=>this._applyVisibility(()=>{l!==this.visible&&(s.visible=this.visible)},()=>this._applyExclusiveVisibility(l?s:null)),n)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e!=null&&e.visible?e:null))}_applyVisibility(i,e){var s,l;this._hasLayerViewVisibleOverrides()&&(((s=this.layer)==null?void 0:s.visibilityMode)==="inherited"?i():((l=this.layer)==null?void 0:l.visibilityMode)==="exclusive"&&e())}};t([a({readOnly:!0})],r.prototype,"creatingLayerViews",null),t([a({cast:p})],r.prototype,"layerViews",null),t([a({readOnly:!0})],r.prototype,"updatingProgress",null),t([a()],r.prototype,"view",void 0),r=t([V("esri.views.layers.GroupLayerView")],r);const u=r;let y=class extends u{constructor(){super(...arguments),this.type="group"}};t([a()],y.prototype,"view",void 0),y=t([V("esri.views.3d.layers.GroupLayerView3D")],y);const g=y;export{g as default};
