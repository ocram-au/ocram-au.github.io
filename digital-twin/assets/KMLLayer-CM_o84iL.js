import{aX as S,G as J,eY as K,g8 as V,U as W,cd as M,l0 as E,l1 as w,l2 as k,l3 as A,av as I,aM as B,g3 as D,aN as _,a2 as g,a1 as G,aB as j,au as L,l4 as H,V as O,e as i,y as o,l5 as U,r as $,a as C,hJ as q,g5 as X,g6 as Y,g7 as Q,f as Z,g as ee,k as te,d0 as se,ei as re,n as ie,aV as le,x as oe,z as ae}from"./index-31kweLEy.js";const ne={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function N(e){var h;const t=e.folders||[],s=t.slice(),r=new Map,a=new Map,c=new Map,p=new Map,b=new Map,f={esriGeometryPoint:a,esriGeometryPolyline:c,esriGeometryPolygon:p};(((h=e.featureCollection)==null?void 0:h.layers)||[]).forEach(l=>{const m=S(l);m.featureSet.features=[];const d=l.featureSet.geometryType;r.set(d,m);const v=l.layerDefinition.objectIdField;d==="esriGeometryPoint"?P(a,v,l.featureSet.features):d==="esriGeometryPolyline"?P(c,v,l.featureSet.features):d==="esriGeometryPolygon"&&P(p,v,l.featureSet.features)}),e.groundOverlays&&e.groundOverlays.forEach(l=>{b.set(l.id,l)}),t.forEach(l=>{l.networkLinkIds.forEach(m=>{const d=ye(m,l.id,e.networkLinks);d&&s.push(d)})}),s.forEach(l=>{var m;if(l.featureInfos){l.points=S(r.get("esriGeometryPoint")),l.polylines=S(r.get("esriGeometryPolyline")),l.polygons=S(r.get("esriGeometryPolygon")),l.mapImages=[];for(const d of l.featureInfos)switch(d.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const v=f[d.type].get(d.id);v&&((m=l[ne[d.type]])==null||m.featureSet.features.push(v));break}case"GroundOverlay":{const v=b.get(d.id);v&&l.mapImages.push(v);break}}l.fullExtent=F([l])}});const u=F(s);return{folders:t,sublayers:s,extent:u}}function R(e,t,s,r){var p;const a=(p=J)==null?void 0:p.findCredential(e);e=K(e,{token:a==null?void 0:a.token});const c=V.kmlServiceUrl;return W(c,{query:{url:e,model:"simple",folders:"",refresh:s!==0||void 0,outSR:JSON.stringify(t)},responseType:"json",signal:r})}function T(e,t,s=null,r=[]){const a=[],c={},p=t.sublayers,b=new Set(t.folders.map(f=>f.id));return p.forEach(f=>{var h;const u=new e;if(s?u.read(f,s):u.read(f),r.length&&b.has(u.id)&&(u.visible=r.includes(u.id)),c[f.id]=u,f.parentFolderId!=null&&f.parentFolderId!==-1){const l=c[f.parentFolderId];l.sublayers||(l.sublayers=[]),(h=l.sublayers)==null||h.unshift(u)}else a.unshift(u)}),a}function P(e,t,s){s.forEach(r=>{e.set(r.attributes[t],r)})}function ue(e,t){let s;return t.some(r=>r.id===e&&(s=r,!0)),s}function ye(e,t,s){const r=ue(e,s);return r&&(r.parentFolderId=t,r.networkLink=r),r}function F(e){var r,a,c,p,b,f;const t=M(E),s=M(E);for(const u of e){if((a=(r=u.polygons)==null?void 0:r.featureSet)!=null&&a.features)for(const h of u.polygons.featureSet.features)w(t,h.geometry),k(s,t);if((p=(c=u.polylines)==null?void 0:c.featureSet)!=null&&p.features)for(const h of u.polylines.featureSet.features)w(t,h.geometry),k(s,t);if((f=(b=u.points)==null?void 0:b.featureSet)!=null&&f.features)for(const h of u.points.featureSet.features)w(t,h.geometry),k(s,t);if(u.mapImages)for(const h of u.mapImages)w(t,h.extent),k(s,t)}return A(s,E)?void 0:{xmin:s[0],ymin:s[1],zmin:s[2],xmax:s[3],ymax:s[4],zmax:s[5],spatialReference:I.WGS84}}var x;let y=x=class extends B.EventedMixin(D(q)){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.id=null,this.networkLink=null,this.parent=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.layer=null,this.addHandles([_(()=>this.sublayers,"after-add",({item:t})=>{t.parent=this,t.layer=this.layer},g),_(()=>this.sublayers,"after-remove",({item:t})=>{t.layer=t.parent=null},g),G(()=>this.sublayers,(t,s)=>{if(s)for(const r of s)r.layer=r.parent=null;if(t)for(const r of t)r.parent=this,r.layer=this.layer},g),G(()=>this.layer,t=>{if(this.sublayers)for(const s of this.sublayers)s.layer=t},g)])}initialize(){j(()=>this.networkLink).then(()=>j(()=>this.visible===!0)).then(()=>this.load())}load(e){var r;if(!this.networkLink||this.networkLink.viewFormat)return;const t=e!=null?e.signal:null,s=this._fetchService(((r=this._get("networkLink"))==null?void 0:r.href)??"",t).then(a=>{var b;const c=F(a.sublayers);this.fullExtent=L.fromJSON(c),this.sourceJSON=a;const p=H(O.ofType(x),T(x,a));this.sublayers?this.sublayers.addMany(p):this.sublayers=p,(b=this.layer)==null||b.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(s),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}_fetchService(e,t){return R(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then(s=>N(s.data))}};i([o()],y.prototype,"description",void 0),i([o({type:L})],y.prototype,"fullExtent",void 0),i([o()],y.prototype,"id",void 0),i([o({readOnly:!0,value:null})],y.prototype,"networkLink",void 0),i([o({json:{write:{allowNull:!0}}})],y.prototype,"parent",void 0),i([o({type:O.ofType(y),json:{write:{allowNull:!0}}})],y.prototype,"sublayers",void 0),i([o({value:null,json:{read:{source:"name",reader:e=>U(e)}}})],y.prototype,"title",void 0),i([o({value:!0})],y.prototype,"visible",null),i([$("visible",["visibility"])],y.prototype,"readVisible",null),i([o()],y.prototype,"sourceJSON",void 0),i([o()],y.prototype,"layer",void 0),y=x=i([C("esri.layers.support.KMLSublayer")],y);const z=y,pe=["kml","xml"];let n=class extends X(Y(Q(Z(ee(te(ae)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new se({getCollections:()=>[this.sublayers],getChildrenFunction:t=>t.sublayers}),this.outSpatialReference=I.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([G(()=>this.sublayers,(e,t)=>{t&&t.forEach(s=>{s.parent=null,s.layer=null}),e&&e.forEach(s=>{s.parent=this,s.layer=this})},g),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readSublayersFromItemOrWebMap(e,t){this._visibleFolders=t.visibleFolders}readSublayers(e,t,s){return T(z,t,s,this._visibleFolders)}writeSublayers(e,t){const s=[],r=e.toArray();for(;r.length;){const a=r[0];a.networkLink||(a.visible&&s.push(a.id),a.sublayers&&r.push(...a.sublayers.toArray())),r.shift()}t.visibleFolders=s}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?re(this.url,pe)||"KML":e}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,t=[],s=r=>{r.visible&&(t.push(r),r.sublayers&&r.sublayers.forEach(s))};return e&&e.forEach(s),t}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(ie).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const t=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:R(this.url??"",this.outSpatialReference,this.refreshInterval,e)),s=N(t.data);s&&this.read(s,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent!=null&&(e=this.extent.clone());const t=s=>{if(s.sublayers)for(const r of s.sublayers.items)t(r),r.visible&&r.fullExtent&&(e!=null?e.union(r.fullExtent):e=r.fullExtent.clone())};return t(this),e}};i([o({readOnly:!0})],n.prototype,"allSublayers",void 0),i([o({type:I})],n.prototype,"outSpatialReference",void 0),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0),i([o({readOnly:!0,json:{read:!1,write:!1}})],n.prototype,"legendEnabled",void 0),i([o({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),i([o({type:["KML"]})],n.prototype,"operationalLayerType",void 0),i([o({})],n.prototype,"resourceInfo",void 0),i([o({type:O.ofType(z),json:{write:{ignoreOrigin:!0}}})],n.prototype,"sublayers",void 0),i([$(["web-map","portal-item"],"sublayers",["visibleFolders"])],n.prototype,"readSublayersFromItemOrWebMap",null),i([$("service","sublayers",["sublayers"])],n.prototype,"readSublayers",null),i([le("sublayers")],n.prototype,"writeSublayers",null),i([o({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),i([o({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],n.prototype,"title",null),i([o(oe)],n.prototype,"url",void 0),i([o({readOnly:!0})],n.prototype,"visibleSublayers",null),i([o({type:L})],n.prototype,"extent",void 0),i([o()],n.prototype,"fullExtent",null),n=i([C("esri.layers.KMLLayer")],n);const he=n;export{he as default};
