import{dv as n,dA as l,dB as m,P as p,E as d,e,y as i,c8 as c,a as u}from"./index-CzdLFJHx.js";import{A as h}from"./I3SMeshView3D-Dx8-MKSO.js";import{l as g}from"./LayerView3D-mdNLBdHN.js";import{y}from"./LayerView-DhBHJRbi.js";import"./Transform-_fzoEBFX.js";import"./RenderTexture-DDx-ikGC.js";import"./I3SOverrides-BDFKXYHA.js";import"./I3SNode-BK77bD9y.js";import"./I3SUtil-C9zIq1CD.js";import"./I3SBinaryReader-FqNwzy25.js";import"./meshFeatureSet-U46ZN593.js";import"./Mesh-C5KOlFf0.js";import"./MeshTransform-CEL31ECC.js";import"./vertexSpaceConversion-DUhDFktD.js";import"./External-Bdt6ohy3.js";import"./infoFor3D-DsOdlPuA.js";import"./FeatureLayerView3D-BvhGLbbx.js";import"./FeatureLayerViewBase3D-Dny0kI04.js";import"./HeatmapDensity.glsl-Kh56xDZC.js";import"./timeSupport-pDTcyuao.js";import"./projectExtentUtils-BmTIKbK1.js";import"./dehydratedFeatureComparison-DK_24yHl.js";import"./queryForSymbologySnapping-BfjlwBwo.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-CYUtgIv2.js";import"./optimizedFeatureQueryEngineAdapter-Blr6KdAZ.js";import"./PooledRBush-sGQbjAJn.js";import"./quickselect-CA3W1P1S.js";import"./popupUtils-CU56nw1Q.js";import"./QueryEngine-iXGiOkMJ.js";import"./WhereClause-Cp9etdjH.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-B3vFv3fw.js";import"./utils-BykpoO-J.js";import"./ClassBreaksDefinition-D-jj8mPs.js";import"./FeatureStore-DmezOwlW.js";import"./BoundsStore-CmsHjxnR.js";import"./WorkerHandle-CXRHVskN.js";import"./EventedSet-BlbPJFxn.js";import"./RefreshableLayerView-DzHYfRx7.js";import"./SceneModification-CZFKhuan.js";import"./SceneLayerWorker-6ZJcemVB.js";import"./makeScheduleFunction-CggzEh3c.js";const v=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=!n("disable-feature:im-shading"),this.drapeTargetType=l.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?v:1}get visibleAtCurrentScale(){return m(this.i3slayer.effectiveScaleRange,this.view.terrainScale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),p),"modifications")}};e([i()],t.prototype,"layer",void 0),e([i()],t.prototype,"i3slayer",null),e([i(c)],t.prototype,"updatingProgress",void 0),e([i()],t.prototype,"updatingProgressValue",null),e([i()],t.prototype,"lodFactor",null),e([i({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),e([i({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=e([u("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const nt=t;export{nt as default};
