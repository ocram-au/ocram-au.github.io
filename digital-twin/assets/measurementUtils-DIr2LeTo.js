import{aT as p,aU as s,aV as g,ay as o,aW as h,aX as i,aY as m,aZ as c,a_ as $,a$ as y,b0 as M}from"./index-BGUxYM9l.js";import{o as x}from"./geodesicAreaMeasurementUtils-0XpBZte5.js";function T(t,e){const a=$(e);g(a,0,0,0);for(let r=0;r<t.length;++r)h(a,a,t[r]);y(a,a,1/t.length);let l=0;for(let r=0;r<t.length;++r)l=Math.max(l,M(a,t[r]));e[3]=Math.sqrt(l)}function U(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");p(t[0],t[1],t[2],e)}function Z(t,e){return c(t,e)+t[3]}function _(t,e,a,l){const r=b;return s(r.rings[0][0],t),s(r.rings[0][1],e),s(r.rings[0][2],a),s(r.rings[0][3],t),r.spatialReference=l,x(r)}function d(t,e=null,a=!0){const l=(r,f)=>{if(f[0]===0&&f[1]===0&&f[2]===0)return!1;for(let u=0;u<r.length;++u)if(c(f,r[u])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&s(e,t[0]),!0;g(n,0,0,0);for(let r=0;r<t.length;++r)h(n,n,t[r]);if(i(n,n),l(t,n))return e&&s(e,n),!0;if(!a)return!1;for(let r=0;r<t.length;++r)for(let f=0;f<t.length;++f)if(r!==f&&(m(n,t[r],t[f]),i(n,n),l(t,n)))return e&&s(e,n),!0;return!1}function j(t){return t.pointerType!=="mouse"||t.button===0}const b={hasM:!1,hasZ:!0,rings:[[o(),o(),o(),o()]],spatialReference:null,type:"polygon"},n=o();export{j as M,U as g,T as h,d as j,_ as m,Z as p};
