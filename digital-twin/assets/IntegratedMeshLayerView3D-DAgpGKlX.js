import{L as n,N as m,O as l,P as p,Q as d,e as i,y as e,R as u,a as c}from"./index-CQXxPdCL.js";import{A as h}from"./I3SMeshView3D-BdV2cu6u.js";import{l as g}from"./LayerView3D-8LQTIagT.js";import{y}from"./LayerView-CFJQIBjD.js";import"./Transform-DmUfAnje.js";import"./RenderTexture-DrYeNN0z.js";import"./I3SOverrides-BB5mVeuB.js";import"./I3SNode-Cqnd-nB0.js";import"./I3SUtil-CtrK0PQU.js";import"./I3SBinaryReader-tiMeNU0D.js";import"./meshFeatureSet-DHh3LX1a.js";import"./Mesh-FrDBfYL7.js";import"./MeshTransform-CbKQlVoA.js";import"./vertexSpaceConversion-jBHkkWcX.js";import"./External-esM4hmaq.js";import"./infoFor3D-DsOdlPuA.js";import"./FeatureLayerView3D-CNl96p5-.js";import"./FeatureLayerViewBase3D-BpQSUfop.js";import"./HeatmapDensity.glsl-BemhSKdV.js";import"./timeSupport-BaLHvX7k.js";import"./projectExtentUtils-C-qA16Wx.js";import"./dehydratedFeatureComparison-CQkGq3TN.js";import"./queryForSymbologySnapping-Dr7FoDfR.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-CVoDSWhf.js";import"./optimizedFeatureQueryEngineAdapter-Od-BNW3V.js";import"./PooledRBush-Dn3b87_K.js";import"./quickselect-DhOsQPh9.js";import"./popupUtils-BGR3Rcn4.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-BBgxB_iM.js";import"./WhereClause-B8aijA-r.js";import"./TimeOnly-Ddv6u_N4.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-Ck0dj1Jz.js";import"./utils-CMnMOOCn.js";import"./ClassBreaksDefinition-BSKDKZdW.js";import"./FeatureStore-EY6PR9GJ.js";import"./BoundsStore-DfkGIFiI.js";import"./WorkerHandle-LNDG8TCa.js";import"./EventedSet-CKMF0xH2.js";import"./RefreshableLayerView-B9CnG6Vx.js";import"./SceneModification-CSeWoLuL.js";import"./persistable-D08NJeWT.js";import"./resourceExtension-ixyJeGT7.js";import"./SceneLayerWorker-DF2boA8b.js";import"./makeScheduleFunction-CggzEh3c.js";const f=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=!n("disable-feature:im-shading"),this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get visibleAtCurrentScale(){return l(this.i3slayer.effectiveScaleRange,this.view.terrainScale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),p),"modifications")}};i([e()],t.prototype,"layer",void 0),i([e()],t.prototype,"i3slayer",null),i([e(u)],t.prototype,"updatingProgress",void 0),i([e()],t.prototype,"updatingProgressValue",null),i([e()],t.prototype,"lodFactor",null),i([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),i([e({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=i([c("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const ut=t;export{ut as default};
