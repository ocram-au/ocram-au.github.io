import{bS as U,bT as V,bU as j,h4 as X,bV as k,hj as F,hk as G,c0 as b,cy as w,gG as $,ba as x,b0 as W,aH as h,d7 as _,aF as S,g1 as E,hl as L,hm as T,hn as R,al as g,ho as f,t as q,z as D,U as K,hp as z,hq as P,n as N,hr as O,X as H,e as d,y as m,hs as Z,b$ as B,a as C}from"./index-h6vmjViw.js";let p=class extends U(V(j(X(k(F(G(H))))))){constructor(s){super(s),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new b({wkid:4326,vcsWkid:115700}),this.fullExtent=new w(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(s){this._set("elevationInfo",s),this._validateElevationInfo()}_verifyArray(s,a){if(!Array.isArray(s)||s.length<a)return!1;for(const o of s)if(typeof o!="number")return!1;return!0}_initFullExtent(s){var I,M;const a=(I=s.root)==null?void 0:I.boundingVolume;if(!a)return;if(a.box){const t=a==null?void 0:a.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=(M=s.root)==null?void 0:M.transform,u=g();if(a.region&&this._verifyArray(a.region,6)){const t=a.region,l=$(t[0]),n=$(t[1]),i=t[4],r=$(t[2]),e=$(t[3]),y=t[5];this.fullExtent=new w({xmin:l,ymin:n,zmin:i,xmax:r,ymax:e,zmax:y,spatialReference:this.spatialReference})}else if(a.sphere&&this._verifyArray(a.sphere,4)){const t=a.sphere,l=x(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),i=g();W(i,l,x(n,n,n));const r=g();if(h(r,l,x(n,n,n)),o&&this._verifyArray(o,16)){const v=o;_(u,i,v),S(i,u),_(u,r,v),S(r,u)}E(i,L,0,i,b.WGS84,0,1),E(r,L,0,r,b.WGS84,0,1);const e=g(),y=g();T(e,i,r),R(y,i,r),this.fullExtent=new w({xmin:e[0],ymin:e[1],zmin:e[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}else if(a.box&&this._verifyArray(a.box,12)){const t=a.box,l=x(t[0],t[1],t[2]),n=x(t[3],t[4],t[5]),i=x(t[6],t[7],t[8]),r=x(t[9],t[10],t[11]),e=[];for(let c=0;c<8;++c)e.push(g());if(h(e[0],l,n),h(e[0],e[0],i),h(e[0],e[0],r),f(e[1],l,n),h(e[1],e[1],i),h(e[1],e[1],r),h(e[2],l,n),f(e[2],e[2],i),h(e[2],e[2],r),f(e[3],l,n),f(e[3],e[3],i),h(e[3],e[3],r),h(e[4],l,n),h(e[4],e[4],i),f(e[4],e[4],r),f(e[5],l,n),h(e[5],e[5],i),f(e[5],e[5],r),h(e[6],l,n),f(e[6],e[6],i),f(e[6],e[6],r),f(e[7],l,n),f(e[7],e[7],i),f(e[7],e[7],r),o&&this._verifyArray(o,16)){const c=o;for(let A=0;A<8;++A)_(e[A],e[A],c)}const y=x(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),v=x(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let c=0;c<8;++c)E(e[c],L,0,e[c],b.WGS84,0,1),T(v,v,e[c]),R(y,y,e[c]);this.fullExtent=new w({xmin:v[0],ymin:v[1],zmin:v[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}}async load(s){return this.addResolvingPromise(this._doLoad(s)),this}async _doLoad(s){const a=s!=null?s.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{var u;if((u=o.typeKeywords)!=null&&u.includes("IntegratedMesh"))return!0;throw new q("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},s)}catch(o){D(o)}this.url&&await K(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:a}).then(u=>{this._initFullExtent(u.data)},u=>{D(u)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(){const s=this.elevationInfo,a="Integrated mesh 3d tiles layers";z(N.getLogger(this),P(a,"absolute-height",s)),z(N.getLogger(this),O(a,s))}};d([m({type:["IntegratedMesh3DTilesLayer"]})],p.prototype,"operationalLayerType",void 0),d([m({type:b})],p.prototype,"spatialReference",void 0),d([m({type:w})],p.prototype,"fullExtent",void 0),d([m(Z)],p.prototype,"elevationInfo",null),d([m({type:["show","hide"]})],p.prototype,"listMode",void 0),d([m(B)],p.prototype,"url",void 0),d([m({readOnly:!0})],p.prototype,"type",void 0),d([m({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],p.prototype,"path",void 0),d([m({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"minScale",void 0),d([m({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"maxScale",void 0),p=d([C("esri.layers.IntegratedMesh3DTilesLayer")],p);const Q=p;export{Q as default};
