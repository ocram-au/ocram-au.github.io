import{bk as h,aB as d,Q as y,aA as S,ax as N,bl as m,B as D}from"./index-CQXxPdCL.js";import{$ as g}from"./Mesh-FrDBfYL7.js";import{N as M}from"./MeshTransform-CbKQlVoA.js";import{o as w,i as F}from"./External-esM4hmaq.js";import{s as T}from"./infoFor3D-DsOdlPuA.js";import"./vertexSpaceConversion-jBHkkWcX.js";const I=()=>D.getLogger("esri.rest.support.meshFeatureSet");function Y(t,e,r){const n=r.features;r.features=[],delete r.geometryType;const s=h.fromJSON(r);if(s.geometryType="mesh",!r.assetMaps)return s;const a=O(e,r.assetMaps),i=t.sourceSpatialReference??d.WGS84,f=r.globalIdFieldName,{outFields:o}=t,l=o!=null&&o.length>0?b(o.includes("*")?null:new Set(o)):()=>({});for(const u of n){const c=x(u,f,i,e,a);s.features.push(new y({geometry:c,attributes:l(u)}))}return s}function b(t){return({attributes:e})=>{if(!e)return{};if(!t)return e;for(const r in e)t.has(r)||delete e[r];return e}}function x(t,e,r,n,s){const a=t.attributes[e],i=s.get(a);if(i==null||!t.geometry)return null;const f=A(t,r,n),o=S.fromJSON(t.geometry);o.spatialReference=r;const l=L(t.attributes,n),u=r.isGeographic?"local":"georeferenced",c=P(i);return c?g.createWithExternalSource(f,c,{extent:o,transform:l,vertexSpace:u}):g.createIncomplete(f,{extent:o,transform:l,vertexSpace:u})}function A({attributes:t},e,{transformFieldRoles:r}){const n=t[r.originX],s=t[r.originY],a=t[r.originZ];return new N({x:n,y:s,z:a,spatialReference:e})}function L(t,{transformFieldRoles:e}){return new M({translation:[t[e.translationX],-t[e.translationZ],t[e.translationY]],rotationAxis:[t[e.rotationX],-t[e.rotationZ],t[e.rotationY]],rotationAngle:t[e.rotationDeg],scale:[t[e.scaleX],t[e.scaleZ],t[e.scaleY]]})}var p;function O(t,e){const r=new Map;for(const n of e){const s=n.parentGlobalId;if(s==null)continue;const a=n.assetName,i=n.assetType,f=n.assetHash,o=n.assetURL,l=n.conversionStatus,u=n.seqNo,c=T(i,t.supportedFormats);if(!c){I().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const E=m(r,s,()=>({files:new Map}));m(E.files,a,()=>({name:a,type:i,mimeType:c,status:$(l),parts:[]})).parts[u]={hash:f,url:o}}return r}function P(t){const e=Array.from(t.files.values()),r=new Array;for(const n of e){if(n.status!==p.COMPLETED)return null;const s=new Array;for(const a of n.parts){if(!a)return null;s.push(new w(a.url,a.hash))}r.push(new F(n.name,n.mimeType,s))}return r}function $(t){switch(t){case"COMPLETED":case"SUBMITTED":return p.COMPLETED;case"INPROGRESS":return p.PENDING;default:return p.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(p||(p={}));export{O as assetMapFromAssetMapsJSON,x as extractMesh,Y as meshFeatureSetFromJSON};
