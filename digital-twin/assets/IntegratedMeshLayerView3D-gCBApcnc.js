import{dv as n,dA as l,dB as m,P as p,E as d,e,y as i,c8 as c,a as u}from"./index-B6FTDkqq.js";import{A as h}from"./I3SMeshView3D-Bhqb3Pt6.js";import{l as g}from"./LayerView3D-BR71YyJD.js";import{y}from"./LayerView-Caw2GMiN.js";import"./Transform-i55Wz-sW.js";import"./RenderTexture-CP-fGaDV.js";import"./I3SOverrides-Dzbd-pZn.js";import"./I3SNode-MSfdr13n.js";import"./I3SUtil-FGeEBBi2.js";import"./I3SBinaryReader-DLsp5RZK.js";import"./meshFeatureSet-B5dqzQFo.js";import"./Mesh-5P9CABES.js";import"./MeshTransform-Dug8KNJ_.js";import"./vertexSpaceConversion-CYnrx4us.js";import"./External-C3_UdEtT.js";import"./infoFor3D-DsOdlPuA.js";import"./FeatureLayerView3D-DYet0QFP.js";import"./FeatureLayerViewBase3D-CQigyHWl.js";import"./HeatmapDensity.glsl-CjZ3RsiK.js";import"./timeSupport-CUtkbmSE.js";import"./projectExtentUtils-74u3ERLo.js";import"./dehydratedFeatureComparison-DTJgVKfs.js";import"./queryForSymbologySnapping-ByRnvmHz.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-D94WUpEz.js";import"./optimizedFeatureQueryEngineAdapter-C-wQCKpF.js";import"./PooledRBush-BnMb8sOh.js";import"./quickselect-DO3ernqi.js";import"./popupUtils-psWR8V_O.js";import"./QueryEngine-FXykRKac.js";import"./WhereClause-JhZerCEJ.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-xrP9QSZ7.js";import"./utils-dZTjTTMU.js";import"./ClassBreaksDefinition-BV-os3in.js";import"./FeatureStore-ZJ1ttLno.js";import"./BoundsStore-Bd0IKyn2.js";import"./WorkerHandle-DuPEE_IW.js";import"./EventedSet-CGBUFCWR.js";import"./RefreshableLayerView-BwshdPOz.js";import"./SceneModification-C7AB3h7Z.js";import"./SceneLayerWorker-DYTlQ6tM.js";import"./makeScheduleFunction-CggzEh3c.js";const v=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=!n("disable-feature:im-shading"),this.drapeTargetType=l.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?v:1}get visibleAtCurrentScale(){return m(this.i3slayer.effectiveScaleRange,this.view.terrainScale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),p),"modifications")}};e([i()],t.prototype,"layer",void 0),e([i()],t.prototype,"i3slayer",null),e([i(c)],t.prototype,"updatingProgress",void 0),e([i()],t.prototype,"updatingProgressValue",null),e([i()],t.prototype,"lodFactor",null),e([i({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),e([i({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=e([u("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const nt=t;export{nt as default};
