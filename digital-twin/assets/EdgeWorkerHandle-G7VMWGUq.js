import{f3 as o,fV as r,fW as c}from"./index-AdHZlOg8.js";import{h as d}from"./WorkerHandle-82R7TpVu.js";import{t as s}from"./workerHelper-J6dtcZLD.js";class l extends d{constructor(t){super("EdgeProcessingWorker","extract",{extract:e=>[e.dataBuffer],extractComponentsEdgeLocations:e=>[e.dataBuffer],extractEdgeLocations:e=>[e.dataBuffer]},t)}async process(t,e,a){return a?o(t):f(await this.invoke(new i(t),e))}async extractEdgeLocations(t,e){const a=await this.invokeMethod("extractEdgeLocations",new i(t),e);return s(a)}async extractComponentsEdgeLocations(t,e){const a=await this.invokeMethod("extractComponentsEdgeLocations",new i(t),e);return s(a)}}function f(n){return{regular:{instancesData:s(n.regular.instancesData),lodInfo:{lengths:new Float32Array(n.regular.lodInfo.lengths)}},silhouette:{instancesData:s(n.silhouette.instancesData),lodInfo:{lengths:new Float32Array(n.silhouette.lodInfo.lengths)}},averageEdgeLength:n.averageEdgeLength}}class i{constructor(t){this.dataBuffer=t.data.buffer,this.writerSettings=t.writerSettings,this.skipDeduplicate=t.skipDeduplicate,this.indices=r(t.indices)?t.indices:t.indices.buffer,this.indicesType=r(t.indices)?"Array":c(t.indices)?"Uint32Array":"Uint16Array",this.indicesLength=t.indicesLength}}export{l as a};
