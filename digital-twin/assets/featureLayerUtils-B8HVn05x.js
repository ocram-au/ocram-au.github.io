const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/CatalogLayer-Dw6-yNoY.js","assets/index-QRcEofMq.js","assets/index-CFzJqEXj.css","assets/utils-DueuOxL_.js","assets/ClassBreaksDefinition-Dq1_7B_p.js","assets/FeatureLayerSource-BP7_Xc5s.js","assets/External-EsgsOCkk.js","assets/MeshTransform-B0XFJDT5.js","assets/editingSupport-Bk9fTSap.js","assets/clientSideDefaults-80EnNCG5.js","assets/QueryEngineCapabilities-B_pTbIiR.js","assets/QueryTask-B6dm_uoO.js","assets/executeForIds-Dupk_4-E.js","assets/OrientedImageryLayer-C3KskIKw.js"])))=>i.map(i=>d[i]);
import{ez as w,J as m,dc as k,eA as O,F as u,eB as K,eC as f,eD as y,eE as V,eF as z,eG as j,_ as I,eH as H}from"./index-QRcEofMq.js";import{P as q,w as x,d as Q,v as W,$ as X,p as N,f as Z,I as g,m as E}from"./utils-Zod77vtC.js";import{a as ee,i as ae}from"./fetchService-pkGcciz5.js";const b="Feature Service",T="feature-layer-utils",te=`${T}-save`,re=`${T}-save-as`,p=`${T}-saveall`,d=`${T}-saveall-as`;function P(e){return{isValid:H(e)&&(!("dynamicDataSource"in e)||!e.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function v(e,a){const t=K(e,"portal-item");return a!=null&&a.isTable&&(t.layerContainerType="tables"),t}function R(e){const a=v(e),t=v(e);return t.layerContainerType="tables",{forLayers:a,forTables:t}}function D(e){const a=[],t=[];for(const{layer:r,layerJSON:o}of e)r.isTable?t.push(o):a.push(o);return{layers:a,tables:t}}function J(e){return D([e])}async function F(e,a){return/\/\d+\/?$/.test(e.url)?J(a[0]):G(a,e)}async function G(e,a){if(e.reverse(),!a)return D(e);const t=await se(a,e);for(const r of e)U(r.layer,r.layerJSON,t);return le(t,e),t}async function se(e,a){let t=await e.fetchData("json");if(ne(t))return t;t||(t={}),oe(t);const{layer:{url:r,customParameters:o,apiKey:s}}=a[0];return await ie(t,{url:r??"",customParameters:o,apiKey:s},a.map(n=>n.layer.layerId)),t}function ne(e){return!!(e&&Array.isArray(e.layers)&&Array.isArray(e.tables))}function oe(e){e.layers||(e.layers=[]),e.tables||(e.tables=[])}function le(e,a){const t=[],r=[];for(const{layer:o}of a){const{isTable:s,layerId:n}=o;s?r.push(n):t.push(n)}L(e.layers,t),L(e.tables,r)}function L(e,a){if(e.length<2)return;const t=[];for(const{id:r}of e)t.push(r);z(t.sort(S),a.slice().sort(S))&&e.sort((r,o)=>{const s=a.indexOf(r.id),n=a.indexOf(o.id);return s<n?-1:s>n?1:0})}function S(e,a){return e<a?-1:e>a?1:0}async function ie(e,a,t){const{url:r,customParameters:o,apiKey:s}=a,{serviceJSON:n,layersJSON:l}=await ee(r,{customParameters:o,apiKey:s}),i=_(e.layers,n.layers,t),c=_(e.tables,n.tables,t);e.layers=i.itemResources,e.tables=c.itemResources;const h=[...i.added,...c.added],B=l?[...l.layers,...l.tables]:[];await ce(e,h,r,B)}function _(e,a,t){const r=j(e,a,(s,n)=>s.id===n.id);e=e.filter(s=>!r.removed.some(n=>n.id===s.id));const o=r.added;return o.forEach(({id:s})=>{e.push({id:s})}),{itemResources:e,added:o.filter(({id:s})=>!t.includes(s))}}async function ce(e,a,t,r){const o=await ue(a),s=a.map(({id:n,type:l})=>new(o.get(l))({url:t,layerId:n,sourceJSON:r.find(({id:i})=>i===n)}));await Promise.allSettled(s.map(n=>n.load())),s.forEach(n=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=n;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};n.operationalLayerType!=="ArcGISFeatureLayer"&&(h.layerType=n.operationalLayerType),U(n,h,e)})}async function ue(e){const a=[];e.forEach(({type:o})=>{switch(ae(o)){case"CatalogLayer":a.push(I(()=>import("./CatalogLayer-Dw6-yNoY.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12])).then(s=>s.default));break;case"FeatureLayer":a.push(I(()=>import("./index-QRcEofMq.js").then(s=>s.Fv),__vite__mapDeps([1,2])).then(s=>s.default));break;case"OrientedImageryLayer":a.push(I(()=>import("./OrientedImageryLayer-C3KskIKw.js"),__vite__mapDeps([13,1,2])).then(s=>s.default))}});const t=await Promise.all(a),r=new Map;return e.forEach(({type:o},s)=>{r.set(o,t[s])}),r}function U(e,a,t){e.isTable?A(t.tables,a):A(t.layers,a)}function A(e,a){const t=e.findIndex(({id:r})=>r===a.id);t===-1?e.push(a):e[t]=a}function M(e,a){if(!e.length)throw new u(`${a}:missing-parameters`,"'layers' array should contain at least one feature layer")}function ye(e,a){const t=e.map(r=>r.portalItem.id);if(new Set(t).size>1)throw new u(`${a}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function Y(e,a){const t=e.map(r=>r.layerId);if(new Set(t).size!==t.length)throw new u(`${a}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function fe(e){M(e,p),await Promise.all(e.map(a=>a.load()));for(const a of e)N(a,p,P),Z({layer:a,itemType:b,errorNamePrefix:p});ye(e,p),Y(e,p)}function $(e,a){let t=0,r=0,o=0;for(const{layerType:s}of[...a.layers,...a.tables])switch(s){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}f(e,y.ORIENTED_IMAGERY_LAYER,t>0),f(e,y.SUBTYPE_GROUP_LAYER,r>0),f(e,y.SUBTYPE_GROUP_TABLE,o>0)}function C(e,a,t){V(a,y.METADATA),f(a,y.MULTI_LAYER,e.length>1),f(a,y.SINGLE_LAYER,e.length===1),f(a,y.TABLE,t.tables.length>0&&t.layers.length===0),$(a,t)}async function pe(e,a,t){$(a,t)}async function de(e,a,t){const{url:r,layerId:o,title:s,fullExtent:n,isTable:l}=e,i=m(r);a.url=((i==null?void 0:i.serverType)==="FeatureServer"?r:`${r}/${o}`)??null,a.title||(a.title=s),a.extent=null,l||n==null||(a.extent=await O(n)),C([e],a,t)}function me(e,a){for(const s of e){const n=s.parsedUrl.path,l=m(n);if(!(l==null?void 0:l.url.path))throw new u(`${a}:invalid-parameters`,E(s,`has unsupported url pattern: ${n}`),{layer:s});const c=l==null?void 0:l.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new u(`${a}:invalid-parameters`,E(s,`has unsupported server type: ${c}`),{layer:s});if(c==="MapServer"&&e.length>1)throw new u(`${a}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=m(e[0].parsedUrl.path),r=t==null?void 0:t.url.path;if(!e.every(s=>{const n=m(s.parsedUrl.path);return(n==null?void 0:n.url.path)===r}))throw new u(`${a}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function he(e){M(e,d),await Promise.all(e.map(a=>a.load()));for(const a of e)N(a,d,P);me(e,d),Y(e,d)}function we(e,a){$(e,a),g(e)}async function ve(e,a,t){let r=0;for(const{isTable:n}of e)n||r++;const o=e[0].parsedUrl.path,s=m(o);if(a.url=(s==null?void 0:s.serverType)==="FeatureServer"?s.url.path:o,a.title||(a.title=s.title),a.extent=null,r>0){const n=e.map(l=>l.fullExtent).filter(k).reduce((l,i)=>l.clone().union(i));n&&(a.extent=await O(n))}C(e,a,t),g(a)}async function Ie(e,a){return q({layer:e,itemType:b,validateLayer:P,createJSONContext:t=>v(t,e),createItemData:(t,r)=>F(r,[t]),errorNamePrefix:te,setItemProperties:pe},a)}async function $e(e,a){await fe(e);const t=e[0].portalItem,r=R(t),o=await Promise.all(e.map(n=>x(n,n.isTable?r.forTables:r.forLayers,a))),s=await F(t,e.map((n,l)=>({layer:n,layerJSON:o[l]})));return we(t,s),await t.update({data:s}),await Promise.all(e.slice(1).map(n=>n.portalItem.reload())),w(r.forLayers),w(r.forTables),t.clone()}async function Ee(e,a,t){return X({layer:e,itemType:b,validateLayer:P,createJSONContext:r=>v(r,e),createItemData:(r,o)=>Promise.resolve(J(r)),errorNamePrefix:re,newItem:a,setItemProperties:de},t)}async function Le(e,a,t){await he(e);const r=Q({itemType:b,errorNamePrefix:d,newItem:a}),o=R(r),s=await Promise.all(e.map(l=>x(l,l.isTable?o.forTables:o.forLayers,t))),n=await G(e.map((l,i)=>({layer:l,layerJSON:s[i]})));await ve(e,r,n),await W(r,n,t);for(const l of e)l.portalItem=r.clone();return w(o.forLayers),w(o.forTables),r}export{Ie as save,$e as saveAll,Le as saveAllAs,Ee as saveAs};
