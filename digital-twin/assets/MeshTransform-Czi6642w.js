import{e as a,y as s,cq as c,as as p,cC as h,cD as u,bc as y,cE as x,cF as r,cG as i,cH as A,cI as b,cJ as g,cK as M,cL as N,bM as e,cM as $,a as m,cN as v}from"./index-DgVS8EBo.js";var n;let o=n=class extends c{constructor(t){super(t),this.translation=p(),this.rotationAxis=h(u),this.rotationAngle=0,this.scale=y(1,1,1)}get rotation(){return x(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=r(i(t)),this.rotationAngle=A(t)}get localMatrix(){const t=e();return b(l,i(this.rotation),g(this.rotation)),M(t,l,this.translation,this.scale),t}get localMatrixInverse(){return N(e(),this.localMatrix)}equals(t){return this===t||t!=null&&$(this.localMatrix,t.localMatrix)}clone(){const t={translation:r(this.translation),rotationAxis:r(this.rotationAxis),rotationAngle:this.rotationAngle,scale:r(this.scale)};return new n(t)}};a([s({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"translation",void 0),a([s({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAxis",void 0),a([s({type:Number,nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAngle",void 0),a([s({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"scale",void 0),a([s()],o.prototype,"rotation",null),a([s()],o.prototype,"localMatrix",null),a([s()],o.prototype,"localMatrixInverse",null),o=n=a([m("esri.geometry.support.MeshTransform")],o);const l=v(),w=o;export{w as N};
