import{d0 as z,d1 as O,d2 as C,ar as A,d3 as G,d4 as R,as as Y,d5 as D,d6 as S,d7 as v,d8 as V,F as U,d9 as L}from"./index--YEV5yv0.js";import{m as E,B as P}from"./utils-Bd27E-OF.js";let f=null;const _=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function Q(e,t,n,i){const s=G(n)?R(n):null,o=s?Math.round((s.valid[1]-s.valid[0])/t.scale[0]):null;return e.map(l=>{const a=new Y(l.geometry);return D(t,a,a),l.geometry=s?k(a,o??0,i[0]):a,l})}function W(e,t=18,n,i,s){const o=new Float64Array(i*s);t=Math.round(L(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const I=S(n);for(const{geometry:p,attributes:N}of e){const{x:$,y:c}=p,g=Math.max(0,$-t),b=Math.max(0,c-t),M=Math.min(s,c+t),w=Math.min(i,$+t),h=+I(N);for(let d=b;d<M;d++)for(let m=g;m<w;m++){const x=d*i+m,F=V(m-$,d-c,t)*h,u=o[x]+=F;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function q(e){const t=_.exec(e);if(!t)return null;const{hh:n,mm:i,ss:s,ms:o}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(s)*v.seconds+Number(o||0)}async function X(e,t,n=!0){if(!t)return[];const{field:i,field2:s,field3:o,fieldDelimiter:l,fieldInfos:a,timeZone:I}=e,p=i&&(a==null?void 0:a.find(u=>u.name.toLowerCase()===i.toLowerCase())),N=!!p&&z(p),$=!!p&&O(p),c=e.valueExpression,g=e.normalizationType,b=e.normalizationField,M=e.normalizationTotal,w=[],h=e.viewInfoParams;let d=null,m=null;if(c){if(!f){const{arcadeUtils:u}=await C();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),d=f.createFunction(c),m=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new A(h.spatialReference)}):null}const x=e.fieldInfos,F=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return t.forEach(u=>{const y=u.attributes;let r;if(c){const T=F?{...u,layer:F}:u,j=f.createExecContext(T,m,I);r=f.executeFunction(d,j)}else y&&(r=y[i],s?(r=`${E(r)}${l}${E(y[s])}`,o&&(r=`${r}${l}${E(y[o])}`)):typeof r=="string"&&n&&($?r=r?new Date(r).getTime():null:N&&(r=r?q(r):null)));if(g&&typeof r=="number"&&isFinite(r)){const T=y&&parseFloat(y[b]);r=P(r,g,T,M)}w.push(r)}),w}function ee(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let s;return n==="field"?s="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(s=`(${t} > 0)`),s}function te(e,t,n){const i=t!=null?e+" >= "+t:"",s=n!=null?e+" <= "+n:"";let o="";return o=i&&s?B(i,s):i||s,o?"("+o+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function ne(e,t){if(e&&e.spatialRelationship!=="intersects")return new U(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function ie(e,t,n){const i=Z({layer:e,fields:t});if(i.length)return new U(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const s=H({layer:e,fields:t});return s.length?new U(n,"Unsupported fields: "+s.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function Z(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function H(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{ee as F,q as I,ne as M,te as N,ie as T,B as U,X as b,W as w,Q as x};
