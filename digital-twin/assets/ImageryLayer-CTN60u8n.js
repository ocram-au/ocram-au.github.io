const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/imageryUtils-DIaljGm-.js","assets/utils-BMCFtiwZ.js","assets/index-muoB0VoA.js","assets/index-DmBP__A0.css"])))=>i.map(i=>d[i]);
import{cs as C,vI as Qt,wf as kt,cp as j,e as i,y as o,cu as T,a as v,l1 as Se,af as $,c0 as se,hL as Qe,cZ as Wt,fI as te,oS as oe,wS as be,wT as ot,wU as lt,j as Ke,cy as Ue,bZ as M,fg as re,cq as Zt,wV as Kt,hI as Tt,lS as Ve,n as we,cz as At,kD as Xt,gC as A,gz as J,gB as U,gA as H,U as D,hH as ft,f7 as Ne,g6 as Fe,kR as Yt,b$ as er,fB as tr,wW as rr,fl as ir,t as x,$ as mt,k2 as sr,f as ar,E as nr,jO as or,h2 as lr,hD as ur,h4 as pr,bT as cr,bU as mr,h3 as dr,hj as yr,bS as hr,bV as fr,az as gr,z as wr,jm as Rr,hh as Ze,hJ as vr,X as br,bY as Sr,h6 as Ir,jp as xr,jq as Fr}from"./index-muoB0VoA.js";import{N as S,r as k,n as ve,s as He,e as Dr,c as Tr,d as jr,l as Pr,u as dt,b as Nr,v as Or,w as yt,j as _r,m as Cr,k as $r,p as Ar,t as Vr,B as Mr,U as Jr,L as Er,$ as qr,f as Gr}from"./fetchRasterInfo-DdgoSfpn.js";import{J as Vt,p as Mt,q as Lr,K as zr,M as Ur,n as Hr,a as Jt,g as ht,s as Br,L as Qr,j as Ot,P as kr,l as Wr}from"./dataUtils-DhEM9Rm4.js";import{t as _t}from"./imageBitmapUtils-BvFlmo_l.js";import{a as Zr,s as Kr}from"./executeForIds-CQzWgLBB.js";import"./ClassBreaksDefinition-B6OorDKY.js";const Xr={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Yr=new Set(["u1","u2","u4","u8","s8","u16","s16"]),ei={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},ti=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Et(s){return ti.has(s.type)}function gt(s,r){var e;if(!s||!r)return C(s||r);const n=C(s);if(n.functionDefinition&&r.rasterFunctionDefinition){const t=r.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),qt(n.functionDefinition.arguments,r),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else((e=r.functionName)==null?void 0:e.toLowerCase())!=="none"&&(Gt(n.functionArguments).Raster=r);return n}function qt(s,r){for(const n in s)n.toLowerCase()==="raster"&&(s[n].type==="RasterFunctionVariable"?(s[n]=r.rasterFunctionDefinition,s[n].type="RasterFunctionTemplate"):s[n].type==="RasterFunctionTemplate"&&qt(s[n].arguments,r))}function ae(s){const r=C(Xr[s.functionName+"Function"]),n=s.functionArguments;for(const e in n)e.toLowerCase()==="raster"?(r.arguments[e]=ae(n[e]),r.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(r.arguments[e].value=pi(n[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=n[e];return r}function ri(s,r){switch(r=r||{},s.type){case"raster-stretch":return ai(s,r);case"class-breaks":return ni(s,r);case"unique-value":return oi(s,r);case"raster-colormap":return li(s,r);case"vector-field":return ii(s,r);case"raster-shaded-relief":return si(s,r);case"flow":throw new Error("Unsupported rendering rule.")}}function Gt(s){const r=(s==null?void 0:s.Raster)??(s==null?void 0:s.raster);return r&&r.declaredClass==="esri.layers.support.RasterFunction"?Gt(r.functionArguments):s}const Ee={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function ii(s,r){const n=new S;n.functionName="VectorFieldRenderer";const{dataType:e,bandNames:t}=r,a=e==="vector-uv";let l,u;if(t&&t.length===2){const w=t.map(R=>R.toLowerCase());l=w.indexOf("magnitude"),u=w.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const p=s.rotationType==="arithmetic"?1:2,m=s.flowRepresentation==="flow-from"?0:1,c=s.visualVariables?s.visualVariables.find(w=>w.field==="Magnitude"):new Qt,d={magnitudeBandID:l,directionBandID:u,isUVComponents:a,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:ei[s.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};n.functionArguments=d;const h=ae(n);return r.convertToRFT?S.fromJSON({rasterFunctionDefinition:h}):n}function si(s,r){const n=r.convertToRFT;if(r.dataType!=="elevation"&&(r.dataType!=="generic"||r.bandCount!==1||r.pixelType!=="s16"&&r.pixelType!=="s32"&&r.pixelType!=="f32"&&r.pixelType!=="f64"))return new S;const e=new S;e.functionName="Hillshade";const t=s.hillshadeType==="traditional"?0:1,a=s.scalingType==="none"?1:3,l={HillshadeType:t,SlopeType:a,ZFactor:s.zFactor};return t===0&&(l.Azimuth=s.azimuth,l.Altitude=s.altitude),a===3&&(l.PSPower=s.pixelSizePower,l.PSZFactor=s.pixelSizeFactor),e.functionArguments=l,e.variableName="Raster",s.colorRamp&&(e.functionName="ShadedRelief",n?l.ColorRamp=Vt(s.colorRamp):l.Colormap=Mt(s.colorRamp)),n?new S({rasterFunctionDefinition:ae(e)}):e}function ai(s,r){var u;const n=r.convertToRFT,e=new S;e.functionName="Stretch";const t=Ee[Lr.toJSON(s.stretchType)],a="u8",l={StretchType:t,Statistics:ui(s.statistics??[]),DRA:s.dynamicRangeAdjustment,UseGamma:s.useGamma,Gamma:s.gamma,ComputeGamma:s.computeGamma};if(s.outputMin!=null&&(l.Min=s.outputMin),s.outputMax!=null&&(l.Max=s.outputMax),t===Ee.standardDeviation?(l.NumberOfStandardDeviations=s.numberOfStandardDeviations,e.outputPixelType=a):t===Ee.percentClip?(l.MinPercent=s.minPercent,l.MaxPercent=s.maxPercent,e.outputPixelType=a):t===Ee.minMax?e.outputPixelType=a:t===Ee.sigmoid&&(l.SigmoidStrengthLevel=s.sigmoidStrengthLevel),e.functionArguments=l,e.variableName="Raster",s.colorRamp){const p=s.colorRamp,m=new S;if(n)m.functionArguments={ColorRamp:Vt(p)};else{const c=zr(p,!0);if(c)m.functionArguments={colorRampName:c};else if(!r.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=s.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&((u=d.colorRamps)!=null&&u.length)&&d.colorRamps.forEach(h=>h.algorithm=h.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:d}}else m.functionArguments={Colormap:Mt(p)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=e,n?new S({rasterFunctionDefinition:ae(m)}):m}return n?new S({rasterFunctionDefinition:ae(e)}):e}function ni(s,r){const n=[],e=[],t=[],a=[],{pixelType:u,rasterAttributeTable:p}=r,m=p==null?null:p.features,c=Lt(p);if(c&&m&&Array.isArray(m)&&s.classBreakInfos){s.classBreakInfos.forEach((y,f)=>{var L;const b=(L=y.symbol)==null?void 0:L.color;let V;b!=null&&b.a&&y.minValue!=null&&y.maxValue!=null&&m.forEach(E=>{y.minValue!=null&&y.maxValue!=null&&(V=E.attributes[s.field],(V>=y.minValue&&V<y.maxValue||f===s.classBreakInfos.length-1&&V>=y.minValue)&&a.push([E.attributes[c],b.r,b.g,b.b]))})});const R=u?ut(a,u):a,g=new S;return g.functionName="Colormap",g.functionArguments={},g.functionArguments.Colormap=R,g.variableName="Raster",r.convertToRFT?new S({rasterFunctionDefinition:ae(g)}):g}s.classBreakInfos.forEach((R,g)=>{if(R.minValue==null||R.maxValue==null)return;const y=R.symbol&&R.symbol.color;y!=null&&y.a?(g===0?n.push(R.minValue,R.maxValue+1e-4):n.push(R.minValue+1e-4,R.maxValue+1e-4),e.push(g),a.push([g,y.r,y.g,y.b])):t.push(R.minValue,R.maxValue)});const d=u?ut(a,u):a,h=new S;h.functionName="Remap",h.functionArguments={InputRanges:n,OutputValues:e,NoDataRanges:t},h.variableName="Raster";const w=new S;return w.functionName="Colormap",w.functionArguments={Colormap:d,Raster:h},r.convertToRFT?new S({rasterFunctionDefinition:ae(w)}):w}function ut(s,r){const n=Yr.has(r)?kt(r):null;return n&&s.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),s}function Lt(s){if(s==null)return;const{fields:r}=s,n=r==null?void 0:r.find(e=>(e==null?void 0:e.name)&&e.name.toLowerCase()==="value");return n==null?void 0:n.name}function oi(s,r){var d,h;const n=[],{pixelType:e,rasterAttributeTable:t}=r,a=t==null?null:t.features,l=Lt(t),u=(h=(d=s.defaultSymbol)==null?void 0:d.color)==null?void 0:h.toRgb(),p=s.uniqueValueInfos;if(p)if(a){if(l){const w=new Map;p.forEach(g=>{const y=g.value,f=Ct(g);y!=null&&(f!=null&&f.a)&&w.set(String(y),f.toRgb())});const R=s.field;R&&a.forEach(({attributes:g})=>{const y=String(g[R]),f=g[l],b=w.get(y);b?n.push([f,...b]):u&&n.push([f,...u])})}}else for(let w=0;w<p.length;w++){const R=p[w],g=Ct(R),y=+R.value;if(g!=null&&g.a){if(isNaN(y))return null;n.push([y,g.r,g.g,g.b])}}const m=e?ut(n,e):n,c=new S;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",r.convertToRFT?new S({rasterFunctionDefinition:ae(c)}):c}function Ct(s){var r,n,e,t,a;return((r=s.symbol)==null?void 0:r.type)==="polygon-3d"?(t=(e=(n=s.symbol.symbolLayers)==null?void 0:n.find(l=>l.type==="fill"))==null?void 0:e.material)==null?void 0:t.color:(a=s.symbol)==null?void 0:a.color}function li(s,r){const n=s.extractColormap();if(!n||n.length===0)return null;const{pixelType:e}=r,t=e?ut(n,e):n,a=new S;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=t,r.convertToRFT?new S({rasterFunctionDefinition:ae(a)}):a}function ui(s){const r=[];return s==null||s.forEach(n=>{const e=n;if(Array.isArray(e))r.push(e);else{if(e.min==null||e.max==null)return;const t=[e.min,e.max,e.avg||0,e.stddev||0];r.push(t)}}),r}function pi(s){const r=[],n=[];return s.forEach(e=>{r.push(e[0]),n.push(Ur([...e.slice(1),255]))}),{type:"RasterColormap",values:r,colors:n}}let O=class extends j{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(r,n,e){this.layer.version<10.3||(n[e]=r)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(r,n,e){this.format&&this.format.toLowerCase().includes("jpg")&&r!=null&&(n[e]=r)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(r,n,e){this.format==="lerc"&&r!=null&&(n[e]=r)}get format(){var r;return((r=this.layer.renderer)==null?void 0:r.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(r,n,e){this.format==="lerc"&&this.layer.version>=10.5&&(n[e]=r)}get version(){const r=this.layer;return r.commitProperty("bandIds"),r.commitProperty("format"),r.commitProperty("compressionQuality"),r.commitProperty("compressionTolerance"),r.commitProperty("interpolation"),r.commitProperty("noData"),r.commitProperty("noDataInterpretation"),r.commitProperty("mosaicRule"),r.commitProperty("rasterFunction"),r.commitProperty("adjustAspectRatio"),r.commitProperty("pixelFilter"),r.commitProperty("definitionExpression"),r.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(r){this._set("version",r)}get mosaicRule(){const r=this.layer;let n=r.mosaicRule;const e=r.definitionExpression;return n?e&&e!==n.where&&(n=n.clone(),n.where=e):e&&(n=new k({where:e})),n}get rasterFunction(){var l,u;const r=this.layer;let{rasterFunction:n}=r;const e=r.pixelFilter,t=!r.format||r.format.includes("jpg")||r.format.includes("png");n=this._addResampleRasterFunction(n);const a=(l=r.multidimensionalSubset)==null?void 0:l.areaOfInterest;return a&&(n=ci(n,a)),t&&!e&&((u=r.renderer)==null?void 0:u.type)!=="vector-field"&&(n=this.combineRendererWithRenderingRule(n)),n}combineRendererWithRenderingRule(r){const n=this.layer,{rasterInfo:e,renderer:t}=n;return r=r||n.rasterFunction,!t||!Et(t)?r:gt(ri(t,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandNames:e.bandInfos.map(({name:a})=>a),convertColorRampToColormap:n.version<10.6,convertToRFT:!!(r!=null&&r.rasterFunctionDefinition),bandCount:e.bandCount}),r)}_addResampleRasterFunction(r){var a;if(((a=this.layer.renderer)==null?void 0:a.type)!=="vector-field"||(r==null?void 0:r.functionName)==="Resample")return r;const n=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,e=this.layer.serviceRasterInfo.pixelSize;let t=new S({functionName:"Resample",functionArguments:{ResamplingType:n,InputCellSize:e}});return t=r!=null&&r.rasterFunctionDefinition?new S({rasterFunctionDefinition:ae(t)}):t,gt(t,r)}};function ci(s,r){const n=new S({functionName:"Clip",functionArguments:{ClippingGeometry:r.toJSON(),ClippingType:1}});return gt(n,s)}i([o()],O.prototype,"layer",void 0),i([o({json:{write:!0}})],O.prototype,"adjustAspectRatio",null),i([T("adjustAspectRatio")],O.prototype,"writeAdjustAspectRatio",null),i([o({json:{write:!0}})],O.prototype,"bandIds",null),i([o({json:{write:!0}})],O.prototype,"compression",void 0),i([o({json:{write:!0}})],O.prototype,"compressionQuality",null),i([T("compressionQuality")],O.prototype,"writeCompressionQuality",null),i([o({json:{write:!0}})],O.prototype,"compressionTolerance",null),i([T("compressionTolerance")],O.prototype,"writeCompressionTolerance",null),i([o({json:{write:!0}})],O.prototype,"format",null),i([o({type:String,json:{read:{reader:ve.read},write:{writer:ve.write}}})],O.prototype,"interpolation",null),i([o({json:{write:!0}})],O.prototype,"noData",null),i([o({type:String,json:{read:{reader:He.read},write:{writer:He.write}}})],O.prototype,"noDataInterpretation",null),i([o({json:{write:!0}})],O.prototype,"pixelType",void 0),i([o({json:{write:!0}})],O.prototype,"lercVersion",void 0),i([T("lercVersion")],O.prototype,"writeLercVersion",null),i([o({type:Number})],O.prototype,"version",null),i([o({json:{write:!0}})],O.prototype,"mosaicRule",null),i([o({json:{write:!0,name:"renderingRule"}})],O.prototype,"rasterFunction",null),O=i([v("esri.layers.support.ExportImageServiceParameters")],O);let he=class extends Se(j){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};i([o({type:$,json:{read:!0}})],he.prototype,"fromGeometry",void 0),i([o({type:$,json:{read:!0,write:!0}})],he.prototype,"toGeometry",void 0),i([o({json:{write:!0}})],he.prototype,"objectIds",void 0),i([o({type:String,json:{write:!0}})],he.prototype,"where",void 0),i([o({type:Number,json:{write:!0}})],he.prototype,"maxCount",void 0),he=i([v("esri.rest.support.FindImagesParameters")],he);const mi=he,zt=s=>{let r=class extends s{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return i([o({json:{write:!0}})],r.prototype,"make",void 0),i([o({json:{write:!0}})],r.prototype,"model",void 0),i([o({json:{write:!0}})],r.prototype,"focalLength",void 0),i([o({json:{write:!0}})],r.prototype,"pixelSize",void 0),i([o({json:{write:!0}})],r.prototype,"rows",void 0),i([o({json:{write:!0}})],r.prototype,"cols",void 0),r=i([v("esri.rest.support.CameraInfoMixin")],r),r};let K=class extends zt(j){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(r,n){n.acquisitionDate=r==null?void 0:r.getTime()}};i([o({json:{write:!0}})],K.prototype,"id",void 0),i([o({json:{name:"uri",write:!0}})],K.prototype,"referenceUri",void 0),i([o({type:Date,json:{write:!0}})],K.prototype,"acquisitionDate",void 0),i([T("acquisitionDate")],K.prototype,"writeAcquisitionDate",null),i([o({json:{write:!0}})],K.prototype,"cameraID",void 0),i([o({type:$,json:{write:!0}})],K.prototype,"center",void 0),i([o({type:$,json:{write:!0}})],K.prototype,"perspectiveCenter",void 0),i([o({json:{write:!0}})],K.prototype,"orientation",void 0),K=i([v("esri.rest.support.ImageInspectionInfo")],K);const di=K;let Xe=class extends j{constructor(){super(...arguments),this.images=null}};i([o({type:[di],json:{write:!0}})],Xe.prototype,"images",void 0),Xe=i([v("esri.rest.support.FindImagesResult")],Xe);const yi=Xe;var wt;let De=wt=class extends j{constructor(s){super(s),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new wt(C({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};i([o({type:[String],json:{name:"angleName",write:!0}})],De.prototype,"angleNames",void 0),i([o({type:$,json:{write:!0}})],De.prototype,"point",void 0),i([o({type:se,json:{write:!0}})],De.prototype,"spatialReference",void 0),i([o({type:Qe,json:{write:!0}})],De.prototype,"rasterId",void 0),De=wt=i([v("esri.rest.support.ImageAngleParameters")],De);const hi=De;let Oe=class extends j{constructor(r){super(r),this.north=null,this.up=null,this.spatialReference=null}};i([o({type:Number,json:{write:!0}})],Oe.prototype,"north",void 0),i([o({type:Number,json:{write:!0}})],Oe.prototype,"up",void 0),i([o({type:se,json:{write:!0}})],Oe.prototype,"spatialReference",void 0),Oe=i([v("esri.rest.support.ImageAngleResult")],Oe);const fi=Oe,W=new Wt({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ee=class extends j{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};i([o()],ee.prototype,"type",void 0),i([o({type:W.apiValues,json:{read:W.read,write:W.write}})],ee.prototype,"measureOperation",void 0),i([o({type:k,json:{write:!0}})],ee.prototype,"mosaicRule",void 0),i([o({type:$,json:{write:!0}})],ee.prototype,"pixelSize",void 0),i([o({json:{write:!0}})],ee.prototype,"raster",void 0),ee=i([v("esri.rest.support.BaseImageMeasureParameters")],ee);var Rt;let ue=Rt=class extends ee{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new Rt(C({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([o({types:oe,json:{name:"fromGeometry",read:!0,write:!0}})],ue.prototype,"geometry",void 0),i([T("geometry")],ue.prototype,"writeGeometry",null),i([o({type:W.apiValues,json:{write:W.write}})],ue.prototype,"measureOperation",null),i([o({json:{read:!0}})],ue.prototype,"is3D",void 0),i([o({type:String,json:{read:be.read,write:be.write}})],ue.prototype,"linearUnit",void 0),i([o({type:String,json:{read:ot.read,write:ot.write}})],ue.prototype,"areaUnit",void 0),ue=Rt=i([v("esri.rest.support.ImageAreaParameters")],ue);const gi=ue;let ge=class extends j{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};i([o({type:Number,json:{read:!0,write:!0}})],ge.prototype,"value",void 0),i([o({type:String,json:{read:!0,write:!0}})],ge.prototype,"displayValue",void 0),i([o({type:Number,json:{read:!0,write:!0}})],ge.prototype,"uncertainty",void 0),ge=i([v("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],ge);let Me=class extends ge{constructor(){super(...arguments),this.unit=null}};i([o({type:String,json:{read:be.read,write:be.write}})],Me.prototype,"unit",void 0),Me=i([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],Me);let Ye=class extends ge{constructor(){super(...arguments),this.unit=null}};i([o({type:String,json:{read:ot.read,write:ot.write}})],Ye.prototype,"unit",void 0),Ye=i([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],Ye);let Be=class extends ge{constructor(){super(...arguments),this.unit=null}};i([o({type:String,json:{read:lt.read,write:lt.write}})],Be.prototype,"unit",void 0),Be=i([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],Be);let Re=class extends j{constructor(){super(...arguments),this.name=null,this.sensorName=null}};i([o({type:String,json:{read:!0,write:!0}})],Re.prototype,"name",void 0),i([o({type:String,json:{read:!0,write:!0}})],Re.prototype,"sensorName",void 0),Re=i([v("esri.rest.support.BaseImageMeasureResult")],Re);let qe=class extends Re{constructor(){super(...arguments),this.area=null,this.perimeter=null}};i([o({type:Ye,json:{read:!0,write:!0}})],qe.prototype,"area",void 0),i([o({type:Me,json:{read:!0,write:!0}})],qe.prototype,"perimeter",void 0),qe=i([v("esri.rest.support.ImageAreaResult")],qe);const wi=qe;let et=class extends Se(j){constructor(){super(...arguments),this.outSpatialReference=null}};i([o({type:se,json:{name:"outSR",write:!0}})],et.prototype,"outSpatialReference",void 0),et=i([v("esri.rest.support.ImageBoundaryParameters")],et);const Ri=et;let _e=class extends j{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(r,n){return r==null?null:r.rings?Ke.fromJSON(r):Ue.fromJSON(r)}};i([o({type:Number,json:{write:!0}})],_e.prototype,"area",void 0),i([o({json:{name:"shape",write:!0}})],_e.prototype,"geometry",void 0),i([M("geometry")],_e.prototype,"readGeometry",null),_e=i([v("esri.rest.support.ImageBoundaryResult")],_e);const vi=_e;var vt;let ie=vt=class extends ee{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new vt(C({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([o({type:$,json:{read:!0,write:!0}})],ie.prototype,"fromGeometry",void 0),i([T("fromGeometry")],ie.prototype,"writeFromGeometry",null),i([o({type:$,json:{read:!0,write:!0}})],ie.prototype,"toGeometry",void 0),i([o({type:W.apiValues,json:{write:W.write}})],ie.prototype,"measureOperation",null),i([o({json:{read:!0}})],ie.prototype,"is3D",void 0),i([o({type:String,json:{read:be.read,write:be.write}})],ie.prototype,"linearUnit",void 0),i([o({type:String,json:{read:lt.read,write:lt.write}})],ie.prototype,"angularUnit",void 0),ie=vt=i([v("esri.rest.support.ImageDistanceParameters")],ie);const bi=ie;let Ce=class extends Re{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};i([o({type:Me,json:{read:!0,write:!0}})],Ce.prototype,"distance",void 0),i([o({type:Be,json:{read:!0,write:!0}})],Ce.prototype,"azimuthAngle",void 0),i([o({type:Be,json:{read:!0,write:!0}})],Ce.prototype,"elevationAngle",void 0),Ce=i([v("esri.rest.support.ImageDistanceResult")],Ce);const Si=Ce;let pe=class extends Se(j){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(r,n,e){r!=null&&(n.geometryType=te(r),n[e]=JSON.stringify(r.toJSON()))}};i([o({types:oe,json:{read:re,write:!0}})],pe.prototype,"geometry",void 0),i([T("geometry")],pe.prototype,"writeGeometry",null),i([o({json:{write:!0}})],pe.prototype,"objectIds",void 0),i([Zt(Kt,{ignoreUnknown:!1,name:"spatialRel"})],pe.prototype,"spatialRelationship",void 0),i([o({type:Tt,json:{name:"time",write:!0}})],pe.prototype,"timeExtent",void 0),i([o({type:String,json:{write:!0}})],pe.prototype,"where",void 0),pe=i([v("esri.rest.support.ImageGPSInfoParameters")],pe);const Ii=pe;let tt=class extends zt(j){constructor(){super(...arguments),this.id=null}};i([o({json:{write:!0}})],tt.prototype,"id",void 0),tt=i([v("esri.rest.support.CameraInfo")],tt);const xi=tt;let X=class extends j{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(r,n){n.acquisitionDate=r==null?void 0:r.getTime()}};i([o({json:{write:!0}})],X.prototype,"id",void 0),i([o({json:{write:!0}})],X.prototype,"name",void 0),i([o({type:Date,json:{write:!0}})],X.prototype,"acquisitionDate",void 0),i([T("acquisitionDate")],X.prototype,"writeAcquisitionDate",null),i([o({json:{write:!0}})],X.prototype,"cameraID",void 0),i([o({type:$,json:{write:!0}})],X.prototype,"center",void 0),i([o({json:{write:!0}})],X.prototype,"gps",void 0),i([o({json:{write:!0}})],X.prototype,"orientation",void 0),X=i([v("esri.rest.support.ImageGPSInfo")],X);const Fi=X;let Ge=class extends j{constructor(){super(...arguments),this.images=null,this.cameras=null}};i([o({type:[Fi],json:{write:!0}})],Ge.prototype,"images",void 0),i([o({type:[xi],json:{write:!0}})],Ge.prototype,"cameras",void 0),Ge=i([v("esri.rest.support.ImageGPSInfoResult")],Ge);const Di=Ge;var bt;let ce=bt=class extends ee{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}get measureOperation(){return this.operationType}clone(){return new bt(C({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([o({type:$,json:{read:!0}})],ce.prototype,"fromGeometry",void 0),i([T("fromGeometry")],ce.prototype,"writeFromGeometry",null),i([o({type:$,json:{read:!0,write:!0}})],ce.prototype,"toGeometry",void 0),i([o({type:W.apiValues,json:{write:W.write}})],ce.prototype,"measureOperation",null),i([o({json:{read:!0}})],ce.prototype,"operationType",void 0),i([o({type:String,json:{read:be.read,write:be.write}})],ce.prototype,"linearUnit",void 0),ce=bt=i([v("esri.rest.support.ImageHeightParameters")],ce);const Ti=ce;let rt=class extends Re{constructor(){super(...arguments),this.height=null}};i([o({type:Me,json:{read:!0,write:!0}})],rt.prototype,"height",void 0),rt=i([v("esri.rest.support.ImageHeightResult")],rt);const ji=rt;var St;let N=St=class extends j{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=JSON.stringify(s.toJSON()))}set mosaicRule(s){let r=s;r!=null&&r.mosaicMethod&&(r=k.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}writeMosaicRule(s,r,n){s!=null&&(r[n]=JSON.stringify(s.toJSON()))}get renderingRule(){return Ve(we.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(s){Ve(we.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",s)}get renderingRules(){return Ve(we.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(s){Ve(we.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",s)}set rasterFunction(s){let r=s;r!=null&&r.rasterFunction&&(r=S.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}writeRasterFunction(s,r,n){s!=null&&(r[n]=JSON.stringify(s.toJSON())),s.rasterFunctionDefinition&&(r[n]=JSON.stringify(s.rasterFunctionDefinition))}writeRasterFunctions(s,r,n){s!=null&&(r[n]=JSON.stringify(s.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(s,r,n){s!=null&&(r[n]=JSON.stringify(s))}writeTimeExtent(s,r,n){if(s!=null){const e=s.start!=null?s.start.getTime():null,t=s.end!=null?s.end.getTime():null;r[n]=e!=null?t!=null?`${e},${t}`:`${e}`:null}}clone(){return new St(C({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};i([o({json:{write:!0}})],N.prototype,"geometry",void 0),i([T("geometry")],N.prototype,"writeGeometry",null),i([o({type:k,json:{write:!0}})],N.prototype,"mosaicRule",null),i([T("mosaicRule")],N.prototype,"writeMosaicRule",null),i([o({type:S})],N.prototype,"renderingRule",null),i([o({type:[S]})],N.prototype,"renderingRules",null),i([o({type:S,json:{write:!0,name:"renderingRule"}})],N.prototype,"rasterFunction",null),i([T("rasterFunction")],N.prototype,"writeRasterFunction",null),i([o({type:[S],json:{write:!0,name:"renderingRules"}})],N.prototype,"rasterFunctions",void 0),i([T("rasterFunctions")],N.prototype,"writeRasterFunctions",null),i([o({type:$,json:{write:!0}})],N.prototype,"pixelSize",void 0),i([T("pixelSize")],N.prototype,"writePixelSize",null),i([o({type:Boolean,json:{write:!0}})],N.prototype,"returnGeometry",void 0),i([o({type:Boolean,json:{write:!0}})],N.prototype,"returnCatalogItems",void 0),i([o({type:Boolean,json:{write:!0}})],N.prototype,"returnPixelValues",void 0),i([o({type:Number,json:{write:!0}})],N.prototype,"maxItemCount",void 0),i([o({type:Tt,json:{write:{target:"time"}}})],N.prototype,"timeExtent",void 0),i([T("timeExtent")],N.prototype,"writeTimeExtent",null),i([o({json:{write:!0}})],N.prototype,"raster",void 0),i([o({json:{write:!0}})],N.prototype,"viewId",void 0),i([o({type:Boolean,json:{write:!0}})],N.prototype,"processAsMultidimensional",void 0),N=St=i([v("esri.rest.support.ImageIdentifyParameters")],N);const Ut=N;let Y=class extends j{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};i([o({json:{write:!0}})],Y.prototype,"catalogItemVisibilities",void 0),i([o({type:At,json:{write:!0}})],Y.prototype,"catalogItems",void 0),i([o({type:$,json:{write:!0}})],Y.prototype,"location",void 0),i([o({json:{write:!0}})],Y.prototype,"name",void 0),i([o({json:{write:!0}})],Y.prototype,"objectId",void 0),i([o({json:{write:!0}})],Y.prototype,"processedValues",void 0),i([o({json:{write:!0}})],Y.prototype,"properties",void 0),i([o({json:{write:!0}})],Y.prototype,"value",void 0),Y=i([v("esri.rest.support.ImageIdentifyResult")],Y);const Pi=Y;var It;let $e=It=class extends j{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(s,r,n){r.geometries={geometryType:"esriGeometryPoint",geometries:s.map(e=>e.toJSON())}}clone(){var s;return new It({geometries:((s=this.geometries)==null?void 0:s.map(r=>r.clone()))??[],rasterId:this.rasterId})}};i([o({type:[$],json:{write:!0}})],$e.prototype,"geometries",void 0),i([T("geometries")],$e.prototype,"writeGeometry",null),i([o({type:Qe,json:{write:!0}})],$e.prototype,"rasterId",void 0),$e=It=i([v("esri.rest.support.ImagePixelLocationParameters")],$e);const Ni=$e;let it=class extends j{constructor(){super(...arguments),this.geometries=null}};i([o({json:{write:!0}})],it.prototype,"geometries",void 0),it=i([v("esri.rest.support.ImagePixelLocationResult")],it);const Oi=it;var xt;let Te=xt=class extends ee{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}get measureOperation(){const{is3D:s,geometry:r}=this;return r.type==="point"?s?"point-3D":"point":s?"centroid-3D":"centroid"}clone(){return new xt(C({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};i([o({types:oe,json:{name:"fromGeometry",read:re}})],Te.prototype,"geometry",void 0),i([T("geometry")],Te.prototype,"writeGeometry",null),i([o({type:W.apiValues,json:{read:W.read,write:W.write}})],Te.prototype,"measureOperation",null),i([o({json:{read:!0}})],Te.prototype,"is3D",void 0),Te=xt=i([v("esri.rest.support.ImagePointParameters")],Te);const _i=Te;let st=class extends Re{constructor(){super(...arguments),this.point=null}};i([o({type:$,json:{name:"point.value",read:!0,write:!0}})],st.prototype,"point",void 0),st=i([v("esri.rest.support.ImagePointResult")],st);const Ci=st;var Ft;let G=Ft=class extends j{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=s.toJSON())}set locations(s){if(s!=null&&s.length){const r=new Xt({spatialReference:s[0].spatialReference,points:s.map(({x:n,y:e})=>[n,e])});this._set("locations",s),this.geometry=r}}clone(){return new Ft(C({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};i([o({types:oe,json:{read:re}})],G.prototype,"geometry",void 0),i([T("geometry")],G.prototype,"writeGeometry",null),i([o()],G.prototype,"locations",null),i([o({type:String,json:{type:ve.jsonValues,read:ve.read,write:ve.write}})],G.prototype,"interpolation",void 0),i([o({type:k,json:{write:!0}})],G.prototype,"mosaicRule",void 0),i([o({type:[String],json:{write:!0}})],G.prototype,"outFields",void 0),i([o({type:$,json:{write:!0}})],G.prototype,"pixelSize",void 0),i([o({type:String,json:{write:!0}})],G.prototype,"raster",void 0),i([o({type:Boolean,json:{write:!0}})],G.prototype,"returnFirstValueOnly",void 0),i([o({type:Number,json:{write:!0}})],G.prototype,"sampleDistance",void 0),i([o({type:Number,json:{write:!0}})],G.prototype,"sampleCount",void 0),i([o({type:Number,json:{write:!0}})],G.prototype,"sliceId",void 0),i([o({type:Tt,json:{read:{source:"time"},write:{target:"time"}}})],G.prototype,"timeExtent",void 0),G=Ft=i([v("esri.rest.support.ImageSampleParameters")],G);const $i=G;let me=class extends j{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};i([o({json:{write:!0}})],me.prototype,"attributes",void 0),i([o({type:$,json:{write:!0}})],me.prototype,"location",void 0),i([o({json:{write:!0}})],me.prototype,"locationId",void 0),i([o({json:{write:!0}})],me.prototype,"rasterId",void 0),i([o({json:{write:!0}})],me.prototype,"resolution",void 0),i([o({json:{write:!0}})],me.prototype,"pixelValue",void 0),me=i([v("esri.rest.support.ImageSample")],me);const Ai=me;let at=class extends j{constructor(){super(...arguments),this.samples=null}};i([o({type:[Ai],json:{write:!0}})],at.prototype,"samples",void 0),at=i([v("esri.rest.support.ImageSampleResult")],at);const Vi=at;let je=class extends Se(j){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(r,n,e){n.geometries=r!=null&&r.length?{geometryType:te(r[0]),geometries:r.map(t=>({...t.toJSON(),spatialReference:void 0}))}:null}};i([o({types:[oe]})],je.prototype,"geometries",void 0),i([T("geometries")],je.prototype,"writeGeometries",null),i([o({type:[Qe],json:{write:!0}})],je.prototype,"rasterIds",void 0),i([o({type:se,json:{name:"outSR",write:!0}})],je.prototype,"outSpatialReference",void 0),je=i([v("esri.rest.support.ImageToMapMultirayParameters")],je);const Mi=je;let de=class extends Se(j){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(r,n,e){r!=null&&(n.geometryType=te(r),n[e]={...r.toJSON(),spatialReference:void 0})}};i([o({types:oe,json:{read:re,write:!0}})],de.prototype,"geometry",void 0),i([T("geometry")],de.prototype,"writeGeometry",null),i([o({json:{write:!0}})],de.prototype,"rasterId",void 0),i([o({type:se,json:{name:"outSR",write:!0}})],de.prototype,"outSpatialReference",void 0),i([o({json:{name:"options.DOff",write:!0}})],de.prototype,"depthOffset",void 0),i([o({json:{name:"options.Adjust",write:!0}})],de.prototype,"adjust",void 0),de=i([v("esri.rest.support.ImageToMapParameters")],de);const Ji=de;let Le=class extends Se(j){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};i([o({type:String,json:{name:"uri",write:!0}})],Le.prototype,"referenceUri",void 0),i([o({type:Number,json:{write:!0}})],Le.prototype,"rasterId",void 0),Le=i([v("esri.rest.support.ImageUrlParameters")],Le);const Ei=Le;let nt=class extends j{constructor(){super(...arguments),this.url=null}};i([o({json:{name:"imageURL",write:!0}})],nt.prototype,"url",void 0),nt=i([v("esri.rest.support.ImageUrlResult")],nt);const qi=nt;let Pe=class extends Se(j){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]=JSON.stringify(s))}};i([o({types:oe,json:{read:re,write:!0}})],Pe.prototype,"geometry",void 0),i([T("geometry")],Pe.prototype,"writeGeometry",null),i([o({json:{write:!0}})],Pe.prototype,"rasterId",void 0),i([o({json:{name:"options.VisibleOnly",write:!0}})],Pe.prototype,"visibleOnly",void 0),Pe=i([v("esri.rest.support.MapToImageParameters")],Pe);const Gi=Pe;let fe=class extends j{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(r,n){return r.spatialReference||(r={...r,spatialReference:n.Shape.spatialReference}),$.fromJSON(r)}};i([o({types:oe,json:{name:"Shape",read:re,write:!0}})],fe.prototype,"geometry",void 0),i([o({json:{name:"Length",write:!0}})],fe.prototype,"length",void 0),i([o({json:{name:"Area",write:!0}})],fe.prototype,"area",void 0),i([o({json:{name:"Center",write:!0}})],fe.prototype,"center",void 0),i([M("center")],fe.prototype,"readCenter",null),fe=i([v("esri.rest.support.MeasureAreaFromImageResult")],fe);const Li=fe;var Dt;let Ae=Dt=class extends j{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(s,r,n){s!=null&&(r.geometryType=te(s),r[n]={...s.toJSON(),spatialReference:void 0})}clone(){const s=C({geometry:this.geometry,rasterId:this.rasterId});return new Dt(s)}};i([o({types:oe,json:{name:"fromGeometry",read:re,write:!0}})],Ae.prototype,"geometry",void 0),i([T("geometry")],Ae.prototype,"writeGeometry",null),i([o({json:{write:!0}})],Ae.prototype,"rasterId",void 0),Ae=Dt=i([v("esri.rest.support.MeasureFromImageParameters")],Ae);const zi=Ae;let ze=class extends j{constructor(){super(...arguments),this.geometry=null,this.length=null}};i([o({types:oe,json:{name:"Shape",read:re,write:!0}})],ze.prototype,"geometry",void 0),i([o({json:{name:"Length",write:!0}})],ze.prototype,"length",void 0),ze=i([v("esri.rest.support.MeasureLengthFromImageResult")],ze);const Ui=ze;function jt(s){const r=s==null?void 0:s.time;if(r&&(r.start!=null||r.end!=null)){const n=[];r.start!=null&&n.push(r.start),r.end==null||n.includes(r.end)||n.push(r.end),s.time=n.join(",")}}async function Ht(s,r,n){r=A(Dr,r);const e=J(s),t=r.geometry?[r.geometry]:[],a=await Ne(t),l=r.toJSON();jt(l);const u=a==null?void 0:a[0];u!=null&&(l.geometry=ne(u));const p=U({...e.query,f:"json",...l});return H(p,n)}async function Hi(s,r,n){var p,m,c;const e=(r=A(hi,r)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),(m=(p=r==null?void 0:r.point)==null?void 0:p.spatialReference)!=null&&m.imageCoordinateSystem&&(e.point.spatialReference=ct(r.point.spatialReference)),(c=r==null?void 0:r.spatialReference)!=null&&c.imageCoordinateSystem&&(e.spatialReference=Je(r.spatialReference));const t=J(s),a=U({...t.query,f:"json",...e}),l=H(a,n),{data:u}=await D(`${t.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new se({wkid:0,imageCoordinateSystem:u.spatialReference}):se.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new fi(u)}async function Bi(s,r,n){var m;const e=(r=A(Ni,r)).toJSON(),{geometries:t}=r;if(t)for(let c=0;c<t.length;c++)(m=t[c].spatialReference)!=null&&m.imageCoordinateSystem&&(e.geometries.geometries[c].spatialReference=ct(t[c].spatialReference));const a=J(s),l=U({...a.query,f:"json",...e}),u=H(l,n),{data:p}=await D(`${a.path}/computePixelLocation`,u);return Oi.fromJSON(p)}async function Qi(s,r,n){const e=await Ht(s,r,n),t=J(s),{data:a}=await D(`${t.path}/computeStatisticsHistograms`,e),{statistics:l}=a;return l!=null&&l.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:a.histograms}}async function ki(s,r,n){const e=await Ht(s,r,n),t=J(s),{data:a}=await D(`${t.path}/computeHistograms`,e);return{histograms:a.histograms}}async function Wi(s,r,n){var d,h;const e=(r=A($i,r)).toJSON();jt(e),(d=e.outFields)!=null&&d.length&&(e.outFields=e.outFields.join(","));const t=await Ne(r.geometry),a=t==null?void 0:t[0];a!=null&&(e.geometry=ne(a));const l=J(s),u=U({...l.query,f:"json",...e}),p=H(u,n),{data:m}=await D(`${l.path}/getSamples`,p),c=(h=m==null?void 0:m.samples)==null?void 0:h.map(w=>{const R=w.value==="NaN"||w.value===""?null:w.value.split(" ").map(g=>Number(g));return{...w,pixelValue:R}});return Vi.fromJSON({samples:c})}async function $t(s,r,n){r=A(Ut,r);const e=J(s),t=r.geometry?[r.geometry]:[];return Ne(t).then(a=>{const l=r.toJSON(),u=a==null?void 0:a[0];u!=null&&(l.geometry=JSON.stringify(ne(u)));const p=U({...e.query,f:"json",...l}),m=H(p,n);return D(e.path+"/identify",m)}).then(a=>Pi.fromJSON(a.data))}async function Zi(s,r,n){r=A(Ti,r);const e=await pt(s,r,[r.fromGeometry,r.toGeometry],n);return ji.fromJSON(e)}async function Ki(s,r,n){r=A(gi,r);const e=await pt(s,r,[r.geometry],n);return wi.fromJSON(e)}async function Xi(s,r,n){r=A(_i,r);const e=await pt(s,r,[r.geometry],n);return Ci.fromJSON(e)}async function Yi(s,r,n){r=A(bi,r);const e=await pt(s,r,[r.fromGeometry,r.toGeometry],n);return Si.fromJSON(e)}async function pt(s,r,n,e){const t=J(s),a=await Ne(n),l=r.toJSON();a[0]!=null&&(l.fromGeometry=JSON.stringify(ne(a[0]))),a[1]!=null&&(l.toGeometry=JSON.stringify(ne(a[1])));const u=U({...t.query,f:"json",...l}),p=H(u,e),{data:m}=await D(t.path+"/measure",p);return m}async function es(s,r,n){const e=await Bt(s,r,n);return Ui.fromJSON(e)}async function ts(s,r,n){const e=await Bt(s,r,n);return Li.fromJSON(e)}async function Bt(s,r,n){r=A(zi,r);const e=J(s),t=r.toJSON(),a=U({...e.query,f:"json",...t}),l=H(a,n),{data:u}=await D(e.path+"/measureFromImage",l);return u}function ne(s){var n;const r=s.toJSON();return(n=s.spatialReference)!=null&&n.imageCoordinateSystem&&(r.spatialReference=ct(s.spatialReference)),r}function ct(s){const{imageCoordinateSystem:r}=s;if(r){const{id:n,referenceServiceName:e}=r;return n!=null?e?{icsid:n,icsns:e}:{icsid:n}:{ics:r}}return s.toJSON()}function Je(s,r){if(!s.imageCoordinateSystem)return ft(s);const n=ct(s),{icsid:e,icsns:t}=n;return e==null||t!=null&&!(r!=null&&r.toLowerCase().includes("/"+t.toLowerCase()+"/"))?JSON.stringify(n):`0:${e}`}async function rs(s,r,n){r=A(Ri,r);const e=J(s),t=r.toJSON();r.outSpatialReference&&(t.outSR=Je(r.outSpatialReference));const a=U({...e.query,f:"json",...t}),l=H(a,n),{data:u}=await D(e.path+"/queryBoundary",l);return vi.fromJSON(u)}async function is(s,r,n){var d,h;const e=(r=A(Ii,r)).toJSON();jt(e),(d=e.objectIds)!=null&&d.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const t=await Ne(r.geometry),a=t==null?void 0:t[0];a!=null&&(e.geometry=ne(a));const l=(a==null?void 0:a.spatialReference)??((h=r.geometry)==null?void 0:h.spatialReference);l&&(e.inSR=Je(l));const u=J(s),p=U({...u.query,f:"json",...e}),m=H(p,n),{data:c}=await D(`${u.path}/queryGPSInfo`,m);return Di.fromJSON(c)}async function ss(s,r,n){const e=(r=A(Ji,r)).toJSON();r.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=ne(r.geometry)),r.depthOffset&&r.adjust||delete e.options;const t=J(s),a=U({...t.query,f:"json",...e}),l=H(a,n),{data:u}=await D(`${t.path}/imageToMap`,l);return re(u)}async function as(s,r,n){var p;const e=(r=A(Mi,r)).toJSON();(p=r.rasterIds)!=null&&p.length&&(e.rasterIds=r.rasterIds.join(","));const t=J(s),a=U({...t.query,f:"json",...e}),l=H(a,n),{data:u}=await D(`${t.path}/imageToMapMultiray`,l);return re(u)}async function ns(s,r,n){var d;const e=(r=A(Gi,r)).toJSON(),t=await Ne(r.geometry),a=t==null?void 0:t[0];a!=null&&(e.geometry=ne(a)),r.visibleOnly||delete e.options;const l=(a==null?void 0:a.spatialReference)??((d=r.geometry)==null?void 0:d.spatialReference);l&&(e.inSR=Je(l));const u=J(s),p=U({...u.query,f:"json",...e}),m=H(p,n),{data:c}=await D(`${u.path}/mapToImage`,m);return re(c)}async function os(s,r,n){const e=(r=A(Ei,r)).toJSON(),t=J(s),a=U({...t.query,f:"json",...e}),l=H(a,n),{data:u}=await D(`${t.path}/getImageUrl`,l);return qi.fromJSON(u)}async function ls(s,r,n){var m;const e=(r=A(mi,r)).toJSON(),t=await Ne([r.fromGeometry,r.toGeometry]);t[0]!=null&&(e.fromGeometry=ne(t[0]),t[0].spatialReference&&(e.inSR=Je(t[0].spatialReference))),t[1]!=null&&(e.toGeometry=ne(t[1])),(m=r.objectIds)!=null&&m.length&&(e.objectIds=e.objectIds.join(","));const a=J(s),l=U({...a.query,f:"json",...e}),u=H(l,n),{data:p}=await D(`${a.path}/find`,u);return yi.fromJSON(p)}async function us(s,r,n){var L,E;const e=J(s),t=U({...e==null?void 0:e.query,f:"json"}),a=H(t,n),l=`${e==null?void 0:e.path}/${r}/info`,u=D(`${l}`,a),p=D(`${l}/keyProperties`,a),m=await Promise.allSettled([u,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let h=null;(L=c.statistics)!=null&&L.length&&(h=c.statistics.map(F=>({min:F[0],max:F[1],avg:F[2],stddev:F[3]})));const w=Ue.fromJSON(c.extent),R=Math.ceil(w.width/c.pixelSizeX-.1),g=Math.ceil(w.height/c.pixelSizeY-.1),y=w.spatialReference,f=new $({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:y}),b=(E=c.histograms)!=null&&E.length?c.histograms:null,V=new Hr({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new Jt({width:R,height:g,bandCount:c.bandCount,extent:w,spatialReference:y,pixelSize:f,pixelType:c.pixelType.toLowerCase(),statistics:h,histograms:b,keyProperties:d,storageInfo:V})}const ps=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),cs=rr(or,{min:0,max:255});function ms(s){if(!s)return null;const r=JSON.stringify(s).match(/"rasterFunction":"(.*?")/gi),n=r==null?void 0:r.map(e=>e.slice(18,-1));return n?n.join("/"):null}const ds=s=>{let r=class extends s{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new O({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(a=>typeof a=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,a){e!=null&&this.format!=="lerc"&&(t[a]=e)}writeCompressionTolerance(e,t,a){this.format==="lerc"&&e!=null&&(t[a]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?k.fromJSON(t):null}get fieldsIndex(){return this.fields?new tr(this.fields):null}set format(e){e&&ps.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t!=null&&t.mosaicMethod&&(t=k.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const a=e||t.mosaicRule;return a?k.fromJSON(a):this._isMosaicRuleSupported(t)?k.fromJSON(t):null}writeMosaicRule(e,t,a){let l=this.mosaicRule;const u=this.definitionExpression;l?u&&u!==l.where&&(l=l.clone(),l.where=u):u&&(l=new k({where:u})),this._isValidCustomizedMosaicRule(l)&&(t[a]=l.toJSON())}writeNoData(e,t,a){e!=null&&typeof e=="number"&&(t[a]=cs(e))}readObjectIdField(e,t){if(!e){const a=t.fields.find(l=>l.type==="esriFieldTypeOID"||l.type==="oid");e=a==null?void 0:a.name}return e}get parsedUrl(){return ir(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,a){var p,m;const l=(m=(p=t==null?void 0:t.layerDefinition)==null?void 0:p.drawingInfo)==null?void 0:m.renderer,u=Nr(l,a);return u==null?null:(u.type==="vector-field"&&t.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),Et(u)||we.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,a){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var m;const e=this._rasterAttributeTableFieldPrefix,t=new Fe({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new Fe({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),l=new Fe({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?C(this.fields):[];u.push(a),(m=this.capabilities)!=null&&m.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(t),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(c=>c.name.toLowerCase()==="none")&&u.push(l),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(c=>c.name.toLowerCase()!=="none").forEach(c=>{u.push(new Fe({name:"Raster.ServicePixelValue."+c.name,alias:c.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new Fe({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new Fe({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=this.rasterInfo??{};if(p!=null){const c=p.fields.filter(d=>d.type!=="esriFieldTypeOID"&&d.name.toLowerCase()!=="value").map(d=>{const h=C(d);return h.name=e+d.name,h});u=u.concat(c)}return u}get renderingRule(){return Ve(we.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this.rasterFunction}set renderingRule(e){Ve(we.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}set rasterFunction(e){let t=e;t!=null&&t.rasterFunction&&(t=S.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const a=t.rasterFunctionInfos;return t.renderingRule||a!=null&&a.length&&a[0].name!=="None"?this._isRFTJson(t.renderingRule)?S.fromJSON({rasterFunctionDefinition:t.renderingRule}):S.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const a=e||t.extent.spatialReference;return a?se.fromJSON(a):null}readPixelType(e){return dt.fromJSON(e)||e}writePixelType(e,t,a){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(t[a]=dt.toJSON(e))}readVersion(e,t){let a=t.currentVersion;return a||(a=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),a}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let a=e;const{renderer:l,symbolizer:u,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&l&&u&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(l.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(u.bind(),await d.updateSymbolizer(u,t),this._cachedRendererJson=l.toJSON());const h=await d.symbolize({bandIds:m,...e},t);a={extent:e.extent,pixelBlock:h}}else a={extent:e.extent,pixelBlock:u.symbolize({bandIds:m,...e})}}return a}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeAngles)throw new x("imagery-layer:compute-angles","this operation is not supported on the input image service");return Hi(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputePixelLocation)throw new x("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Bi(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeHistograms)throw new x("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),ki(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new x("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Qi(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(e.operationType==="base-and-top"?a.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?a.mensuration.supportsHeightFromBaseAndTopShadow:a.mensuration.supportsHeightFromTopAndTopShadow))throw new x("imagery-layer:measure-height","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Zi(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a.mensuration.supportsAreaAndPerimeter&&(!e.is3D||a.mensuration.supports3D)))throw new x("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Ki(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a.mensuration.supportsDistanceAndAngle&&(!e.is3D||a.mensuration.supports3D)))throw new x("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Yi(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a.mensuration.supportsPointOrCentroid&&(!e.is3D||a.mensuration.supports3D)))throw new x("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Xi(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new x("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new x("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return es(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new x("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new x("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return ts(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return t!=null?t.get(e):void 0}getFieldDomain(e,t){const a=this.getField(e);return a?a.domain:null}async fetchImage(e,t,a,l={}){if(e==null||t==null||a==null)throw new x("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:l.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(e,t,a,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const f=document.createElement("canvas");return f.width=t,f.height=a,l.returnImageBitmap?{imageBitmap:await _t(f,`${n(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:f}}const{bandIds:d,rasterInfo:h}=this,w=((d==null?void 0:d.length)||h.bandCount)??0,R=t*a,g=h.pixelType,y=[];for(let f=0;f<w;f++)y.push(ht.createEmptyBand(g,R));return{pixelData:{pixelBlock:new ht({width:t,height:a,pixels:y,mask:new Uint8Array(R),pixelType:g}),extent:e}}}const p=!!l.requestAsImageElement&&!this.pixelFilter,m=p&&!!l.returnImageBitmap,c={imageServiceParameters:u,imageProps:{extent:e,width:t,height:a,format:this.format},requestAsImageElement:p,returnImageBitmap:m,signal:l.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(e){return D(n(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new x("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):D(n(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>At.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const a={...t,query:this._getQueryParams()};return us(n(this.parsedUrl),e,a)}async getCatalogItemICSInfo(e,t){var Ie,xe,le,Pt,Nt;const{data:a}=await D(n(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),l=a==null?void 0:a.ics;if(!l)return;let u=null;try{u=(await D(n(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!(u!=null&&u.spatialReference))return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?D(n(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(I=>I.data).catch(()=>({})):{},m=u.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:ft(m),outSR:"0:"+e},d=D(n(this.parsedUrl)+"/project",{query:this._getQueryParams(c),...t}).then(I=>I.data).catch(()=>({})),h=5,w=(u.xmin+u.xmax)/2,R=(u.ymax-u.ymin)/(h+1),g=u.ymin+R,y=[];for(let I=0;I<h;I++)y.push({x:w,y:g+R*I});const f={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:y}),inSR:ft(m),outSR:"0:"+e},b=D(n(this.parsedUrl)+"/project",{query:this._getQueryParams(f),...t}).then(I=>I.data).catch(()=>({})),V=await Promise.all([p,d,b]);let L=V[0].ipxf;if(L==null){const I=(Ie=l.geodataXform)==null?void 0:Ie.xf_0;((xe=I==null?void 0:I.name)==null?void 0:xe.toLowerCase())==="topup"&&((le=I==null?void 0:I.coefficients)==null?void 0:le.length)===6&&(L={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:I.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const E=Ue.fromJSON((Nt=(Pt=V[1])==null?void 0:Pt.geometries)==null?void 0:Nt[0]);E&&(E.spatialReference=new se({wkid:0,imageCoordinateSystem:l}));const F=V[2].geometries?V[2].geometries.filter(I=>(I==null?void 0:I.x)!=null&&I.y!=null&&I.x!=="NaN"&&I.y!=="NaN"):[],B=F.length;if(B<3)return{ics:l,icsToPixelTransform:L,icsExtent:E,northDirection:null};let Z=0,_=0,P=0,z=0;for(let I=0;I<B;I++)Z+=F[I].x,_+=F[I].y,P+=F[I].x*F[I].x,z+=F[I].x*F[I].y;const q=(B*z-Z*_)/(B*P-Z*Z);let ye=0;const ke=F[h-1].x>F[0].x,We=F[h-1].y>F[0].y;return q===1/0?ye=We?90:270:q===0?ye=ke?0:180:q>0?ye=ke?180*Math.atan(q)/Math.PI:180*Math.atan(q)/Math.PI+180:q<0&&(ye=We?180+180*Math.atan(q)/Math.PI:360+180*Math.atan(q)/Math.PI),{ics:l,icsToPixelTransform:L,icsExtent:E,northDirection:ye}}async generateRasterInfo(e,t){var p;if(e=A(S,e),this.serviceRasterInfo&&(!e||((p=e.functionName)==null?void 0:p.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const a=ms(e);if(!a)throw new x("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[a])return this._functionRasterInfos[a];const l={...t,query:this._getQueryParams()},u=Or(n(this.parsedUrl),e,l);this._functionRasterInfos[a]=u;try{return await u}catch(m){throw this._functionRasterInfos[a]=null,m}}getExportImageServiceParameters(e,t,a,l){var y;e=e.clone().shiftCentralMeridian();const u=Je(e.spatialReference,n(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const h=(y=this.rasterFunction)==null?void 0:y.rasterFunctionDefinition,w=!this.renderer||this.renderer.type==="raster-stretch";if(m!=null&&m.length&&this._hasRasterFunction(this.rasterFunction)&&!h&&w){const f={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")f.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=f;else if(d.rasterFunction==="Colormap"){const b=d.rasterFunctionArguments.Raster;(b==null?void 0:b.rasterFunction)==="Stretch"?(f.rasterFunctionArguments.Raster=b.rasterFunctionArguments.Raster,b.rasterFunctionArguments.Raster=f):(f.rasterFunctionArguments.Raster=b,d.rasterFunctionArguments.Raster=f)}else f.rasterFunctionArguments.Raster=d,d=f;p.bandIds=void 0}else p.bandIds=m==null?void 0:m.join(",");Array.isArray(c)&&c.length>0&&(p.noData=c.join(","));const R=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(R.isOutSide)return null;p.mosaicRule=R.mosaicRule!=null?JSON.stringify(R.mosaicRule):null,l=R.timeExtent,p.renderingRule=this._getRenderingRuleString(S.fromJSON(d));const g={};if(l!=null){const{start:f,end:b}=l.toJSON();f&&b&&f===b?g.time=""+f:f==null&&b==null||(g.time=`${f??"null"},${b??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+a,...p,...g}}async getSamples(e,t){const a=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(a!=null&&a.operations.supportsGetSamples))throw new x("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=C(e);const{raster:l}=this;return l&&e.raster==null&&(e.raster=l),Wi(this.url,e,this._getRequestOptions(t))}async identify(e,t){var p;if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsIdentify)throw new x("imagery-layer:identify","identify operation is not supported on the input image service");e=C(e),this.version<10.91&&((p=e.geometry)==null?void 0:p.type)==="extent"&&(e.geometry=Ke.fromExtent(e.geometry));const a=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(a.isOutSide)throw new x("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=a.timeExtent,e.mosaicRule=a.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),l&&e.raster==null&&(e.raster=l),$t(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMap)throw new x("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return ss(n(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new x("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return as(n(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMapToImage)throw new x("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return ns(n(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsFindImages)throw new x("imagery-layer:find-images","findImages operation is not supported on the input image service");return ls(n(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsGetImageUrl)throw new x("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return os(n(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new mt({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryBoundary)throw new x("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},rs(n(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),sr(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Zr(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new x("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},is(n(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Kr(this.url,e,t)}async queryVisibleRasters(e,t){var E,F,B,Z;if(!e)throw new x("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:a,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:p}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const h="raster.servicepixelvalue",w=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(m=e.outFields.some(_=>!_.toLowerCase().includes(h)),this.version>=10.4)){const _=e.outFields.filter(z=>z.toLowerCase().includes(h)&&z.length>h.length).map(z=>{const q=z.slice(h.length+1);return[this._updateRenderingRulesFunctionName(q,w),q]});c=_.map(z=>new S({functionName:z[0]})),d=_.map(z=>z[1]);const{rasterFunction:P}=this;c.length===0?P!=null&&P.functionName?(c.push(P),d.push(P.functionName)):c=null:P!=null&&P.functionName&&!c.some(z=>z.functionName===P.functionName)&&(c.push(P),d.push(P.functionName))}const R=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:g}=this;let y=e.timeExtent||this.timeExtent;if(g){const{isOutside:_,intersection:P}=yt(g,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:(E=this.exportImageServiceParameters.mosaicRule)==null?void 0:E.multidimensionalDefinition});if(_)throw new x("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");(P==null?void 0:P.timeExtent)!=null&&(y=P.timeExtent)}const f=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y);let b=e.geometry;this.version<10.91&&(b==null?void 0:b.type)==="extent"&&(b=Ke.fromExtent(b));const V=this._getQueryParams({geometry:b,timeExtent:y,mosaicRule:f,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:c,pixelSize:a,returnCatalogItems:m,returnGeometry:R,raster:this.raster,maxItemCount:u?1:null});delete V.f;const L=new Ut(V);try{await this._generateRasterInfo(this.rasterFunction);const _=await $t(this.url,L,{signal:t==null?void 0:t.signal,query:{...this.customParameters}}),P=e.outFields,z=_.value!=null&&_.value.toLowerCase().includes("nodata");if(!(m&&!R&&((F=_==null?void 0:_.catalogItems)!=null&&F.features.length)&&(p||!z)))return this._processVisibleRastersResponse(_,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:P});const q=this.objectIdField||"ObjectId",ye=((B=_.catalogItems)==null?void 0:B.features)??[],ke=ye.map(xe=>{var le;return(le=xe.attributes)==null?void 0:le[q]}),We=new mt({objectIds:ke,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[q]}),Ie=await this.queryRasters(We);return(Z=Ie==null?void 0:Ie.features)!=null&&Z.length&&Ie.features.forEach(xe=>{ye.forEach(le=>{le.attributes[q]===xe.attributes[q]&&(le.geometry=new Ke(xe.geometry),e.outSpatialReference!=null&&(le.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(_,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:P})}catch{throw new x("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const a=D(n(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.statistics}),l=D(n(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.histograms}),u=await Promise.all([a,l]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,t){const a=this._rasterJobHandler.instance;return a?a.createFlowMesh(e,t):Br(e.meshType,e.simulationSettings,e.flowData,t.signal!=null?t.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return _r(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,a=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):Cr(n(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),$r(p,t),p)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([a,l,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),we.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([ar(()=>this.rasterFunction,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;m.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(e,t){var g;const a=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(e==null||l==null||t==null||(a==null?void 0:a.startField)==null)return e;const{startField:u}=a,p=l.variables.some(y=>y.dimensions.some(f=>f.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=(g=e.multidimensionalDefinition)==null?void 0:g.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const m=e.multidimensionalDefinition.filter(y=>y.dimensionName===p),c=t.start!=null?t.start.getTime():null,d=t.end!=null?t.end.getTime():null,h=c==null||d==null||c===d,w=h?[c||d]:[[c,d]],R=this.version>=10.8;if(m.length)m.forEach(y=>{y.dimensionName===p&&(R?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=h,y.values=w))});else if(!R){const y=e.multidimensionalDefinition.filter(f=>f.variableName!=null&&f.dimensionName==null);y.length?y.forEach(f=>{f.dimensionName=p,f.isSlice=h,f.values=w}):e.multidimensionalDefinition.push(new Ar({variableName:"",dimensionName:p,isSlice:h,values:w}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQuery)throw new x("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?A(mt,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new Vr;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:a}=this;return e.type==="unique-value"&&this._hasRasterFunction(a)&&(t==null?void 0:t.bandCount)===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&Mr(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var a;let t=this.sourceJSON;if(!t){const{data:l,ssl:u}=await D(n(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=l,this.sourceJSON=t,u&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((a=t.capabilities)==null?void 0:a.toLowerCase().split(",").map(l=>l.trim()).indexOf("tilesonly"))>-1)throw new x("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var l;if(!e)return!1;const t=this._isMosaicDataset(e),a=e.currentVersion>=10.71&&e.hasMultidimensions&&!(((l=e.fields)==null?void 0:l.length)>1);return t||a}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:t,functionArguments:a}=e,l=(t==null?void 0:t.toLowerCase())==="resample",u=(a==null?void 0:a.ResampleType)||(a==null?void 0:a.resampleType);return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var l,u;const t=this._isPicture(),{rasterInfo:a}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&a.bandCount>=3){const m=Jr(a);!m||a.bandCount===3&&m[0]===0&&m[1]===1&&m[2]===2||(this.bandIds=m)}e||(e=Er(a,{bandIds:this.bandIds,variableName:this.rasterFunction?null:(u=(l=this.mosaicRule)==null?void 0:l.multidimensionalDefinition)==null?void 0:u[0].variableName}));const p=qr(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=p,this.symbolizer.rasterInfo=a):this.symbolizer=new Qr({rendererJSON:p,rasterInfo:a}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){(e==null?void 0:e.renderingRule)!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:a}=this;return{raster:t,viewId:a,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e==null?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,a){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Ot(e,t,a)}async _getRasterFunctionInfos(e){var a;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(a=(await D(n(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:a.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:a,returnImageBitmap:l,signal:u}=e;if(a&&this._canRequestImageElement(t.format)){const g=`${n(this.parsedUrl)}/exportImage`,{data:y}=await D(g,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return y instanceof Blob?{imageBitmap:await _t(y,g,u),params:t}:{imageOrCanvasElement:y,params:t}}const p=this._initJobHandler(),m=D(n(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),c=(await Promise.all([m,p]))[0].data,d=t.format||"jpgpng";let h=d;if(h!=="bsq"&&h!=="bip"&&(h=kr(c)),!h)throw new x("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const w={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(h==="png"||h==="jpg")?Ot(c,{useCanvas:!0,...t},w):this._decodePixelBlock(c,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:d},w)),extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this.defaultMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var a;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=Gr(e,{multidimensionalSubset:this.multidimensionalSubset});if(t!=null&&t.length>0){this.mosaicRule=this.mosaicRule||new k;const l=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&((a=this.rasterFunction.functionName)==null?void 0:a.toLowerCase())!=="none"&&t.forEach(u=>u.variableName=""),t=t.filter(({variableName:u,dimensionName:p})=>u&&u!=="*"||p),!(l!=null&&l.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var V,L,E;t=t||{};const a=e.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:p,templateFields:m}=t,c=e.processedValues;let d=(V=e.catalogItems)==null?void 0:V.features,h=((E=(L=e.properties)==null?void 0:L.Values)==null?void 0:E.map(F=>F.replaceAll(/ /gi,", ")))||[];const w=this.objectIdField||"ObjectId",R=typeof a=="string"&&a.toLowerCase().includes("nodata"),g=[];if(a&&!d&&!R){const F={};F[w]=0,h=[a],d=[new nr({geometry:this.fullExtent,attributes:F})]}if(!d)return[];let y,f,b;this._updateResponseFieldNames(d,m),R&&!u&&(d=[]);for(let F=0;F<d.length;F++){if(y=d[F],a!=null){if(f=h[F],b=this.rasterFunction&&c&&c.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?c[l.indexOf(this.rasterFunction.functionName)]:a,f.toLowerCase()==="nodata"&&!u)continue;const B="Raster.ItemPixelValue",Z="Raster.ServicePixelValue";y.attributes[B]=f,y.attributes[Z]=b,this._updateFeatureWithMagDirValues(y,f);const _=this.fields&&this.fields.length>0;let P=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?_?f:a:b;this.rasterFunction||(P=_?f:a),this._updateFeatureWithRasterAttributeTableValues(y,P)}if(y.sourceLayer=y.layer=this,p&&this._updateFeatureWithDomainValues(y),l&&c&&l.length===c.length)for(let B=0;B<l.length;B++){const Z="Raster.ServicePixelValue."+l[B];y.attributes[Z]=c[B]}g.push(d[F])}return g}_processMultidimensionalIntersection(e,t,a){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:t,mosaicRule:a=this._combineMosaicRuleWithTimeExtent(a,t)};if(l){const{isOutside:u,intersection:p}=yt(l,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};(p==null?void 0:p.timeExtent)!=null&&(t=p.timeExtent)}if(a=this._combineMosaicRuleWithTimeExtent(a,t),a==null?void 0:a.multidimensionalDefinition){const{isOutside:u}=yt(l,{multidimensionalDefinition:a.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:a}}_updateFeatureWithRasterAttributeTableValues(e,t){const a=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(a==null)return;const{features:l,fields:u}=a,p=u.map(c=>c.name).find(c=>c.toLowerCase()==="value");if(!p)return;const m=l.filter(c=>c.attributes[p]===(t!=null?parseInt(t,10):null));m&&m[0]&&u.forEach(c=>{const d=this._rasterAttributeTableFieldPrefix+c.name;e.attributes[d]=m[0].attributes[c.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const a=t.split(/,\s*/).map(c=>parseFloat(c)),l=a.map(c=>[c]),u=a.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new ht({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new Ue(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:Wr([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(a=>a.domain&&a.domain.type==="coded-value");t!=null&&t.forEach(a=>{const l=e.attributes[a.name];if(l!=null){const u=a.domain.codedValues.find(p=>p.code===l);u&&(e.attributes[a.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const a=this.fieldsIndex;a!=null&&e.forEach(l=>{var u;if(l!=null&&l.attributes)for(const p of t){const m=(u=a.get(p))==null?void 0:u.name;m&&m!==p&&(l.attributes[p]=l.attributes[m],delete l.attributes[m])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return(e==null?void 0:e.functionName)!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const a=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(a)?t.get(a):e}_isRFTJson(e){return(e==null?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:a,rasterFunction:l}=this;l&&"rasterFunction"in e&&e.rasterFunction==null&&(e.rasterFunction=l),a&&e.mosaicRule==null&&(e.mosaicRule=a),t&&e.raster==null&&(e.raster=t)}_readCapabilities(e){var f;const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(b=>b.trim()):["image","catalog"],{currentVersion:a,advancedQueryCapabilities:l,maxRecordCount:u}=e,p=t.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!(!e.spatialReference&&!((f=e.extent)!=null&&f.spatialReference)),d=t.includes("edit"),h=t.includes("mensuration")&&c,w=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(b=>b.trim()),R=h&&w.includes("basic"),g=this._isMosaicDataset(e)&&t.includes("catalog"),y=t.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:a>=11.2&&g,supportsImageToMapMultiray:a>=11.2&&g,supportsMapToImage:a>=11.2&&g,supportsFindImages:a>=11.2&&g,supportsGetImageUrl:a>=11.3&&y,supportsMeasure:h,supportsMeasureFromImage:a>=11.2,supportsDownload:y,supportsQuery:g&&e.fields&&e.fields.length>0,supportsGetSamples:a>=10.2&&p,supportsProject:a>=10.3&&p,supportsComputeStatisticsHistograms:a>=10.4&&p,supportsQueryBoundary:a>=10.6&&p,supportsCalculateVolume:a>=10.7&&m,supportsComputePixelLocation:a>=10.7&&g,supportsComputeAngles:a>=10.91,supportsQueryGPSInfo:a>=11.2&&g,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!(l!=null&&l.supportsStatistics),supportsOrderBy:!!(l!=null&&l.supportsOrderBy),supportsDistinct:!!(l!=null&&l.supportsDistinct),supportsPagination:!!(l!=null&&l.supportsPagination),supportsStandardizedQueriesOnly:!!(l!=null&&l.useStandardizedQueries),supportsPercentileStatistics:!!(l!=null&&l.supportsPercentileStatistics),supportsCentroid:!!(l!=null&&l.supportsReturningGeometryCentroid),supportsDistance:!!(l!=null&&l.supportsQueryWithDistance),supportsExtent:!!(l!=null&&l.supportsReturningQueryExtent),supportsGeometryProperties:!!(l!=null&&l.supportsReturningGeometryProperties),supportsHavingClause:!!(l!=null&&l.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(l!=null&&l.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:R,supportsAreaAndPerimeter:R,supportsPointOrCentroid:R,supportsHeightFromBaseAndTop:h&&w.includes("base-top height"),supportsHeightFromBaseAndTopShadow:h&&w.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:h&&w.includes("top-top shadow height"),supports3D:h&&w.includes("3d")}}}};function n(e){return(e==null?void 0:e.path)??""}return i([o({clonable:!1})],r.prototype,"_functionRasterInfos",void 0),i([o({clonable:!1})],r.prototype,"_rasterJobHandler",void 0),i([o({clonable:!1})],r.prototype,"_cachedRendererJson",void 0),i([o({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),i([M("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),i([o({readOnly:!0})],r.prototype,"_rasterAttributeTableFieldPrefix",void 0),i([o({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),i([o()],r.prototype,"adjustAspectRatio",void 0),i([o({type:[Qe],json:{write:!0}})],r.prototype,"bandIds",void 0),i([M("bandIds")],r.prototype,"readBandIds",null),i([o({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),i([M("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),i([o({type:Number})],r.prototype,"compressionQuality",void 0),i([T("compressionQuality")],r.prototype,"writeCompressionQuality",null),i([o({type:Number})],r.prototype,"compressionTolerance",void 0),i([T("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),i([o({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),i([o({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),i([M("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),i([o({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),i([o({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),i([o()],r.prototype,"rasterInfo",void 0),i([o({readOnly:!0,type:[Fe]})],r.prototype,"fields",void 0),i([o({readOnly:!0})],r.prototype,"fieldsIndex",null),i([o({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],r.prototype,"format",null),i([M("service","format",["serviceDataType"])],r.prototype,"readFormat",null),i([o({type:Ue})],r.prototype,"fullExtent",void 0),i([o({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),i([o({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),i([o({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),i([o({type:String,json:{type:ve.jsonValues,read:ve.read,write:ve.write}})],r.prototype,"interpolation",void 0),i([o()],r.prototype,"minScale",void 0),i([M("service","minScale")],r.prototype,"readMinScale",null),i([o()],r.prototype,"maxScale",void 0),i([M("service","maxScale")],r.prototype,"readMaxScale",null),i([o({type:k})],r.prototype,"mosaicRule",null),i([M("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),i([T("mosaicRule")],r.prototype,"writeMosaicRule",null),i([o()],r.prototype,"multidimensionalInfo",void 0),i([o({type:Tr,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),i([o({json:{type:Qe}})],r.prototype,"noData",void 0),i([T("noData")],r.prototype,"writeNoData",null),i([o({type:String,json:{type:He.jsonValues,read:He.read,write:He.write}})],r.prototype,"noDataInterpretation",void 0),i([o({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),i([M("objectIdField")],r.prototype,"readObjectIdField",null),i([o({readOnly:!0})],r.prototype,"geometryType",void 0),i([o({})],r.prototype,"typeIdField",void 0),i([o({})],r.prototype,"types",void 0),i([o({readOnly:!0})],r.prototype,"parsedUrl",null),i([o({type:Function})],r.prototype,"pixelFilter",void 0),i([o()],r.prototype,"raster",void 0),i([o({readOnly:!0})],r.prototype,"sourceType",void 0),i([M("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),i([o()],r.prototype,"viewId",void 0),i([o({types:Pr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:jr,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],r.prototype,"renderer",null),i([M("renderer")],r.prototype,"readRenderer",null),i([T("renderer")],r.prototype,"writeRenderer",null),i([o({clonable:!1})],r.prototype,"symbolizer",void 0),i([o(Yt)],r.prototype,"opacity",void 0),i([o({readOnly:!0})],r.prototype,"rasterFields",null),i([o({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),i([o({type:S})],r.prototype,"renderingRule",null),i([o({type:S,json:{name:"renderingRule"}})],r.prototype,"rasterFunction",null),i([M("rasterFunction",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRasterFunction",null),i([o({readOnly:!0})],r.prototype,"serviceDataType",void 0),i([o({readOnly:!0,type:se})],r.prototype,"spatialReference",void 0),i([M("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),i([o({json:{type:dt.jsonValues}})],r.prototype,"pixelType",void 0),i([M("pixelType")],r.prototype,"readPixelType",null),i([T("pixelType")],r.prototype,"writePixelType",null),i([o({constructOnly:!0,type:Jt})],r.prototype,"serviceRasterInfo",void 0),i([o()],r.prototype,"sourceJSON",void 0),i([o(er)],r.prototype,"url",void 0),i([o({readOnly:!0})],r.prototype,"version",void 0),i([M("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=i([v("esri.layers.mixins.ArcGISImageService")],r),r};let Q=class extends lr(ur(pr(cr(mr(ds(dr(yr(hr(fr(Se(br))))))))))){constructor(...s){super(...s),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=gr(async(r,n,e)=>{const{save:t,saveAs:a}=await Sr(()=>import("./imageryUtils-DIaljGm-.js"),__vite__mapDeps([0,1,2,3]));switch(r){case Ze.SAVE:return t(this,n);case Ze.SAVE_AS:return a(this,e,n)}})}normalizeCtorArgs(s,r){return typeof s=="string"?{url:s,...r}:s}load(s){const r=s!=null?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(wr).then(()=>this._fetchService(r))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(s){this._set("legendEnabled",s)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(s){this._set("listMode",s)}writeOperationalLayerType(s,r,n){var t;const e=((t=this.renderer)==null?void 0:t.type)==="vector-field";r[n]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var s;return!(!this.raster||!((s=this.url)!=null&&s.toLowerCase().includes("/rasterrendering/imageserver")))}createPopupTemplate(s){var p;const r=this.rasterFields,n=this.title,e=new Set;let t=!1,a=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const l=new Set;t&&l.add("raster.itempixelvalue");for(const m of r){const c=m.name.toLowerCase();l.has(c)||c.includes("raster.servicepixelvalue.")||e.add(m.name)}a&&e.add("raster.magnitude").add("raster.direction");const u=Rr({fields:r,title:n},{...s,visibleFieldNames:e});return u!=null&&u.fieldInfos&&((p=this.rasterInfo)!=null&&p.pixelType.startsWith("f"))&&u.fieldInfos.forEach(({format:m,fieldName:c})=>{m&&c&&/^raster\.(item|service)pixelvalue/i.test(c)&&(m.places=2)}),u}queryFeatures(s,r){return this.queryRasters(s,r).then(n=>{if(n!=null&&n.features)for(const e of n.features)e.layer=e.sourceLayer=this;return n})}queryFeatureCount(s,r){return this.queryRasterCount(s,r)}redraw(){this.emit("redraw")}async save(s){return this._debouncedSaveOperations(Ze.SAVE,s)}async saveAs(s,r){return this._debouncedSaveOperations(Ze.SAVE_AS,r,s)}serviceSupportsSpatialReference(s){return vr(this,s)}write(s,r){if(!this._isPreviewLayer)return super.write(s,r);if(r!=null&&r.messages){const n=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new x("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${n}'`,{layer:this}))}return null}};i([o(Ir)],Q.prototype,"legendEnabled",null),i([o({type:["show","hide"]})],Q.prototype,"listMode",null),i([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Q.prototype,"isReference",void 0),i([o({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Q.prototype,"operationalLayerType",void 0),i([T("web-map","operationalLayerType")],Q.prototype,"writeOperationalLayerType",null),i([o(xr)],Q.prototype,"popupEnabled",void 0),i([o({type:Fr,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Q.prototype,"popupTemplate",void 0),i([o({readOnly:!0})],Q.prototype,"defaultPopupTemplate",null),i([o({readOnly:!0,json:{read:!1}})],Q.prototype,"type",void 0),i([o({readOnly:!0})],Q.prototype,"_isPreviewLayer",null),Q=i([v("esri.layers.ImageryLayer")],Q);const ks=Q;export{ks as default};
