import{kl as k,fq as q,fs as G}from"./index-Bmji7YKu.js";import{t as F,h as O,u as T}from"./CIMSymbolHelper-CnzXOTCO.js";import{OverrideHelper as A}from"./OverrideHelper-CqOmel33.js";import{T as S,R as D}from"./rasterizingUtils-DvFsJEQo.js";import"./BidiEngine-QXap_35O.js";import"./definitions-DKtXO-DI.js";import"./callExpressionWithFeature-BjmH4JgV.js";class H{constructor(){this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}destroy(){this._inFlightResourceMap.clear(),this._resourceMap.clear()}getResource(t){return this._resourceMap.get(t)??null}async fetchResource(t,n){const a=this._resourceMap.get(t);if(a)return{width:a.width,height:a.height};let c=this._inFlightResourceMap.get(t);return c?c.then(u=>({width:u.width,height:u.height})):(c=k(t,n),this._inFlightResourceMap.set(t,c),c.then(u=>(this._inFlightResourceMap.delete(t),this._resourceMap.set(t,u),{width:u.width,height:u.height}),()=>({width:0,height:0})))}deleteResource(t){this._inFlightResourceMap.delete(t),this._resourceMap.delete(t)}loadFont(t){return q(t)}}const L=96/72;class U{constructor(t){this._spatialReference=t,this._imageDataCanvas=null,this._cimResourceManager=new H}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(t,n,a,c,u,o,m,g,d,x){if(!t)return null;const{data:w}=t;if(!w||w.type!=="CIMSymbolReference"||!w.symbol)return null;const{symbol:v}=w;o||(o=G(v));const l=await A.resolveSymbolOverrides(w,n,this._spatialReference,u,o,m,g),p=this._cimResourceManager,R=[];F.fetchResources(l,p,R),F.fetchFonts(l,p,R),R.length>0&&await Promise.all(R);const{width:i,height:r}=a;let _=z(o,i,r,c,x);const e=F.getEnvelope(l,_,p);if(!e)return null;e.x===1/0&&(e.x=i+2),e.y===1/0&&(e.y=-r/2),e.width===-1/0&&(e.width=i),e.height===-1/0&&(e.height=r);let y=1,I=0,C=0;switch(v.type){case"CIMPointSymbol":case"CIMTextSymbol":{let h=1;e.width>i&&(h=i/e.width);let s=1;e.height>r&&(s=r/e.height),c==="preview"&&(e.width<i&&(h=i/e.width),e.height<r&&(s=r/e.height)),y=Math.min(h,s),I=e.x+e.width/2,C=e.y+e.height/2}break;case"CIMLineSymbol":if(x){C=e.y+e.height/2,I=e.x+e.width/2;const h=e.width-i,s=e.height-r;_={paths:S(_.paths,{xmin:-1*e.width/2+h,xmax:e.width/2-h,ymin:-1*e.height/2+s,ymax:e.height/2-s,width:e.width-2*h,height:e.height-2*s})}}else{(d||e.height>r)&&(y=r/e.height),C=e.y+e.height/2;const h=e.x*y+i/2,s=(e.x+e.width)*y+i/2,{paths:b}=_;b[0][0][0]-=h/y,b[0][2][0]-=(s-i)/y}break;case"CIMPolygonSymbol":if(x){C=e.y+e.height/2,I=e.x+e.width/2;const h=e.width-i,s=e.height-r;_={paths:S(_.rings,{xmin:-1*e.width/2+h,xmax:e.width/2-h,ymin:-1*e.height/2+s,ymax:e.height/2-s,width:e.width-2*h,height:e.height-2*s})}}else{I=e.x+e.width/2,C=e.y+e.height/2;const h=e.x*y+i/2,s=(e.x+e.width)*y+i/2,b=e.y*y+r/2,P=(e.y+e.height)*y+r/2,{rings:f}=_;h<0&&(f[0][0][0]-=h,f[0][3][0]-=h,f[0][4][0]-=h),b<0&&(f[0][0][1]+=b,f[0][1][1]+=b,f[0][4][1]+=b),s>i&&(f[0][1][0]-=s-i,f[0][2][0]-=s-i),P>r&&(f[0][2][1]+=P-r,f[0][3][1]+=P-r)}}const E={type:"cim",data:{type:"CIMSymbolReference",symbol:l}};return this.rasterize(E,i,r,I,C,y,o,1,_)}rasterize(t,n,a,c,u,o,m,g=0,d=null,x=window.devicePixelRatio||1){const{data:w}=t;if(!w||w.type!=="CIMSymbolReference"||!w.symbol)return null;const{symbol:v}=w,l=this._canvas,p=x*L;l.width=n*p,l.height=a*p,m||(m=G(v)),d||(d=z(m,n,a,"legend")),l.width+=2*g,l.height+=2*g;const R=l.getContext("2d",{willReadFrequently:!0}),i=O.createIdentity();return i.translate(-c,-u),i.scale(o*p,-o*p),i.translate(n*p/2+g,a*p/2+g),R.clearRect(0,0,l.width,l.height),new T(R,this._cimResourceManager,i,!0).drawSymbol(v,d),R.getImageData(0,0,l.width,l.height)}}function V(M,t,n,a){return t==="esriGeometryPolygon"?{rings:D(S(M.rings,{xmin:0,ymin:0,width:n,height:a}),-1*n/2,-1*a/2)}:t==="esriGeometryPolyline"?{paths:D(S(M.paths,{xmin:0,ymin:0,width:n,height:a}),-1*n/2,-1*a/2)}:null}function z(M,t,n,a,c){const o=-t/2+1,m=t/2-1,g=n/2-1,d=-n/2+1;if(c&&(M==="esriGeometryPolygon"||M==="esriGeometryPolyline")){const x=V(c,M,t,n);if(x)return x}switch(M){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[o,0],[0,0],[m,0]]]};default:return a==="legend"?{rings:[[[o,g],[m,0],[m,d],[o,d],[o,g]]]}:{rings:[[[o,g],[m,g],[m,d],[o,d],[o,g]]]}}}export{U as CIMSymbolRasterizer};
