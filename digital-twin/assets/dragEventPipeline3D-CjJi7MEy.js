import{b1 as D,as as b,b2 as E,b3 as w,b4 as m,b5 as $,b6 as x,b7 as S,b8 as N,b9 as y,ay as i,ba as U,bb as G,bc as H,bd as P,aw as h,be as A,bf as k,aY as I,bg as R,bh as F,bi as j,bj as M,aU as T,bk as q,aZ as z,a$ as B,aW as J}from"./index-BGUxYM9l.js";import{w as K}from"./InteractiveToolBase-pyVEGVSl.js";function L(n,r){return C(n,()=>r)}function en(n){return C(n,r=>r.plane)}function C(n,r){const t=i(),a=i();let s=!1;return e=>{const o=r(e);if(e.action==="start"){const c=m(e.screenStart,$(x.get())),u=S(n.state.camera,c,g);u!=null&&(s=y(o,u,t))}if(!s)return null;const l=m(e.screenEnd,$(x.get())),d=S(n.state.camera,l,g);return d==null?null:y(o,d,a)?{...e,renderStart:t,renderEnd:a,plane:o,ray:d}:null}}function Q(n,r,t=0,a=null,s=null){let e=null;return o=>{if(o.action==="start"&&(e=n.sceneIntersectionHelper.intersectElevationFromScreen(E(o.screenStart.x,o.screenStart.y),r,t,s),e!=null&&a!=null&&!w(e,e,a))||e==null)return null;const l=n.sceneIntersectionHelper.intersectElevationFromScreen(E(o.screenEnd.x,o.screenEnd.y),r,t,s);return l!=null&&(a==null||w(l,l,a))?{...o,mapStart:e,mapEnd:l}:null}}function W(n,r,t,a=null,s=null){return Q(n,t,D(r,n,t),a,s)}function tn(n,r,t,a){const s=t.toMap(n.screenStart);return s!=null?W(r,s,t.elevationInfo,a):null}function Y(n,r){const t=O,a=v,s=k();n.renderCoordsHelper.worldUpAtPosition(r,t);const e=I(F(s),t,R(a,r,n.state.camera.eye));return I(e,e,t),j(r,e,s)}function rn(n,r,t){let a=null;const s=new K;return s.next(L(n,Y(n,r))).next(Z(n,r)).next(_(n,t)).next(e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,a=e}),e=>(a=null,s.execute(e),a)}function Z(n,r){const t=i(),a=M(r);n.renderCoordsHelper.worldUpAtPosition(r,t);const s=i(),e=i(),o=l=>(R(l,l,r),q(t,l,l),n.viewingMode==="global"&&M(l)*Math.sign(z(t,l))<.001-a&&R(l,B(l,t,.001),r),J(l,l,r),l);return l=>(l.renderStart=o(T(s,l.renderStart)),l.renderEnd=o(T(e,l.renderEnd)),l)}function an(n,r){const t=a=>{const s=m(a,$(V)),e=S(n.state.camera,s,g);if(e==null)return null;const o=A(r,e,O,v);return o==null?void 0:o[0]};return a=>{const s=t(a.screenStart);if(s==null)return null;const e=t(a.screenEnd);return e==null?null:{...a,renderStart:s,renderEnd:e}}}function _(n,r){const t=n.renderCoordsHelper;return a=>{const s=t.fromRenderCoords(a.renderStart,new b({spatialReference:r})),e=t.fromRenderCoords(a.renderEnd,new b({spatialReference:r}));return s!=null&&e!=null?{...a,mapStart:s,mapEnd:e}:null}}var p;function sn(n){let r=null;return t=>{switch(t.action){case"start":r=n.disableDisplay();break;case"end":case"cancel":r!=null&&(r.remove(),r=null)}return t}}function ln(n,r=null){const t=U(n.state.viewingMode);t.options.selectionMode=!0,t.options.store=G.MIN,t.options.hud=!1;const a=E(),s={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},e=i(),o=r??n.spatialReference,l=c=>{n.map.ground&&n.map.ground.opacity<1?s.exclude.add(H):s.exclude.delete(H),n.sceneIntersectionHelper.intersectIntersectorScreen(m(c,a),t,s);const u=t.results.min;let f;if(u.getIntersectionPoint(e))f=u.intersector===P.TERRAIN?p.GROUND:p.OTHER;else{if(!t.results.ground.getIntersectionPoint(e))return null;f=p.GROUND}return{location:n.renderCoordsHelper.fromRenderCoords(e,new b({spatialReference:o})),surfaceType:f}};let d;return c=>{if(c.action==="start"){const f=l(c.screenStart);d=f!=null?f.location:null}if(d==null)return null;const u=l(c.screenEnd);return(u==null?void 0:u.location)!=null?{...c,mapStart:d,mapEnd:u.location,surfaceType:u.surfaceType}:null}}(function(n){n[n.GROUND=0]="GROUND",n[n.OTHER=1]="OTHER"})(p||(p={}));const V=h(),O=i(),v=i(),g=N();export{an as A,ln as B,L as C,_ as F,rn as G,W as M,tn as N,en as P,p as q,sn as z};
