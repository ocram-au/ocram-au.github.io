const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/knowledgeGraphService-icZbx9my.js","assets/index-BGUxYM9l.js","assets/index-C0kMKE5c.css","assets/networkEnums-WvfoYaQa.js","assets/GPMessage-BEynOcbe.js","assets/GraphQueryStreaming-CGzlYlnD.js"])))=>i.map(i=>d[i]);
import{K as I,hZ as y,_ as K,i0 as _,I as F,dT as q,h$ as T,i4 as V,cv as J,dl as N,dm as U,dk as j,ar as P,cw as M,cx as O,i5 as Q,i6 as L}from"./index-BGUxYM9l.js";import{u as b,V as Z,y as k,X as B,J as X,C as W,K as z,Z as D,a0 as H,a1 as Y,a2 as $,U as A}from"./arcade-CrPWs8la.js";import{a as p,r as l}from"./unitConversion-BeSOsCpX.js";import{l as tt}from"./portalUtils-8msgPaBy.js";import{p as nt,c as et,t as at,a as rt,b as it}from"./GraphQueryStreaming-CGzlYlnD.js";import"./number-CduKmGlr.js";import"./WhereClause-0FB33A2i.js";import"./hash-CcEbRgUF.js";let f=null;async function ot(t){const n=J.geometryServiceUrl??"";if(!n){N()||await U();for(const e of t)e.container[e.indexer]=j(e.container[e.indexer],P.WGS84);return}const a=t.map(e=>e.container[e.indexer]),i=new M({geometries:a,outSpatialReference:P.WGS84}),s=await O(n,i);for(let e=0;e<s.length;e++){const r=t[e];r.container[r.indexer]=s[e]}}async function G(t,n){const a=new F({portal:t,id:n});return await a.load(),f===null&&(f=await K(()=>import("./knowledgeGraphService-icZbx9my.js").then(i=>i.k),__vite__mapDeps([0,1,2,3,4,5]))),await f.fetchKnowledgeGraph(a.url)}function R(t,n,a,i,s){if(t===null)return null;if(y(t)||q(t))return t;if(D(t)||D(t))return t.toJSDate();if(H(t))return t.toStorageFormat();if(Y(t))return t.toStorageString();if($(t)){const e={};for(const r of t.keys())e[r]=R(t.field(r),n,a,i,s),e[r]instanceof T&&s.push({container:e,indexer:r});return e}if(_(t)){const e=t.map(r=>R(r,n,a,i,s));for(let r=0;r<e.length;r++)e[r]instanceof T&&s.push({container:e,indexer:r});return e}return A(t)?t.spatialReference.isWGS84?t:t.spatialReference.isWebMercator&&n?V(t):t:void 0}function st(t,n){if(!t)return t;if(t.spatialReference.isWGS84&&n.spatialReference.isWebMercator)return L(t);if(t.spatialReference.equals(n.spatialReference))return t;throw new p(n,l.WrongSpatialReference,null)}function v(t,n){if(!t)return null;const a={};for(const i in t)a[i]=g(t[i],n);return a}function g(t,n){return t===null?null:_(t)?t.map(a=>g(a,n)):t instanceof et?{graphTypeName:t.typeName,id:t.id,graphType:"entity",properties:v(t.properties,n)}:t instanceof at?{graphType:"object",properties:v(t.properties,n)}:t instanceof rt?{graphTypeName:t.typeName,id:t.id,graphType:"relationship",originId:t.originId??null,destinationId:t.destinationId??null,properties:v(t.properties,n)}:t instanceof it?{graphType:"path",path:t.path?t.path.map(a=>g(a,n)):null}:A(t)?st(t,n):y(t)||q(t)||Q(t)?t:null}function gt(t){t.mode==="async"&&(t.functions.knowledgegraphbyportalitem=function(n,a){return t.standardFunctionAsync(n,a,(i,s,e)=>{var d,m;if(b(e,2,2,n,a),e[0]===null)throw new p(n,l.PortalRequired,a);if(e[0]instanceof Z){const u=k(e[1]);let h;return h=(d=n.services)!=null&&d.portal?n.services.portal:I.getDefault(),G(tt(e[0],h),u)}if(y(e[0])===!1)throw new p(n,l.InvalidParameter,a);const r=k(e[0]);return G(((m=n.services)==null?void 0:m.portal)??I.getDefault(),r)})},t.signatures.push({name:"knowledgegraphbyportalitem",min:2,max:2}),t.functions.querygraph=function(n,a){return t.standardFunctionAsync(n,a,async(i,s,e)=>{var x;b(e,2,4,n,a);const r=e[0];if(!B(r))throw new p(n,l.InvalidParameter,a);const d=e[1];if(!y(d))throw new p(n,l.InvalidParameter,a);f===null&&(f=await K(()=>import("./knowledgeGraphService-icZbx9my.js").then(o=>o.k),__vite__mapDeps([0,1,2,3,4,5])));let m=null;const u=X(e[2],null);if(!(u instanceof W||u===null))throw new p(n,l.InvalidParameter,a);if(u){let o=[];m=R(u,!0,!1,n,o),o=o.filter(c=>!c.container[c.indexer].spatialReference.isWGS84),o.length>0&&await ot(o)}const h=new nt({openCypherQuery:d,bindParameters:m});(((x=r==null?void 0:r.serviceDefinition)==null?void 0:x.currentVersion)??11.3)>11.2&&(h.outputSpatialReference=n.spatialReference);const C=(await f.executeQueryStreaming(r,h)).resultRowsStream.getReader(),S=[];try{for(;;){const{done:o,value:c}=await C.read();if(o)break;if(_(c))for(const w of c)S.push(g(w,n));else{const w=[];for(const E of c)w.push(g(c[E],n));S.push(w)}}}catch(o){throw o}return W.convertJsonToArcade(S,z(n),!1,!0)})},t.signatures.push({name:"querygraph",min:2,max:4}))}export{gt as registerFunctions};
