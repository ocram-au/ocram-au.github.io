import{dv as n,dA as l,dB as m,P as p,E as d,e,y as i,c8 as c,a as u}from"./index-C10n8NUY.js";import{A as h}from"./I3SMeshView3D-Db0wMzvX.js";import{l as g}from"./LayerView3D-Cx31FIz7.js";import{y}from"./LayerView-B7_DIk2-.js";import"./Transform-CH9QSjnd.js";import"./RenderTexture-VsHPzWPL.js";import"./I3SOverrides-Djx_F8rv.js";import"./I3SNode-Cs_QjQ8Q.js";import"./I3SUtil-C8QEiKiQ.js";import"./I3SBinaryReader-D6v_3VoL.js";import"./meshFeatureSet-DjWXUxMe.js";import"./Mesh-CIIoYn4O.js";import"./MeshTransform-hEhXwDhy.js";import"./vertexSpaceConversion-DP7GR_Ke.js";import"./External-Dim4Jgfy.js";import"./infoFor3D-DsOdlPuA.js";import"./FeatureLayerView3D-ByVTDWPI.js";import"./FeatureLayerViewBase3D-BlEvkMZ5.js";import"./HeatmapDensity.glsl-BQc4EL-e.js";import"./timeSupport-DuhTIBQN.js";import"./projectExtentUtils-Bk3fdFJu.js";import"./dehydratedFeatureComparison-BOoL0qUF.js";import"./queryForSymbologySnapping-DBeoTQaw.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-D16IUFUk.js";import"./optimizedFeatureQueryEngineAdapter-CZmmxVgO.js";import"./PooledRBush-B39is22j.js";import"./quickselect-CAHmcxAW.js";import"./popupUtils-BCJ_eaZu.js";import"./QueryEngine-B9oujCil.js";import"./WhereClause-C9Iue5me.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-afTtxtjp.js";import"./utils-CuucXg5x.js";import"./ClassBreaksDefinition-D7N2lYU_.js";import"./FeatureStore-CkV7HycD.js";import"./BoundsStore-DA81IFzw.js";import"./WorkerHandle-Cg8ddKpY.js";import"./EventedSet-BtD6kq5f.js";import"./RefreshableLayerView-D875pHe6.js";import"./SceneModification-CKFPm2Bg.js";import"./SceneLayerWorker-CmChmeVn.js";import"./makeScheduleFunction-CggzEh3c.js";const v=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=!n("disable-feature:im-shading"),this.drapeTargetType=l.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?v:1}get visibleAtCurrentScale(){return m(this.i3slayer.effectiveScaleRange,this.view.terrainScale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),p),"modifications")}};e([i()],t.prototype,"layer",void 0),e([i()],t.prototype,"i3slayer",null),e([i(c)],t.prototype,"updatingProgress",void 0),e([i()],t.prototype,"updatingProgressValue",null),e([i()],t.prototype,"lodFactor",null),e([i({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),e([i({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=e([u("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const nt=t;export{nt as default};
