import{cj as n,co as m,cp as l,P as p,K as d,e as i,y as e,aD as c,a as u}from"./index-ByUZEoNK.js";import{A as h}from"./I3SMeshView3D-DUP-V5Z8.js";import{l as g}from"./LayerView3D-rgiCvobA.js";import{y}from"./LayerView-BdmvtWs6.js";import"./Transform-CB6Ep4Dj.js";import"./RenderTexture-NMrqlDmf.js";import"./I3SOverrides-DJ_4NgOD.js";import"./I3SNode-BCB85xOS.js";import"./I3SUtil-D8nTIxz_.js";import"./I3SBinaryReader-BfQHqT4q.js";import"./meshFeatureSet-DRMZFiEU.js";import"./Mesh-3Ha6217v.js";import"./MeshTransform-DXwwkASK.js";import"./vertexSpaceConversion-Bz5gByBn.js";import"./External-Dx_QqhbY.js";import"./infoFor3D-DsOdlPuA.js";import"./FeatureLayerView3D-0hL1hqQm.js";import"./FeatureLayerViewBase3D-Db3kJcR2.js";import"./HeatmapDensity.glsl-ChkpP8d8.js";import"./timeSupport-CIqVJjxW.js";import"./projectExtentUtils-Csq86g4v.js";import"./dehydratedFeatureComparison-DQORjopP.js";import"./queryForSymbologySnapping-Fxe6G9mt.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-BzvxadwN.js";import"./rendererConversion-DMNCZEXI.js";import"./optimizedFeatureQueryEngineAdapter-W5ik5KXQ.js";import"./PooledRBush-RdN4kavU.js";import"./quickselect-CGmvo3iT.js";import"./popupUtils-BMq3N0HN.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-Dl1_y_2f.js";import"./WhereClause-OmQX3UeL.js";import"./TimeOnly-BU3POh7K.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-NYA6gdH6.js";import"./utils-ClQCN4zk.js";import"./ClassBreaksDefinition-8z1xRXdS.js";import"./FeatureStore-DgLXpSmf.js";import"./BoundsStore-B67LdGZa.js";import"./WorkerHandle-Cc_huYGz.js";import"./EventedSet-DAhnm-Zd.js";import"./RefreshableLayerView-CxPsFfC4.js";import"./SceneModification-CYF5qndc.js";import"./persistable-BPktRH74.js";import"./resourceExtension-Eu0BejUM.js";import"./SceneLayerWorker-BLgFfas6.js";import"./makeScheduleFunction-CggzEh3c.js";const f=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=!n("disable-feature:im-shading"),this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get visibleAtCurrentScale(){return l(this.i3slayer.effectiveScaleRange,this.view.terrainScale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),p),"modifications")}};i([e()],t.prototype,"layer",void 0),i([e()],t.prototype,"i3slayer",null),i([e(c)],t.prototype,"updatingProgress",void 0),i([e()],t.prototype,"updatingProgressValue",null),i([e()],t.prototype,"lodFactor",null),i([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),i([e({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=i([u("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const ut=t;export{ut as default};
