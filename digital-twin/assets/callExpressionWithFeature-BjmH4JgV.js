import{k as c,F as l,fC as f,fD as m,fE as d,fF as g}from"./index-Bmji7YKu.js";function h(a,r,e,n,t){if(a==null)return null;const s=a.references("geometry")&&t?p(r,n,t):r,o=a.repurposeFeature(s);try{return a.evaluate({...e,$feature:o},a.services)}catch(i){return c.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",i),null}}const u=new Map;function p(a,r,e){const{transform:n,hasZ:t,hasM:s}=e;u.has(r)||u.set(r,y(r));const o=u.get(r)(a.geometry,n,t,s);return{...a,geometry:o}}function y(a){const r={};switch(a){case"esriGeometryPoint":return(e,n,t,s)=>g(n,r,e,t,s);case"esriGeometryPolygon":return(e,n,t,s)=>d(n,r,e,t,s);case"esriGeometryPolyline":return(e,n,t,s)=>m(n,r,e,t,s);case"esriGeometryMultipoint":return(e,n,t,s)=>f(n,r,e,t,s);default:return c.getLogger("esri.views.2d.support.arcadeOnDemand").error(new l("mapview-arcade",`Unable to handle geometryType: ${a}`)),e=>e}}export{h as default};
