import{bS as U,bT as V,bU as j,gZ as X,bV as k,hd as F,he as G,c0 as b,cy as w,gG as $,bc as x,aZ as K,aF as h,dl as _,aK as S,g1 as E,hf as L,hg as T,hh as R,hi as c,t as W,z as D,U as P,hj as z,hk as Z,n as N,hl as q,e as m,y as u,hm as O,b$ as B,a as C,X as H,as as g}from"./index-Ck66FOdU.js";let p=class extends U(V(j(X(k(F(G(H))))))){constructor(i){super(i),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new b({wkid:4326,vcsWkid:115700}),this.fullExtent=new w(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(i){this._set("elevationInfo",i),this._validateElevationInfo()}_verifyArray(i,a){if(!Array.isArray(i)||i.length<a)return!1;for(const o of i)if(typeof o!="number")return!1;return!0}_initFullExtent(i){var I,M;const a=(I=i.root)==null?void 0:I.boundingVolume;if(!a)return;if(a.box){const t=a==null?void 0:a.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=(M=i.root)==null?void 0:M.transform,d=g();if(a.region&&this._verifyArray(a.region,6)){const t=a.region,l=$(t[0]),n=$(t[1]),s=t[4],r=$(t[2]),e=$(t[3]),y=t[5];this.fullExtent=new w({xmin:l,ymin:n,zmin:s,xmax:r,ymax:e,zmax:y,spatialReference:this.spatialReference})}else if(a.sphere&&this._verifyArray(a.sphere,4)){const t=a.sphere,l=x(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),s=g();K(s,l,x(n,n,n));const r=g();if(h(r,l,x(n,n,n)),o&&this._verifyArray(o,16)){const v=o;_(d,s,v),S(s,d),_(d,r,v),S(r,d)}E(s,L,0,s,b.WGS84,0,1),E(r,L,0,r,b.WGS84,0,1);const e=g(),y=g();T(e,s,r),R(y,s,r),this.fullExtent=new w({xmin:e[0],ymin:e[1],zmin:e[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}else if(a.box&&this._verifyArray(a.box,12)){const t=a.box,l=x(t[0],t[1],t[2]),n=x(t[3],t[4],t[5]),s=x(t[6],t[7],t[8]),r=x(t[9],t[10],t[11]),e=[];for(let f=0;f<8;++f)e.push(g());if(h(e[0],l,n),h(e[0],e[0],s),h(e[0],e[0],r),c(e[1],l,n),h(e[1],e[1],s),h(e[1],e[1],r),h(e[2],l,n),c(e[2],e[2],s),h(e[2],e[2],r),c(e[3],l,n),c(e[3],e[3],s),h(e[3],e[3],r),h(e[4],l,n),h(e[4],e[4],s),c(e[4],e[4],r),c(e[5],l,n),h(e[5],e[5],s),c(e[5],e[5],r),h(e[6],l,n),c(e[6],e[6],s),c(e[6],e[6],r),c(e[7],l,n),c(e[7],e[7],s),c(e[7],e[7],r),o&&this._verifyArray(o,16)){const f=o;for(let A=0;A<8;++A)_(e[A],e[A],f)}const y=x(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),v=x(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let f=0;f<8;++f)E(e[f],L,0,e[f],b.WGS84,0,1),T(v,v,e[f]),R(y,y,e[f]);this.fullExtent=new w({xmin:v[0],ymin:v[1],zmin:v[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}}async load(i){return this.addResolvingPromise(this._doLoad(i)),this}async _doLoad(i){const a=i!=null?i.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{var d;if((d=o.typeKeywords)!=null&&d.includes("IntegratedMesh"))return!0;throw new W("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},i)}catch(o){D(o)}this.url&&await P(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:a}).then(d=>{this._initFullExtent(d.data)},d=>{D(d)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(){const i=this.elevationInfo,a="Integrated mesh 3d tiles layers";z(N.getLogger(this),Z(a,"absolute-height",i)),z(N.getLogger(this),q(a,i))}};m([u({type:["IntegratedMesh3DTilesLayer"]})],p.prototype,"operationalLayerType",void 0),m([u({type:b})],p.prototype,"spatialReference",void 0),m([u({type:w})],p.prototype,"fullExtent",void 0),m([u(O)],p.prototype,"elevationInfo",null),m([u({type:["show","hide"]})],p.prototype,"listMode",void 0),m([u(B)],p.prototype,"url",void 0),m([u({readOnly:!0})],p.prototype,"type",void 0),m([u({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],p.prototype,"path",void 0),m([u({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"minScale",void 0),m([u({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"maxScale",void 0),p=m([C("esri.layers.IntegratedMesh3DTilesLayer")],p);const Q=p;export{Q as default};
