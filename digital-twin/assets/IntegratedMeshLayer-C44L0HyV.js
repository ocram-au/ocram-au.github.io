import{cJ as w,W as T,fH as _,N as O,r as o,m as r,a as f,cb as I,cc as $,cd as x,gX as L,ce as N,h9 as M,ha as b,cD as A,hl as V,M as J,F as l,hg as c,hh as j,k as u,hi as D,C as P,a6 as E,cN as K,ch as U,hj as R}from"./index-Bmji7YKu.js";import{R as C,V as m}from"./SceneService-Dgkep7X1.js";import{p as z,a as F,y as H,m as k}from"./I3SLayerDefinitions-DSJ4h609.js";import{y as d}from"./SceneModification-DVRW3Nem.js";import"./I3SIndexInfo-w2ou8IpD.js";var a;let n=a=class extends w.JSONSupportMixin(T.ofType(d)){constructor(e){super(e),this.url=null}clone(){return new a({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const s=new a;for(const p of e)s.add(d.fromJSON(p,t));return s}static async fromUrl(e,t,s){const p={url:_(e),origin:"service"},v=await O(e,{responseType:"json",signal:s==null?void 0:s.signal}),S=t.toJSON(),y=[];for(const h of v.data)y.push(d.fromJSON({...h,geometry:{...h.geometry,spatialReference:S}},p));return new a({url:e,items:y})}};o([r({type:String})],n.prototype,"url",void 0),n=a=o([f("esri.layers.support.SceneModifications")],n);const g=n;let i=class extends C(I($(x(L(N(M(b(E)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(A(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,P))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,s){this._modificationsSource={url:V(e,s),context:s}}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(s){J(s)}if(await this._fetchService(t),this._modificationsSource!=null){const s=await g.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",s,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(m.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(m.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new l("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(e){const t="Integrated mesh layers";c(u.getLogger(this),j(t,"absolute-height",e)),c(u.getLogger(this),D(t,e))}};o([r({type:String,readOnly:!0})],i.prototype,"geometryType",void 0),o([r({type:["show","hide"]})],i.prototype,"listMode",void 0),o([r({type:["IntegratedMeshLayer"]})],i.prototype,"operationalLayerType",void 0),o([r({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),o([r({type:z,readOnly:!0})],i.prototype,"nodePages",void 0),o([r({type:[F],readOnly:!0})],i.prototype,"materialDefinitions",void 0),o([r({type:[H],readOnly:!0})],i.prototype,"textureSetDefinitions",void 0),o([r({type:[k],readOnly:!0})],i.prototype,"geometryDefinitions",void 0),o([r({readOnly:!0})],i.prototype,"serviceUpdateTimeStamp",void 0),o([r({type:g}),K({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],i.prototype,"modifications",void 0),o([U(["web-scene","portal-item"],"modifications")],i.prototype,"readModifications",null),o([r(R)],i.prototype,"elevationInfo",null),o([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),i=o([f("esri.layers.IntegratedMeshLayer")],i);const G=i;export{G as default};
