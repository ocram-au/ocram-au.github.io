import{fr as A,fs as G}from"./index-AdHZlOg8.js";function _(t,e){return t?e?4:3:e?3:2}function O(t,e,o,s){if(!(e!=null&&e.lengths.length))return null;t.lengths.length&&(t.lengths.length=0),t.coords.length&&(t.coords.length=0);const r=t.coords,n=[],N=o?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:l,coords:c}=e,b=_(o,s);let h=0;for(const I of l){const u=P(N,c,h,I,o,s);u&&n.push(u),h+=I*b}if(n.sort((I,u)=>{let T=I[2]-u[2];return T===0&&o&&(T=I[4]-u[4]),T}),n.length){let I=6*n[0][2];r[0]=n[0][0]/I,r[1]=n[0][1]/I,o&&(I=6*n[0][4],r[2]=I!==0?n[0][3]/I:0),(r[0]<N[0]||r[0]>N[1]||r[1]<N[2]||r[1]>N[3]||o&&(r[2]<N[4]||r[2]>N[5]))&&(r.length=0)}if(!r.length){const I=e.lengths[0]?S(c,0,l[0],o,s):null;if(!I)return null;r[0]=I[0],r[1]=I[1],o&&I.length>2&&(r[2]=I[2])}return t}function P(t,e,o,s,r,n){const N=_(r,n);let l=o,c=o+N,b=0,h=0,I=0,u=0,T=0;for(let F=0,Y=s-1;F<Y;F++,l+=N,c+=N){const i=e[l],f=e[l+1],E=e[l+2],g=e[c],m=e[c+1],a=e[c+2];let V=i*m-g*f;u+=V,b+=(i+g)*V,h+=(f+m)*V,r&&(V=i*a-g*E,I+=(E+a)*V,T+=V),i<t[0]&&(t[0]=i),i>t[1]&&(t[1]=i),f<t[2]&&(t[2]=f),f>t[3]&&(t[3]=f),r&&(E<t[4]&&(t[4]=E),E>t[5]&&(t[5]=E))}if(u>0&&(u*=-1),T>0&&(T*=-1),!u)return null;const d=[b,h,.5*u];return r&&(d[3]=I,d[4]=.5*T),d}function S(t,e,o,s,r){const n=_(s,r);let N=e,l=e+n,c=0,b=0,h=0,I=0;for(let u=0,T=o-1;u<T;u++,N+=n,l+=n){const d=t[N],F=t[N+1],Y=t[N+2],i=t[l],f=t[l+1],E=t[l+2],g=s?j(d,F,Y,i,f,E):y(d,F,i,f);if(g)if(c+=g,s){const m=M(d,F,Y,i,f,E);b+=g*m[0],h+=g*m[1],I+=g*m[2]}else{const m=p(d,F,i,f);b+=g*m[0],h+=g*m[1]}}return c>0?s?[b/c,h/c,I/c]:[b/c,h/c]:o>0?s?[t[e],t[e+1],t[e+2]]:[t[e],t[e+1]]:null}function y(t,e,o,s){const r=o-t,n=s-e;return Math.sqrt(r*r+n*n)}function j(t,e,o,s,r,n){const N=s-t,l=r-e,c=n-o;return Math.sqrt(N*N+l*l+c*c)}function p(t,e,o,s){return[t+.5*(o-t),e+.5*(s-e)]}function M(t,e,o,s,r,n){return[t+.5*(s-t),e+.5*(r-e),o+.5*(n-o)]}const q={getObjectId:t=>t.objectId,getAttributes:t=>t.attributes,getAttribute:(t,e)=>t.attributes[e],cloneWithGeometry:(t,e)=>new A(e,t.attributes,null,t.objectId),getGeometry:t=>t.geometry,getCentroid:(t,e)=>(t.centroid==null&&(t.centroid=O(new G,t.geometry,e.hasZ,e.hasM)),t.centroid)};export{O as n,q as o};
