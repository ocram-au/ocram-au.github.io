import{dv as n,dA as l,dB as m,P as p,E as d,e,y as i,c8 as c,a as u}from"./index-uWjCvim1.js";import{A as h}from"./I3SMeshView3D-r0q-xJt4.js";import{l as g}from"./LayerView3D-DqqJAj2C.js";import{y}from"./LayerView--ZRFKHkp.js";import"./Transform-DTiwXp06.js";import"./RenderTexture-ec1_iBPZ.js";import"./I3SOverrides-uz5bfGkJ.js";import"./I3SNode-CNwZkbek.js";import"./I3SUtil-flhtigRo.js";import"./I3SBinaryReader-qUIYgKPt.js";import"./meshFeatureSet-fHZtIiZN.js";import"./Mesh-qxRxj2LJ.js";import"./MeshTransform-Csjyt1JH.js";import"./vertexSpaceConversion-D0G5HwEN.js";import"./External-fBG_yDPo.js";import"./infoFor3D-DsOdlPuA.js";import"./FeatureLayerView3D-B__NzRDO.js";import"./FeatureLayerViewBase3D-PiEsY37F.js";import"./HeatmapDensity.glsl-C1ypqWza.js";import"./timeSupport-CczeWodq.js";import"./projectExtentUtils-BPcwa-zS.js";import"./dehydratedFeatureComparison-D9C2fjDX.js";import"./queryForSymbologySnapping-Dh90QrBe.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-C_NEbmIF.js";import"./optimizedFeatureQueryEngineAdapter-B0I76MNa.js";import"./PooledRBush-qvfOXbSd.js";import"./quickselect-okb9hOG9.js";import"./popupUtils-DRhHt2s6.js";import"./QueryEngine-Bzyqu_jS.js";import"./WhereClause-DcXpzDIG.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-Q4LUyM74.js";import"./utils-awX0xYB0.js";import"./ClassBreaksDefinition-CoW2v0TB.js";import"./FeatureStore-CG4_YefE.js";import"./BoundsStore-BIYESlnO.js";import"./WorkerHandle-CuWPQDK8.js";import"./EventedSet-3JDUJCCc.js";import"./RefreshableLayerView-Cbrq2j2Q.js";import"./SceneModification-C1HPw8EM.js";import"./SceneLayerWorker-BPt6bGkE.js";import"./makeScheduleFunction-CggzEh3c.js";const v=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=!n("disable-feature:im-shading"),this.drapeTargetType=l.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?v:1}get visibleAtCurrentScale(){return m(this.i3slayer.effectiveScaleRange,this.view.terrainScale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),p),"modifications")}};e([i()],t.prototype,"layer",void 0),e([i()],t.prototype,"i3slayer",null),e([i(c)],t.prototype,"updatingProgress",void 0),e([i()],t.prototype,"updatingProgressValue",null),e([i()],t.prototype,"lodFactor",null),e([i({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),e([i({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=e([u("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const nt=t;export{nt as default};
