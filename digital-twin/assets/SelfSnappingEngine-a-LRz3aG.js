import{aB as P,ld as f,rF as y,li as x,aG as v,dg as B,rG as H,av as p,rH as $,i8 as F,oZ as D,nX as K,ay as C,rI as R,rJ as W,rK as b,rl as z,re as A,rk as J,rL as Z,rM as Y,rN as M,iI as Q,aw as N,ib as O,rO as ee,rP as _,au as U,rQ as te,rR as se,rS as re,dS as ie,le as ne,lg as oe,lf as ae,bg as he,aV as de,rT as le,rU as ce,rV as pe,g as ge,W as fe,iX as ue,il as xe,r as L,m as q,a as ve}from"./index-Bmji7YKu.js";import{u as X}from"./geodesicLengthMeasurementUtils-CSwg4be1.js";import"./geometryEngine-U33y_Y3w.js";import"./geometryEngineBase-B0ZyeKAX.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-C2Cgcw1i.js";import"./geodesicMeasurementUtils-Bm7xIN3i.js";class k{constructor(s,e){this.view=s,this.options=e,this.squaredShortLineThreshold=P.shortLineThreshold*P.shortLineThreshold}snap(s,e){return e.vertexHandle!=null?e.vertexHandle.type!=="vertex"?[]:this.snapExistingVertex(s,e):this.snapNewVertex(s,e)}edgeExceedsShortLineThreshold(s,e){return this.exceedsShortLineThreshold(f(s.leftVertex.pos,this.view,e),f(s.rightVertex.pos,this.view,e),e)}exceedsShortLineThreshold(s,e,{spatialReference:t}){return this.squaredShortLineThreshold===0||y(x(e,t,v,this.view),x(s,t,v,this.view))>this.squaredShortLineThreshold}isVertical(s,e,{spatialReference:t}){const r=B(t);return H(p(s),p(e))*r<P.verticalLineThresholdMeters}squaredProximityThreshold(s){return s==="touch"?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:s,touchSensitivityMultiplier:e}=this.options,t=s*e;return t*t}}class Ee extends k{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],r=t.edges.length,i=[];if(r<1)return i;const{spatialReference:n}=e,a=x(s,n,v,this.view),{view:o}=this,h=t.edges[r-1];let d=h;do{if(this.edgeExceedsShortLineThreshold(d,e)){const g=$(d,o,e);this._processCandidateProposal(g.left,g.right,s,a,e,i)}d=d.leftVertex.leftEdge}while(d&&d!==h);return i}snapExistingVertex(s,e){const t=[],r=e.vertexHandle,i=r.component;if(i.edges.length<2)return t;const{view:n}=this,{spatialReference:a}=e,o=x(s,a,v,n),h=r.leftEdge,d=r.rightEdge;h&&d&&this.edgeExceedsShortLineThreshold(h,e)&&this.edgeExceedsShortLineThreshold(d,e)&&this._processCandidateProposal(f(h.leftVertex.pos,n,e),f(d.rightVertex.pos,n,e),s,o,e,t);const g=i.edges[0];let c=g;do{if(c!==r.leftEdge&&c!==r.rightEdge&&this.edgeExceedsShortLineThreshold(c,e)){const u=$(c,n,e);this._processCandidateProposal(u.left,u.right,s,o,e,t)}c=c.rightVertex.rightEdge}while(c&&c!==g);return t}_processCandidateProposal(s,e,t,r,i,n){var g;const{spatialReference:a,pointer:o}=i,h=C();me(h,s,e,t,i);const d=F(D(h));y(r,x(d,a,v,this.view))<this.squaredProximityThreshold(o)&&n.push(new K({lineStart:s,lineEnd:e,targetPoint:d,isDraped:((g=i.elevationInfo)==null?void 0:g.mode)==="on-the-ground"}))}}function me(l,s,e,t,r){we(l,s,e,t,r)||Ve(l,t,s,e)}function we(l,s,e,t,{spatialReference:r}){const i=R(s,e,r,r);if(i==null)return!1;const n=R(e,t,r,r);if(n==null)return!1;const a=X(e,t,r);if(a==null)return!1;const o=Math.abs(W.shortestSignedDiff(i,n))>Math.PI/2?b.normalize(i+Math.PI):i;return z(l,e,r,A(a,"meters"),J(o,"radians","geographic"),"geodesic"),l[2]=t[2],!0}function Ve(l,s,e,t){Z(s,{start:e,end:t,type:Y.LINE},l),l[2]=s[2]}let Pe=class extends k{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],r=t.edges.length,i=t.vertices.length,n=[];if(r<2)return n;const{view:a}=this,o=x(s,e.spatialReference,v,a),h=f(t.vertices[i-1].pos,a,e),d=f(t.vertices[0].pos,a,e),g=t.edges[r-1];let c=g;do{if(this.edgeExceedsShortLineThreshold(c,e)){const u=$(c,a,e);this._checkEdgeForParallelLines(u,h,s,o,e,n),this._checkEdgeForParallelLines(u,d,s,o,e,n)}c=c.leftVertex.leftEdge}while(c&&c!==g);return n}snapExistingVertex(s,e){const t=[],r=e.vertexHandle,i=r.component;if(i.edges.length<3)return t;const{view:n}=this,a=x(s,e.spatialReference,v,n),o=r.leftEdge,h=r.rightEdge,d=i.vertices[0],g=f(d.pos,n,e),c=i.vertices.length,u=i.vertices[c-1],w=f(u.pos,n,e),S=i.edges[0];let E=S;do{if(E!==o&&E!==h&&this.edgeExceedsShortLineThreshold(E,e)){const T=$(E,n,e);o&&this._checkEdgeForParallelLines(T,f(o.leftVertex.pos,n,e),s,a,e,t),h&&this._checkEdgeForParallelLines(T,f(h.rightVertex.pos,n,e),s,a,e,t),r===d?this._checkEdgeForParallelLines(T,w,s,a,e,t):r===u&&this._checkEdgeForParallelLines(T,g,s,a,e,t)}E=E.rightVertex.rightEdge}while(E&&E!==S);return t}_checkEdgeForParallelLines(s,e,t,r,i,n){var c;const a=s.left,o=s.right;if(M(m,p(e),p(a),p(o)),Q(m,p(e))<P.parallelLineThreshold)return;M(m,p(t),p(a),p(o),p(e));const{spatialReference:h,pointer:d}=i,g=F(O(m[0],m[1],t[2]));if(y(r,x(g,h,v,this.view))<this.squaredProximityThreshold(d)){if(this.isVertical(g,e,i)||this.isVertical(a,o,i)||ye(s,n))return;n.push(new ee({referenceLine:s,lineStart:e,targetPoint:g,isDraped:((c=i.elevationInfo)==null?void 0:c.mode)==="on-the-ground"}))}}};function ye(l,s){const e=l.left,t=l.right;for(const r of s)if(M(m,p(t),p(r.constraint.start),p(r.constraint.end),p(e)),Q(m,p(t))<P.parallelLineThreshold)return r.addReferenceLine(l),!0;return!1}const m=N();class Se extends k{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],r=[];if(t.vertices.length<2)return r;const{view:i}=this,n=x(s,e.spatialReference,v,i),a=t.vertices.at(-1);this._checkForSnappingCandidate(_.LastVertex,r,a.leftEdge,a,a.leftEdge.leftVertex,s,n,e);const o=t.vertices[0];return this._checkForSnappingCandidate(_.FirstVertex,r,o.rightEdge,o,o.rightEdge.rightVertex,s,n,e),r}snapExistingVertex(s,e){const t=[],r=e.vertexHandle;if(r.component.vertices.length<3)return t;const{view:i}=this,n=x(s,e.spatialReference,v,i),a=r.leftEdge,o=r.rightEdge;if(a!=null&&a.leftVertex.leftEdge){const h=a.leftVertex.leftEdge;this._checkForSnappingCandidate(_.ExistingEdge,t,h,h.rightVertex,h.leftVertex,s,n,e)}if(o!=null&&o.rightVertex.rightEdge){const h=o.rightVertex.rightEdge;this._checkForSnappingCandidate(_.ExistingEdge,t,h,h.leftVertex,h.rightVertex,s,n,e)}return t}_checkForSnappingCandidate(s,e,t,r,i,n,a,o){if(!this.edgeExceedsShortLineThreshold(t,o))return;const h=this.view,d=f(r.pos,h,o),g=f(i.pos,h,o);Te(j,g,d,n,o),this._checkForSnappingCandidateAlongProjectedRay(s,e,g,d,j,n,a,o)}_checkForSnappingCandidateAlongProjectedRay(s,e,t,r,i,n,a,o){var E;const{spatialReference:h,pointer:d}=o,g=U(I,p(n),p(r)),c=te(i,g)/se(i),u=re(I,p(r),i,c),w=F(O(u[0],u[1],n[2]));if(y(a,x(w,h,v,this.view))>this.squaredProximityThreshold(d)||this.isVertical(w,r,o)||this.isVertical(r,t,o))return;const S=ie(C(),r,i,Math.sign(c));e.push(new ne({targetPoint:w,constraint:new ae(r,D(S)),previousVertex:t,otherVertex:r,otherVertexType:oe.CENTER,selfSnappingType:s,isDraped:((E=o.elevationInfo)==null?void 0:E.mode)==="on-the-ground"}))}}function Te(l,s,e,t,r){_e(l,s,e,t,r)||Le(l,s,e)}function _e(l,s,e,t,{spatialReference:r}){const i=R(s,e,r,r);if(i==null)return!1;const n=R(e,t,r,r);if(n==null)return!1;const a=Math.sign(b.shortestSignedDiff(i,n))*Math.PI*.5,o=J(i+a,"radians","geographic"),h=C(),d=X(e,t,r);return d!=null&&(z(h,e,r,A(d,"meters"),o,"geodesic"),he(l,h,e),!0)}function Le(l,s,e){const t=U(I,p(e),p(s));de(l,t[1],-t[0],0)}const I=N(),j=C();let $e=class extends k{snapNewVertex(s,e){const t=e.editGeometryOperations.data.components[0],r=[],i=t.vertices.length;if(e.editGeometryOperations.data.type!=="polygon"||i<2)return r;const{view:n}=this,a=t.vertices[0],o=t.vertices[i-1],h=f(a.pos,n,e),d=f(o.pos,n,e);return this._processCandidateProposal(h,d,s,e,r),r}snapExistingVertex(s,e){const t=[],r=e.vertexHandle,i=r.component;if(i.edges.length<2||e.editGeometryOperations.data.type==="polyline"&&(r.index===0||r.index===i.vertices.length-1))return t;const{view:n}=this,a=f(r.leftEdge.leftVertex.pos,n,e),o=f(r.rightEdge.rightVertex.pos,n,e);return this._processCandidateProposal(a,o,s,e,t),t}_processCandidateProposal(s,e,t,r,i){var u;if(!this.exceedsShortLineThreshold(s,e,r))return;const n=le(G,p(s),p(e),.5),a=.5*H(p(s),p(e)),o=ce(G,p(t),n,a),h=F(O(o[0],o[1],t[2])),{spatialReference:d,pointer:g}=r,c=x(t,d,v,this.view);if(y(c,x(h,d,v,this.view))<this.squaredProximityThreshold(g)){if(this.isVertical(s,h,r)||this.isVertical(h,e,r))return;i.push(new pe({targetPoint:h,point1:s,point2:e,isDraped:((u=r.elevationInfo)==null?void 0:u.mode)==="on-the-ground"}))}}};const G=N();let V=class extends ge{constructor(l){super(l),this.updating=!1,this._snappers=new fe,this._domain=ue.SELF}initialize(){this._snappers.push(new Pe(this.view,this.options),new Ee(this.view,this.options),new Se(this.view,this.options),new $e(this.view,this.options))}set options(l){this._set("options",l);for(const s of this._snappers)s.options=l}async fetchCandidates(l,s,e){if(!(s&this._domain&&this.options.effectiveSelfEnabled))return[];const t=[];for(const r of this._snappers.items)for(const i of r.snap(l,e))t.push(i);return xe(l,t),t}};L([q({readOnly:!0})],V.prototype,"updating",void 0),L([q({constructOnly:!0})],V.prototype,"view",void 0),L([q()],V.prototype,"options",null),V=L([ve("esri.views.interactive.snapping.SelfSnappingEngine")],V);export{V as SelfSnappingEngine};
