import{e as a,y as s,aY as p,bo as b,bp as u,bq as h,br as c,bs as y,bt as r,bu as i,bv as x,bw as A,bx as g,by as N,bz as $,bA as e,bB as m,a as v,bC as M}from"./index-CQXxPdCL.js";var n;let o=n=class extends p{constructor(t){super(t),this.translation=b(),this.rotationAxis=u(h),this.rotationAngle=0,this.scale=c(1,1,1)}get rotation(){return y(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=r(i(t)),this.rotationAngle=x(t)}get localMatrix(){const t=e();return A(l,i(this.rotation),g(this.rotation)),N(t,l,this.translation,this.scale),t}get localMatrixInverse(){return $(e(),this.localMatrix)}equals(t){return this===t||t!=null&&m(this.localMatrix,t.localMatrix)}clone(){const t={translation:r(this.translation),rotationAxis:r(this.rotationAxis),rotationAngle:this.rotationAngle,scale:r(this.scale)};return new n(t)}};a([s({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"translation",void 0),a([s({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAxis",void 0),a([s({type:Number,nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAngle",void 0),a([s({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"scale",void 0),a([s()],o.prototype,"rotation",null),a([s()],o.prototype,"localMatrix",null),a([s()],o.prototype,"localMatrixInverse",null),o=n=a([v("esri.geometry.support.MeshTransform")],o);const l=M(),w=o;export{w as N};
