import{cR as h,r as t,m as e,a as s,as as g,at as v,g as G,ar as w}from"./index-BGUxYM9l.js";let a=class extends h{constructor(p){super(p),this.properties=null}};t([e({json:{write:!0}})],a.prototype,"properties",void 0),a=t([s("esri.rest.knowledgeGraph.GraphObject")],a);const y=a;let i=class extends y{constructor(p){super(p),this.typeName=null,this.id=null}};t([e({type:String,json:{write:!0}})],i.prototype,"typeName",void 0),t([e({type:String,json:{write:!0}})],i.prototype,"id",void 0),i=t([s("esri.rest.knowledgeGraph.GraphNamedObject")],i);const m=i;let u=class extends m{constructor(p){super(p),this.layoutGeometry=null}};t([e({type:g,json:{write:!0}})],u.prototype,"layoutGeometry",void 0),u=t([s("esri.rest.knowledgeGraph.Entity")],u);const P=u;let n=class extends m{constructor(r){super(r),this.originId=null,this.destinationId=null,this.layoutGeometry=null}};t([e({type:String,json:{write:!0}})],n.prototype,"originId",void 0),t([e({type:String,json:{write:!0}})],n.prototype,"destinationId",void 0),t([e({type:v,json:{write:!0}})],n.prototype,"layoutGeometry",void 0),n=t([s("esri.rest.knowledgeGraph.Relationship")],n);const Q=n;let d=class extends y{constructor(r){super(r)}};d=t([s("esri.rest.knowledgeGraph.ObjectValue")],d);const S=d;let l=class extends h{constructor(p){super(p),this.path=[]}};t([e({type:[y],json:{write:!0}})],l.prototype,"path",void 0),l=t([s("esri.rest.knowledgeGraph.Path")],l);const I=l;let c=class extends G{constructor(r){super(r),this.openCypherQuery=""}};t([e()],c.prototype,"openCypherQuery",void 0),c=t([s("esri.rest.knowledgeGraph.GraphQuery")],c);const j=c;let o=class extends j{constructor(r){super(r),this.bindParameters=null,this.bindGeometryQuantizationParameters=null,this.outputQuantizationParameters=null,this.outputSpatialReference=null,this.provenanceBehavior=null}};t([e()],o.prototype,"bindParameters",void 0),t([e()],o.prototype,"bindGeometryQuantizationParameters",void 0),t([e()],o.prototype,"outputQuantizationParameters",void 0),t([e({type:w})],o.prototype,"outputSpatialReference",void 0),t([e()],o.prototype,"provenanceBehavior",void 0),o=t([s("esri.rest.knowledgeGraph.GraphQueryStreaming")],o);const R=o;export{Q as a,I as b,P as c,R as p,S as t};
