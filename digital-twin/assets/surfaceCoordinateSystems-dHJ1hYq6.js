import{cK as Q,o0 as S,rc as k,bP as O,bg as ee,aU as me,aW as ge,rd as fe,re as ve,b_ as z,ar as te,rf as T,rg as ne,my as ye,rh as L,ri as _e,rj as w,rk as ie,rl as xe,rm as se,rn as we,li as Te,ro as Se,mz as be,rp as Ce,e3 as Pe,rq as Me,ih as Ve,g as $e,dR as Re,h as Oe,ik as A,rr as re,rs as Ie,bN as De,e as M,ej as Ze,rt as Ee,a3 as He,A as Z,l$ as Fe,u as E,cU as U,mh as We,aL as B,r as u,m as h,a as Ge,b2 as ke,ru as oe,aK as ae,b1 as ze,as as x,rv as Le,ay as f,e_ as q,rw as H,a$ as Ae,aZ as Ue,aX as Be,aY as qe,rx as je,ry as Ke,gn as j,dc as Ne}from"./index--YEV5yv0.js";import{a as F,i as W}from"./dehydratedFeatureComparison-D7wykoHT.js";import{P as Xe,E as Ye,p as Je,b as Qe}from"./EditGeometryOperations-D70fs19-.js";import{p as G,D as et}from"./InteractiveToolBase-CBRGYbKm.js";import{e as K}from"./SnappingContext-CmBPXvDK.js";import{f as tt}from"./SnappingDragPipelineStep-BRditlH5.js";import{p as nt}from"./SnappingOperation-jFLOAEf1.js";import{e as N,r as it}from"./mat2df64-C5HCLMgl.js";const Mt=["freehand","hybrid","click"],le="click";class st{constructor({consumesClicks:e,grabbableForEvent:t}){this.events=new Q,this.interactive=!0,this.selectable=!1,this.cursor=null,this.grabbable=!0,this.consumesClicks=e,this.grabbableForEvent=t}destroy(){}intersectionDistance(e,t){return 0}attach(){}detach(){}onElevationChange(){}onViewChange(){}}function Vt(s,e,t,n,i,l){let a="geodesic",p=ve(t);const r=S();return k(s,e,n,r),r[2]=0,p&&O(r,t,r,p)||(a="euclidean",p=t),{mode:a,view:e,elevationInfo:n,hasZ:i,directionMode:l,spatialReference:s.spatialReference,measurementSR:p,origin:r}}function rt(s,e,t){if(e==null||s==null)return;const n=ye(t.measurementSR);if(n==null)return;const i=I(s,t);if(i==null)return;const l=L(e,n);return new _e(i,l)}function ot(s,e,t,n){if(t==null||s==null)return;const i=I(s,n);if(i==null)return;const l=T(t),a=10,p=o=>{if(o==null)return;const d=S(),g=we(o,"degrees","geographic");return Se(d,i,n.measurementSR,a,g,n.mode)?new Te(i,d):void 0},r=()=>{if(e!=null&&s!=null)return T(se(e,s))};switch(n.directionMode){case w.Absolute:return p(l);case w.Relative:{const o=r();return o==null?void 0:p(o+l)}case w.RelativeBilateral:{const o=r();return o==null?void 0:ie([p(o+l),p(o-l)])}}}function pe(s,e){const t=D(s,e);return t!=null?new xe(t):void 0}function ce(s,e,t){const{context:n,longitude:i,latitude:l,direction:a,distance:p,elevation:r}=t;if(i!=null||l!=null||p!=null||r!=null||a!=null){if(i!=null||l!=null){const o=T(i),d=T(l),g=D(r,n);return new ne(o,d,g)}return at(s,e,t)}}function at(s,e,{context:t,direction:n,distance:i,elevation:l}){if(e==null)return pe(l,t);const{view:a,elevationInfo:p,measurementSR:r}=t,o=k(e,a,p);if(!r||!O(o,e.spatialReference,X,r))return;const[d,g]=X,b=i!=null?L(i,"meters"):void 0,v=T(n),C=D(l,t),y=m=>{const _=new Me([d,g],r,b,C,m);return b==null||m==null||C==null&&t.hasZ?_:new Ve(_.closestTo(o))};if(v==null)return y(void 0);const P=()=>{if(s!=null&&e!=null)return T(se(s,e))};switch(t.directionMode){case w.Absolute:return y(v);case w.Relative:{const m=P();return m==null?void 0:y(m+v)}case w.RelativeBilateral:{const m=P();return m==null?void 0:ie([y(m+v),y(m-v)])}}}function lt(s){return s.context.mode==="geodesic"?ce(null,null,s):ue(s)}function pt(s,e,t){const{context:n,x:i,y:l,distance:a,direction:p,elevation:r}=t;return n.mode==="geodesic"?ce(e,s,t):i!=null||l!=null?ue(t):ct([rt(s,a,n),ot(s,e,p,n),pe(r,n)])}function ue({x:s,y:e,elevation:t,context:n}){$.x=(s==null?void 0:s.value)??0,$.y=(e==null?void 0:e.value)??0,$.spatialReference=n.spatialReference;const i=I($,n,dt);return new ne(s!=null&&i!=null?i[0]:void 0,e!=null&&i!=null?i[1]:void 0,D(t,n))}function ct(s){let e;for(const t of s)t&&(e=(e==null?void 0:e.intersect(t))??t);return e}function I(s,e,t=S()){const{view:n,elevationInfo:i,measurementSR:l,origin:a,mode:p}=e;if(k(s,n,i,t),O(t,s.spatialReference,t,l))return p!=="geodesic"&&ee(t,t,a),t}function ut(s,e,t,n){const{view:i,measurementSR:l,spatialReference:a,origin:p,mode:r}=t;if(r==="geodesic"?me(V,s):ge(V,s,p),O(V,l,V,a))return fe(V,i,e,t,n)}function D(s,e){var t;return((t=ht(s,e))==null?void 0:t.value)??void 0}function ht(s,{view:e,origin:t,elevationInfo:n,hasZ:i,measurementSR:l}){if(s==null||!i)return;const a=be(l);if(a==null)return;const[p,r]=t,o=L(s,a),d=(e==null?void 0:e.type)==="3d"?Ce(e,p,r,o,l,n):o;return d!=null?Pe(d,a):void 0}const X=S(),dt=S(),V=S(),$=z(0,0,0,te.WGS84),mt="crosshair",gt="progress",Y=Symbol(),J=Symbol();let c=class extends Q.EventedMixin($e){constructor(e){super(e),this._createOperationCompleted=!1,this._hideDefaultCursor=!1,this._pointerDownStates=new Re,this._stagedScreenPoint=null,this._stagedPointerType=null,this._updatingHandles=new Oe,this._stagedPointerId=null,this.constraintsEnabled=!1,this.constraints=void 0,this._getPointConstraint=A(lt),this._getPolylineOrPolygonConstraint=A(pt),this.constraintZ=null,this.defaultZ=null,this.isDraped=!0,this.labelOptions=new re,this.cursor=null,this.loading=!1,this.snapToSceneEnabled=null,this.firstVertex=null,this.lastVertex=null,this.secondToLastVertex=null,e.elevationInfo==null&&(this.elevationInfo=Ie(!!e.hasZ))}initialize(){const{geometryType:e,view:t}=this,n=t.spatialReference,i="viewingMode"in t.state?t.state.viewingMode:De.Local,l=e==="segment"||e==="multipoint"?"polyline":e;this.coordinateHelper=Xe(this.hasZ,this.hasM,n),this._editGeometryOperations=new Ye(new Je(l,this.coordinateHelper),i),this._snappingOperation=new nt({view:t}),this.addHandles([M(()=>({stagedPoint:this._snappingOperation.stagedPoint,constraint:this._constraint}),({stagedPoint:r,constraint:o},d)=>{const{snappingOptions:g}=this;if(g&&(g.forceDisabled=o!=null&&Ee(o)),d!=null&&r===d.stagedPoint&&o!==d.constraint)return this._onKeyboardBasedChange();this._processCursor(r??this._screenToMap(this._stagedScreenPoint))},{equals:(r,o)=>r.stagedPoint===o.stagedPoint&&Ze(r.constraint,o.constraint)}),M(()=>this.view.viewpoint,(r,o)=>{r&&o&&He(r,o)&&this._onKeyboardBasedChange()})]),this._activeComponent=new Qe(n,i),this._editGeometryOperations.data.components.push(this._activeComponent);const a=this.segmentLabels;a!=null&&(a.context={view:t,editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,labelOptions:this.labelOptions},this.addHandles(M(()=>this.labelOptions.enabled,r=>{a.visible=r},Z))),this.addHandles(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],r=>{var C,y,P,m;const o=r.vertices.map(_=>({componentIndex:0,vertexIndex:_.index,coordinates:this.coordinateHelper.vectorToArray(_.pos)})),d=o.map(_=>_.coordinates),g=this.coordinateHelper.vectorToDehydratedPoint((C=this._activeComponent.getFirstVertex())==null?void 0:C.pos)??null;F(g,this.firstVertex)||(this.firstVertex=g);const b=this.coordinateHelper.vectorToDehydratedPoint((y=this._activeComponent.getLastVertex())==null?void 0:y.pos)??null;F(b,this.lastVertex)||(this.lastVertex=b);const v=this.coordinateHelper.vectorToDehydratedPoint((m=(P=this._activeComponent.edges.at(-1))==null?void 0:P.leftVertex)==null?void 0:m.pos)??null;switch(F(v,this.secondToLastVertex)||(this.secondToLastVertex=v),this._processCursor(this.cursorVertex),r.type){case"vertex-add":this.emit(r.type,{...r,added:d,vertices:o});break;case"vertex-update":this.emit(r.type,{...r,updated:d,vertices:o});break;case"vertex-remove":this.emit(r.type,{...r,removed:d,vertices:o})}}));const p=this._manipulator=new st({consumesClicks:!1,grabbableForEvent:r=>this.drawingMode!=="click"||r.pointerType==="touch"&&this._snappingEnabled&&this._pointerDownStates.size===1});this.manipulators.add(p),p.grabbable=e!=="point"&&e!=="multipoint",this.addHandles([p.events.on("immediate-click",r=>this._onImmediateClick(r)),p.events.on("immediate-double-click",r=>this._onImmediateDoubleClick(r)),M(()=>this.drawingMode,()=>{this.removeHandles(Y),this.addHandles(this._createManipulatorDragPipeline(p),Y)},Z),M(()=>({effectiveCursor:this.effectiveCursor}),({effectiveCursor:r})=>{p.cursor=r},Z)]),Fe(this,()=>{const r=this.view.inputManager.latestPointerType??"mouse",o=this._getSnappingContext(r);if(this.snappingManager!=null){const d=this._snappingOperation.snapAgainNearPreviousMapPoint(this.snappingManager,o);this._updatingHandles.addPromise(B(d))}})}destroy(){E(this.segmentLabels),E(this._snappingOperation),this._editGeometryOperations=E(this._editGeometryOperations),this._updatingHandles.destroy()}get _isDragging(){const{_stagedPointerId:e,_manipulator:t}=this;return e!=null&&this._pointerDownStates.has(e)||t.grabbing||!t.interactive}get _snappingEnabled(){return this.snappingManager!=null&&this.snappingManager.options.effectiveEnabled}get _requiresScenePoint(){const e=this._updateAndGetEffectiveDrawSurface();return this.view.type==="3d"&&this.drawSurface!==e}get canRedo(){return this._editGeometryOperations.canRedo}get canUndo(){return this._editGeometryOperations.canUndo}get committedVertices(){return this._activeComponent.vertices.map(e=>this.coordinateHelper.vectorToArray(e.pos))}get _constraint(){const{constraints:e,constraintsEnabled:t}=this;if(e&&t)switch(this.geometryType){case"point":case"multipoint":return this._getPointConstraint(e);case"polygon":case"polyline":return this._getPolylineOrPolygonConstraint(this.lastVertex,this.secondToLastVertex,e)}}set drawingMode(e){this._set("drawingMode",e??le)}get effectiveCursor(){return this.loading?gt:this._hideDefaultCursor?null:this.cursor||mt}get interactive(){return this._manipulator.interactive}set interactive(e){this._manipulator.interactive=e}get isCompleted(){return this._createOperationCompleted}get numCommittedVertices(){return this._activeComponent.vertices.length}get snappingOptions(){return this.snappingManager!=null?this.snappingManager.options:null}get cursorVertex(){return this._get("cursorVertex")}get visualizationCursorVertex(){return this._stagedPointerType==="mouse"?this.cursorVertex:null}get committableVertex(){const{cursorVertex:e,lastVertex:t,firstVertex:n,geometryType:i}=this;return i==="polygon"&&W(e,n)||W(e,t)?null:e}get updating(){return this._updatingHandles.updating}get geometryIncludingUncommittedVertices(){const{committedVertices:e,committableVertex:t,coordinateHelper:n}=this,i=e.slice();return t!=null&&i.push(n.pointToArray(t)),i}cancel(){this.complete({aborted:!0})}commitStagedVertex(){this._snappingOperation.abort();const{committableVertex:e}=this;e!=null&&this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(e))}complete(e){var a;const t=(e==null?void 0:e.aborted)||!1;this._snappingOperation.abort(),(a=this.snappingManager)==null||a.doneSnapping();const{geometryType:n,numCommittedVertices:i}=this,l=n==="multipoint"&&i===0||n==="polyline"&&i<2||n==="polygon"&&i<3;n!=="segment"&&n!=="point"||this.commitStagedVertex(),this._createOperationCompleted=!l,(this.isCompleted||t)&&(this._stagedScreenPoint=null,this._stagedPointerId=null,this._stagedPointerType=null,this._processCursor(null),this.emit("complete",{vertices:this.committedVertices.map((p,r)=>({componentIndex:0,vertexIndex:r,coordinates:p})),aborted:t,type:"complete"}))}onInputEvent(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}}redo(){this._editGeometryOperations.redo()}undo(){this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()}_processCursor(e){var p,r;const t=U(this.cursorVertex),n=U(e),i=n&&(((p=this._updateAndGetEffectiveDrawSurface())==null?void 0:p.constrainZ(n))??n),l=this._snapToClosingVertex(i),a=this._applyConstraints(l);W(t,a)||(this._set("cursorVertex",a),(r=this.segmentLabels)==null||r.set("stagedVertex",a!=null?this.coordinateHelper.pointToVector(a):null),a==null||this._stagedPointerType!=="mouse"?this.emit("cursor-remove"):this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(a)}],operation:"apply",type:"vertex-update"}))}_snapToClosingVertex(e){if(e==null||this._isDragging||this.geometryType!=="polygon"||this.numCommittedVertices<=2)return e;const t=this._mapToScreen(e);if(!t)return e;const n=this._activeComponent;return this._vertexWithinPointerDistance(n.vertices[0].pos,t)?this.firstVertex:this._vertexWithinPointerDistance(n.vertices.at(-1).pos,t)?this.lastVertex:e}_createManipulatorDragPipeline(e){switch(this.drawingMode){case"click":return this._createManipulatorDragPipelineClick(e);case"freehand":return this._createManipulatorDragPipelineFreehand(e);case"hybrid":return this._createManipulatorDragPipelineHybrid(e)}}_createManipulatorDragPipelineClick(e){return G(e,(t,n,i,l)=>{const a=l==="touch"&&this._snappingEnabled;if(this.isCompleted||!a)return;const{snappingStep:p,cancelSnapping:r}=tt({predicate:()=>a,snappingManager:this.snappingManager,snappingContext:new K({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,feature:this.graphic,pointer:l,visualizer:this.snappingVisualizer,drawConstraints:this.constraints}),updatingHandles:this._updatingHandles,useZ:!this._requiresScenePoint});i=i.next(o=>(a&&this.snappingManager!=null&&this.snappingManager.doneSnapping(),o)).next(r),n.next(this._screenToMapDragEventStep()).next(o=>(o.action==="start"&&(this._processCursor(o.mapStart),(this.geometryType==="segment"||a&&!this.numCommittedVertices)&&this.commitStagedVertex()),o)).next(et(this.view,this.elevationInfo)).next(...p).next(o=>(a&&(this._processCursor(o.mapEnd),o.action==="end"&&this.commitStagedVertex()),o)).next(o=>(o.action==="end"&&(this._stagedPointerType!=="mouse"&&this._snappingOperation.abort(),this.geometryType!=="segment"&&this.geometryType!=="point"||this.complete()),o))})}_createManipulatorDragPipelineFreehand(e){return G(e,(t,n)=>{this.isCompleted||n.next(this._screenToMapDragEventStep()).next(i=>(i.action==="start"&&(this._snappingOperation.abort(),this.committableVertex==null&&this._processCursor(i.mapStart),this.geometryType==="segment"&&this.commitStagedVertex()),i)).next(i=>{switch(i.action){case"start":case"update":this._processCursor(i.mapEnd),this.geometryType!=="polygon"&&this.geometryType!=="polyline"||this.commitStagedVertex();break;case"end":this.complete()}return i})})}_createManipulatorDragPipelineHybrid(e){return G(e,(t,n)=>{this.isCompleted||n.next(this._screenToMapDragEventStep()).next(i=>(i.action==="start"&&(this._snappingOperation.abort(),this.addHandles(this._editGeometryOperations.createUndoGroup(),J),this._processCursor(i.mapStart),this.commitStagedVertex()),i)).next(i=>{switch(i.action){case"start":case"update":this._processCursor(i.mapEnd),this.geometryType!=="polygon"&&this.geometryType!=="polyline"||this.commitStagedVertex();break;case"end":this._stagedPointerType!=="mouse"&&this._snappingOperation.abort(),this.removeHandles(J),this.geometryType!=="segment"&&this.geometryType!=="point"||this.complete()}return i})})}get _drawAtFixedElevation(){const{constraintsEnabled:e,constraintZ:t,geometryType:n,numCommittedVertices:i}=this;return e?t!=null||n==="segment"&&i>0:(n==="segment"||n==="polygon")&&i>0}_updateAndGetEffectiveDrawSurface(){var o;const{constraintsEnabled:e,coordinateHelper:t,drawSurface:n,elevationDrawSurface:i,snapToSceneEnabled:l}=this;if(i==null)return n;if(!this.hasZ)return i.defaultZ=null,i;const a=(o=this.elevationInfo)==null?void 0:o.mode;let p=this.defaultZ,r=e||a==="absolute-height";return l!=null&&(r=l),a==="on-the-ground"&&(r=!1),this._drawAtFixedElevation&&(p=(e?this.constraintZ:null)??t.getZ(this._activeComponent.vertices[0].pos),r=!1),r?n:(i.defaultZ=p,i)}_mapToScreen(e){var t;return(t=this._updateAndGetEffectiveDrawSurface())==null?void 0:t.mapToScreen(e)}_onHold(e){this._snappingOperation.abort(),this.drawingMode==="click"&&e.pointerType==="touch"&&this._snappingEnabled&&this._processCursor(e.mapPoint),e.stopPropagation()}_onImmediateClick(e){if(!(e.pointerType==="mouse"&&e.button===2||this._manipulator.dragging))try{const{drawingMode:t,geometryType:n}=this;this._stagedPointerType=e.pointerType,this._stagedScreenPoint=e.screenPoint;const i=this._screenToMap(e.screenPoint);if(i==null||i==null||t==="freehand"&&n!=="point"&&n!=="multipoint")return;if(this._snappingEnabled&&this.cursorVertex!=null||this._processCursor(i),this.committableVertex==null)return void this.complete();this.commitStagedVertex(),e.pointerType!=="mouse"&&this._processCursor(null),(t==="freehand"&&this.geometryType!=="multipoint"||n==="point"||n==="segment"&&this.numCommittedVertices===2||n==="segment"&&t==="hybrid"&&this.numCommittedVertices===1)&&this.complete()}finally{e.stopPropagation()}}_onImmediateDoubleClick(e){this._manipulator.dragging||this.geometryType==="point"||(this.complete(),e.stopPropagation())}_onPointerMove(e){const t=We(e.x,e.y);this._stagedScreenPoint=t,this._stagedPointerType=e.pointerType,this._stagedPointerId=e.pointerId,this._isDragging?this._snappingOperation.abort():(e.stopPropagation(),this._processCursorMovementRelativeToSurface(t,e.pointerType))}_onKeyboardBasedChange(){this._stagedPointerType==="mouse"&&this._stagedScreenPoint&&this._stagedPointerId!=null&&!this._isDragging?this._processCursorMovementRelativeToSurface(this._stagedScreenPoint,this._stagedPointerType):this._snappingOperation.abort()}_processCursorMovementRelativeToSurface(e,t){var r;const n=this._snappingOperation,i=this._screenToMap(e),l=this._requiresScenePoint?(r=this.drawSurface)==null?void 0:r.screenToMap(e):null;if(i==null)return this._hideDefaultCursor=!0,this._processCursor(null),void n.abort();this._hideDefaultCursor=!1;const a=this.snappingManager;if(a==null)return this._processCursor(i),void n.abort();const p=this._getSnappingContext(t);this._updatingHandles.addPromise(B(n.snap({point:i,scenePoint:l},a,p)))}_applyConstraints(e){const{_constraint:t,constraints:n}=this;if(!e||!n||!t)return e;const{context:i}=n,l=I(e,i),a=l?t.closestTo(l):void 0;if(!a)return e;const p=ut(a,e,i),r=this.view.type==="2d"||i.elevationInfo.mode!=="absolute-height";return p!=null&&r&&this.constraintZ!=null&&this.hasZ&&(p.z=this.constraintZ),p}_screenToMap(e){var t;return e?(t=this._updateAndGetEffectiveDrawSurface())==null?void 0:t.screenToMap(e):null}_screenToMapDragEventStep(){let e=null;return t=>{if(t.action==="start"&&(e=this._screenToMap(t.screenStart)),e==null)return null;const n=this._screenToMap(t.screenEnd);return n!=null?{...t,mapStart:e,mapEnd:n}:null}}_vertexWithinPointerDistance(e,t){const i=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(e));return i!=null&&ft(i,t,25)}_getSnappingContext(e){var n;const t=this._drawAtFixedElevation?(n=this.elevationDrawSurface)==null?void 0:n.defaultZ:null;return new K({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:e,feature:this.graphic,visualizer:this.snappingVisualizer,selfSnappingZ:t!=null?{value:t,elevationInfo:this.elevationInfo}:null,drawConstraints:this.constraints})}};function ft(s,e,t){const n=s.x-e.x,i=s.y-e.y;return n*n+i*i<=t}u([h()],c.prototype,"_hideDefaultCursor",void 0),u([h()],c.prototype,"_stagedPointerId",void 0),u([h()],c.prototype,"_isDragging",null),u([h()],c.prototype,"_snappingOperation",void 0),u([h()],c.prototype,"_snappingEnabled",null),u([h({constructOnly:!0})],c.prototype,"graphic",void 0),u([h()],c.prototype,"constraintsEnabled",void 0),u([h()],c.prototype,"constraints",void 0),u([h()],c.prototype,"_constraint",null),u([h()],c.prototype,"constraintZ",void 0),u([h()],c.prototype,"defaultZ",void 0),u([h()],c.prototype,"isDraped",void 0),u([h({value:le})],c.prototype,"drawingMode",null),u([h({constructOnly:!0})],c.prototype,"elevationDrawSurface",void 0),u([h({constructOnly:!0})],c.prototype,"elevationInfo",void 0),u([h({constructOnly:!0,type:re})],c.prototype,"labelOptions",void 0),u([h({constructOnly:!0})],c.prototype,"geometryType",void 0),u([h({constructOnly:!0})],c.prototype,"hasM",void 0),u([h({constructOnly:!0})],c.prototype,"hasZ",void 0),u([h()],c.prototype,"cursor",void 0),u([h()],c.prototype,"effectiveCursor",null),u([h()],c.prototype,"loading",void 0),u([h({constructOnly:!0})],c.prototype,"manipulators",void 0),u([h({constructOnly:!0})],c.prototype,"drawSurface",void 0),u([h({constructOnly:!0})],c.prototype,"segmentLabels",void 0),u([h({constructOnly:!0})],c.prototype,"snappingManager",void 0),u([h({constructOnly:!0})],c.prototype,"snappingVisualizer",void 0),u([h()],c.prototype,"snapToSceneEnabled",void 0),u([h({readOnly:!0})],c.prototype,"cursorVertex",null),u([h({readOnly:!0})],c.prototype,"visualizationCursorVertex",null),u([h()],c.prototype,"committableVertex",null),u([h()],c.prototype,"firstVertex",void 0),u([h()],c.prototype,"lastVertex",void 0),u([h()],c.prototype,"secondToLastVertex",void 0),u([h()],c.prototype,"updating",null),u([h({constructOnly:!0})],c.prototype,"view",void 0),c=u([Ge("esri.views.draw.DrawOperation")],c);class Rt{constructor(e,t,n,i=null){this._elevationInfo=e,this.defaultZ=t,this._view=n,this._excludeGraphics=i}screenToMap(e){const{defaultZ:t,_view:n}=this,i=n.sceneIntersectionHelper.intersectElevationFromScreen(ke(e.x,e.y),this._elevationInfo,t??0,this._excludeGraphics);return t==null&&i!=null&&(i.z=void 0),i}mapToScreen(e){const t=z(e.x,e.y,oe(this._view,e,this._elevationInfo),e.spatialReference);return this._view.toScreen(t)}constrainZ(e){const{defaultZ:t}=this;return t!=null&&e.z!==t&&((e=ae(e)).z=t),e}}let Ot=class{constructor(e,t,n=[]){this.view=e,this.elevationInfo=t,this.exclude=n}screenToMap(e){const t=this.view.toMap(e,{exclude:this.exclude,excludeLabels:!0});return t!=null&&(t.z=ze(t,this.view,this.elevationInfo)),t}mapToScreen(e){let t=e;return this.elevationInfo!=null&&(t=z(e.x,e.y,oe(this.view,e,this.elevationInfo),e.spatialReference)),this.view.toScreen(t)}constrainZ(e){return e}};class Dt{constructor(e,t=!1,n=0){this.view=e,this.hasZ=t,this.defaultZ=n,this.mapToScreen=i=>e.toScreen(i),this.screenToMap=t?i=>{const l=e.toMap(i);return l.z=n,l}:i=>e.toMap(i)}constrainZ(e){const{defaultZ:t}=this;return this.hasZ&&e.z!==t&&((e=ae(e)).z=t),e}}new te;function R(s,e,t=null){return t!=null?[s,e,t]:[s,e]}function he(s,e,t=null){return t!=null?{x:s,y:e,z:t}:{x:s,y:e}}class de{constructor(e){this.spatialReference=e}mapToLocalMultiple(e){return e.map(t=>this.mapToLocal(t)).filter(Ne)}get doUnnormalization(){return!1}}class vt extends de{constructor(e,t,n=null){super(t),this._defaultZ=n,this.transform=N(),this.transformInv=N(),this.transform=it(e),Le(this.transformInv,this.transform)}makeMapPoint(e,t){return R(e,t,this._defaultZ)}mapToLocal(e){return he(this.transform[0]*e[0]+this.transform[2]*e[1]+this.transform[4],this.transform[1]*e[0]+this.transform[3]*e[1]+this.transform[5])}localToMap(e){return R(this.transformInv[0]*e.x+this.transformInv[2]*e.y+this.transformInv[4],this.transformInv[1]*e.x+this.transformInv[3]*e.y+this.transformInv[5],this._defaultZ)}}class yt extends de{constructor(e,t){super(e.spatialReference),this.view=e,this.defaultZ=null,this.pWS=f(),this.tangentFrameUpWS=f(),this.tangentFrameRightWS=f(),this.tangentFrameForwardWS=f(),this.localFrameRightWS=f(),this.localFrameUpWS=f(),this.worldToLocalTransform=q(),this.localToWorldTransform=q(),this.scale=1,this.scale=e.resolution,this.referenceMapPoint=t,this.defaultZ=t.hasZ?t.z:null;const n=e.state.camera.viewRight;this.view.renderCoordsHelper.toRenderCoords(this.referenceMapPoint,this.pWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,H.X,this.tangentFrameRightWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,H.Y,this.tangentFrameUpWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,H.Z,this.tangentFrameForwardWS);const i=f();Ae(i,this.tangentFrameForwardWS,Ue(n,this.tangentFrameForwardWS)),ee(this.localFrameRightWS,n,i),Be(this.localFrameRightWS,this.localFrameRightWS),qe(this.localFrameUpWS,this.tangentFrameForwardWS,this.localFrameRightWS),je(this.worldToLocalTransform,this.localFrameRightWS,this.tangentFrameRightWS),Ke(this.localToWorldTransform,this.worldToLocalTransform)}get doUnnormalization(){return this.view.viewingMode==="global"}makeMapPoint(e,t){return R(e,t,this.defaultZ)}mapToLocal(e){const t=f();this.view.renderCoordsHelper.toRenderCoords(new x({x:e[0],y:e[1],spatialReference:this.spatialReference}),t),j(t,t,this.worldToLocalTransform);const n=this.view.renderCoordsHelper.fromRenderCoords(t,new x({spatialReference:this.view.spatialReference}));return n!=null?he(n.x/this.scale,n.y/this.scale):null}localToMap(e){const t=f();this.view.renderCoordsHelper.toRenderCoords(new x({x:e.x*this.scale,y:e.y*this.scale,spatialReference:this.spatialReference}),t),j(t,t,this.localToWorldTransform);const n=this.view.renderCoordsHelper.fromRenderCoords(t,new x({spatialReference:this.view.spatialReference}));return n!=null?R(n.x,n.y,this.defaultZ):null}}function Zt(s,e){if(s.type==="2d")return new vt(s.state.transform,s.spatialReference,e.length>2?e[2]:null);if(s.type==="3d"){const t=e.length>2?new x({x:e[0],y:e[1],z:e[2],spatialReference:s.spatialReference}):new x({x:e[0],y:e[1],spatialReference:s.spatialReference});return new yt(s,t)}return null}export{c as F,Vt as Z,Mt as a,Zt as b,Rt as c,le as e,he as g,Dt as h,Ot as l};
