const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/DimensionAnalysisView3D-BKKPNL5I.js","assets/index-ByUZEoNK.js","assets/index-Bkubs9t2.css","assets/AnalysisView3D-CuhJ8iIP.js","assets/LengthDimension-DvdlB_1I.js","assets/TextOverlayItem-BCjwrLe9.js","assets/Segment-B5qJmcPK.js","assets/LineVisualElement-CAlOe-px.js","assets/geodesicLengthMeasurementUtils-Dg7VdlAx.js","assets/geometryEngine-BwCZC66d.js","assets/geometryEngineBase-DBBdXduU.js","assets/hydrated-TIhYPMd9.js","assets/SnappingOperation-ynpcNPm2.js","assets/ExtendedLineVisualElement-8jfvGw46.js","assets/vec4f32-CjrfB-0a.js","assets/EngineVisualElement-D0uPdUug.js","assets/Laserlines.glsl-ftNKtOQU.js","assets/PointVisualElement-3qABqjQD.js","assets/RightAngleQuadVisualElement-Dsy9B5EL.js","assets/SnappingManagerPool-_8y_A0_Z.js","assets/geometry2dUtils-CuHR2TdW.js","assets/floorFilterUtils-DZ5C6FQv.js","assets/keybindings-DOCDQMtP.js","assets/PointSnappingHint-eBgpKkM4.js","assets/ShadedColorMaterial.glsl-CHi8IP3d.js","assets/EditGeometryOperations-BZ8VnrSN.js","assets/dehydratedFeatureComparison-DQORjopP.js","assets/dragEventPipeline3D-BANGgMDQ.js","assets/ImageMaterial.glsl-DzPor31T.js","assets/memoize-DsJmrG76.js","assets/Factory-CBFIovbB.js","assets/analysisViewUtils-pu-ET_qd.js","assets/ToolIntersector-CxiJPURa.js","assets/projectionUtils-CY9JTxfG.js"])))=>i.map(i=>d[i]);
import{e as a,y as t,a as o,V as h,aJ as w,a1 as u,a9 as c,m as V,cq as d,u as p,cr as _,B as m,_ as v}from"./index-ByUZEoNK.js";import{l as A}from"./LayerView3D-rgiCvobA.js";import{y as f}from"./LayerView-BdmvtWs6.js";const D=i=>{let s=class extends i{constructor(...e){super(...e),this.layer=null}get interactive(){return this.analysisView!=null&&this.analysisView.interactive}set interactive(e){this.analysisView!=null&&(this.analysisView.interactive=e)}get results(){return this.analysisView!=null?this.analysisView.results:new h}get selectedDimension(){return this.analysisView!=null?this.analysisView.selectedDimension:null}set selectedDimension(e){this.analysisView!=null&&(this.analysisView.selectedDimension=e)}async createLengthDimensions(e){if(this.analysisView==null)throw w();await this.analysisView.createLengthDimensions(e)}};return a([t()],s.prototype,"layer",void 0),a([t()],s.prototype,"interactive",null),a([t({readOnly:!0})],s.prototype,"results",null),a([t()],s.prototype,"selectedDimension",null),s=a([o("esri.views.layers.DimensionLayerView")],s),s},y="analysis-view-handles";let n=class extends A(D(f)){constructor(i){super(i),this.type="dimension-3d",this._analysisModule=null}initialize(){this.addHandles(u(()=>this.layer.source,i=>{this._destroyAnalysisView(),i!=null&&this._createAnalysisView(i)},c),y)}destroy(){this.removeHandles(y),this._destroyAnalysisView()}isUpdating(){return this._createAnalysisViewTask!=null||this.analysisView!=null&&this.analysisView.updating}async whenAnalysisView(){if(this.analysisView!=null)return this.analysisView;if(this._createAnalysisViewTask!=null)return this._createAnalysisViewTask.promise;throw new V("layerview:no-analysisview-for-analysis","The analysis has not been set on the DimensionLayer of this layer view")}_createAnalysisView(i){const s=d(async e=>(this.analysisView=await this._createAnalysisViewPromise(i,e),this._createAnalysisViewTask===s&&(this._createAnalysisViewTask=null),this.analysisView));this.addResolvingPromise(s.promise),this._createAnalysisViewTask=s}_destroyAnalysisView(){this.analysisView=p(this.analysisView),this._createAnalysisViewTask=_(this._createAnalysisViewTask)}async _createAnalysisViewPromise(i,s){let e=this._analysisModule;if(e==null){const r=await this._loadAnalysisModule();this._analysisModule=r,e=r}const l=new e.default({analysis:i,view:this.view,parent:this});if(await l.when(),m(s))throw l.destroy(),w();return l}_loadAnalysisModule(){return v(()=>import("./DimensionAnalysisView3D-BKKPNL5I.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]))}};a([t()],n.prototype,"type",void 0),a([t()],n.prototype,"analysisView",void 0),a([t()],n.prototype,"_createAnalysisViewTask",void 0),n=a([o("esri.views.3d.layers.DimensionLayerView3D")],n);const L=n;export{L as default};
