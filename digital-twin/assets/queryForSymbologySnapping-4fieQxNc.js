import{c0 as v,jz as E,jA as O,l as D,bL as P,bB as q,jB as B,jC as G,al as A,jD as H,jE as J,cR as L}from"./index-BR4NftXd.js";async function U(t,d,l,p,o){const{elevationProvider:f,renderCoordsHelper:i}=t,{elevationInfo:u}=d,{pointsInFeatures:j,spatialReference:g}=p,h=v.fromJSON(g),y=E(u,!0),I=await O(y,h,o);D(o);const c=[],e=new Set,s=new Set,a=new q,n=P(0,0,0,v.WGS84),r=new J,w=A();n.spatialReference=h;const x=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:m,points:S}of j){const b=l(m);if(b==null){for(const R of S)c.push(R.z??0);e.add(m);continue}b.isDraped&&s.add(m);const z=b.graphic.geometry;a.setFromElevationInfo(B(z,u)),a.updateFeatureExpressionInfoContext(I,b.graphic,d);for(const{x:R,y:C,z:F}of S)n.x=R,n.y=C,n.z=F??0,await G(n,w,x,0,{signal:o}),H(w,f,a,i,r),c.push(r.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function W(t,d,l){if(t==null||d.candidates.length===0)return $;const p=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,o=[],f=[],{renderer:i}=t,u=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?L():null,j=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await u,r=await t.getRenderingInfoAsync(s,i,n,{signal:l});return r==null?[]:a.queryForSnapping(e,h,r,l)},{candidates:g,spatialReference:h}=d;for(let e=0;e<g.length;++e){const s=g[e],{objectId:a}=s,n=typeof a=="number"?p==null?void 0:p.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(j(s,n)),f.push(e))}if(o.length===0)return $;const y=await Promise.all(o);D(l);const I=[],c=[];for(let e=0;e<y.length;++e){const s=y[e],a=f[e];for(const n of s)I.push(n),c.push(a)}return{candidates:I,sourceCandidateIndices:c}}const $={candidates:[],sourceCandidateIndices:[]};export{U as m,W as r};
