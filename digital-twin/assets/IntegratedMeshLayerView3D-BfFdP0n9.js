import{dv as n,dA as l,dB as m,P as p,E as d,e,y as i,c8 as c,a as u}from"./index-C56kakMx.js";import{A as h}from"./I3SMeshView3D-PAEdbakb.js";import{l as g}from"./LayerView3D-Bo0Bi1s_.js";import{y}from"./LayerView-fw_cH2wJ.js";import"./Transform-kO9qvli0.js";import"./RenderTexture-CwUy36KT.js";import"./I3SOverrides-BOEbmf59.js";import"./I3SNode-BdD61gzY.js";import"./I3SUtil-BNuxDGlo.js";import"./I3SBinaryReader-B_Pr8xTh.js";import"./meshFeatureSet-PZ69uSEF.js";import"./Mesh-Kou9gO5k.js";import"./MeshTransform-Cj0gcwQz.js";import"./vertexSpaceConversion-Yyg8Puyr.js";import"./External-9n1cNc5s.js";import"./infoFor3D-DsOdlPuA.js";import"./FeatureLayerView3D-DM2QxByD.js";import"./FeatureLayerViewBase3D-CNigdVzc.js";import"./HeatmapDensity.glsl-Cf6KudQE.js";import"./timeSupport-CPxOpg2U.js";import"./projectExtentUtils-Fgo_Po4C.js";import"./dehydratedFeatureComparison-qNKwSMcl.js";import"./queryForSymbologySnapping-BpIDUKod.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-8PMom9Cl.js";import"./optimizedFeatureQueryEngineAdapter-w6Aa3JKT.js";import"./PooledRBush--QBLsKty.js";import"./quickselect-CS9AUS8y.js";import"./popupUtils-CbSq92Y9.js";import"./QueryEngine-B9c6ijJ0.js";import"./WhereClause-CDBWsRsW.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-DA4IyJJc.js";import"./utils-DYiMEShb.js";import"./ClassBreaksDefinition-uZcXzX23.js";import"./FeatureStore-yuhYr8F9.js";import"./BoundsStore-BCZnbrOJ.js";import"./WorkerHandle-9-F30Ze9.js";import"./EventedSet-CyvwiXoW.js";import"./RefreshableLayerView-ChAn8_Z2.js";import"./SceneModification-k2wI59qr.js";import"./SceneLayerWorker-BtmGpWN2.js";import"./makeScheduleFunction-CggzEh3c.js";const v=.2;let t=class extends h(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this._needsNormals=!n("disable-feature:im-shading"),this.drapeTargetType=l.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var r;return((r=this._controller)==null?void 0:r.updatingProgress)??0}get lodFactor(){var r,o,a,s;return((s=(a=(o=(r=this.view)==null?void 0:r.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?v:1}get visibleAtCurrentScale(){return m(this.i3slayer.effectiveScaleRange,this.view.terrainScale)}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){return new d({layer:this.layer,sourceLayer:this.layer})}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const r=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>r,()=>this._modifications=r.toArray(),p),"modifications")}};e([i()],t.prototype,"layer",void 0),e([i()],t.prototype,"i3slayer",null),e([i(c)],t.prototype,"updatingProgress",void 0),e([i()],t.prototype,"updatingProgressValue",null),e([i()],t.prototype,"lodFactor",null),e([i({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),e([i({readOnly:!0})],t.prototype,"visibleAtCurrentScale",null),t=e([u("esri.views.3d.layers.IntegratedMeshLayerView3D")],t);const nt=t;export{nt as default};
