const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/knowledgeGraphService-BgECbRCW.js","assets/index-Bmji7YKu.js","assets/index-CNEcSgHw.css","assets/networkEnums-diC9k1MD.js","assets/GPMessage-BTQSNfx6.js","assets/GraphQueryStreaming-CsWNpfuT.js"])))=>i.map(i=>d[i]);
import{K as I,hW as y,_ as K,hZ as _,I as F,dM as q,hY as P,i1 as V,cm as J,de as M,df as N,dd as U,ar as T,cn as j,co as O,i2 as Q,i3 as L}from"./index-Bmji7YKu.js";import{u as W,V as Z,y as b,X as B,J as X,C as k,K as Y,Z as D,a0 as z,a1 as H,a2 as $,U as A}from"./arcade-BaH9q5ht.js";import{a as p,r as l}from"./unitConversion-BTv1xTgL.js";import{l as nn}from"./portalUtils-YWfCFz2t.js";import{p as tn,c as en,t as an,a as rn,b as on}from"./GraphQueryStreaming-CsWNpfuT.js";import"./number-DmaHFGw4.js";import"./WhereClause-Cnx4wT50.js";import"./hash-CcEbRgUF.js";let f=null;async function sn(n){const t=J.geometryServiceUrl??"";if(!t){M()||await N();for(const e of n)e.container[e.indexer]=U(e.container[e.indexer],T.WGS84);return}const a=n.map(e=>e.container[e.indexer]),i=new j({geometries:a,outSpatialReference:T.WGS84}),s=await O(t,i);for(let e=0;e<s.length;e++){const r=n[e];r.container[r.indexer]=s[e]}}async function G(n,t){const a=new F({portal:n,id:t});return await a.load(),f===null&&(f=await K(()=>import("./knowledgeGraphService-BgECbRCW.js").then(i=>i.k),__vite__mapDeps([0,1,2,3,4,5]))),await f.fetchKnowledgeGraph(a.url)}function v(n,t,a,i,s){if(n===null)return null;if(y(n)||q(n))return n;if(D(n)||D(n))return n.toJSDate();if(z(n))return n.toStorageFormat();if(H(n))return n.toStorageString();if($(n)){const e={};for(const r of n.keys())e[r]=v(n.field(r),t,a,i,s),e[r]instanceof P&&s.push({container:e,indexer:r});return e}if(_(n)){const e=n.map(r=>v(r,t,a,i,s));for(let r=0;r<e.length;r++)e[r]instanceof P&&s.push({container:e,indexer:r});return e}return A(n)?n.spatialReference.isWGS84?n:n.spatialReference.isWebMercator&&t?V(n):n:void 0}function cn(n,t){if(!n)return n;if(n.spatialReference.isWGS84&&t.spatialReference.isWebMercator)return L(n);if(n.spatialReference.equals(t.spatialReference))return n;throw new p(t,l.WrongSpatialReference,null)}function R(n,t){if(!n)return null;const a={};for(const i in n)a[i]=g(n[i],t);return a}function g(n,t){return n===null?null:_(n)?n.map(a=>g(a,t)):n instanceof en?{graphTypeName:n.typeName,id:n.id,graphType:"entity",properties:R(n.properties,t)}:n instanceof an?{graphType:"object",properties:R(n.properties,t)}:n instanceof rn?{graphTypeName:n.typeName,id:n.id,graphType:"relationship",originId:n.originId??null,destinationId:n.destinationId??null,properties:R(n.properties,t)}:n instanceof on?{graphType:"path",path:n.path?n.path.map(a=>g(a,t)):null}:A(n)?cn(n,t):y(n)||q(n)||Q(n)?n:null}function wn(n){n.mode==="async"&&(n.functions.knowledgegraphbyportalitem=function(t,a){return n.standardFunctionAsync(t,a,(i,s,e)=>{var d,m;if(W(e,2,2,t,a),e[0]===null)throw new p(t,l.PortalRequired,a);if(e[0]instanceof Z){const u=b(e[1]);let h;return h=(d=t.services)!=null&&d.portal?t.services.portal:I.getDefault(),G(nn(e[0],h),u)}if(y(e[0])===!1)throw new p(t,l.InvalidParameter,a);const r=b(e[0]);return G(((m=t.services)==null?void 0:m.portal)??I.getDefault(),r)})},n.signatures.push({name:"knowledgegraphbyportalitem",min:2,max:2}),n.functions.querygraph=function(t,a){return n.standardFunctionAsync(t,a,async(i,s,e)=>{var x;W(e,2,4,t,a);const r=e[0];if(!B(r))throw new p(t,l.InvalidParameter,a);const d=e[1];if(!y(d))throw new p(t,l.InvalidParameter,a);f===null&&(f=await K(()=>import("./knowledgeGraphService-BgECbRCW.js").then(o=>o.k),__vite__mapDeps([0,1,2,3,4,5])));let m=null;const u=X(e[2],null);if(!(u instanceof k||u===null))throw new p(t,l.InvalidParameter,a);if(u){let o=[];m=v(u,!0,!1,t,o),o=o.filter(c=>!c.container[c.indexer].spatialReference.isWGS84),o.length>0&&await sn(o)}const h=new tn({openCypherQuery:d,bindParameters:m});(((x=r==null?void 0:r.serviceDefinition)==null?void 0:x.currentVersion)??11.3)>11.2&&(h.outputSpatialReference=t.spatialReference);const C=(await f.executeQueryStreaming(r,h)).resultRowsStream.getReader(),S=[];try{for(;;){const{done:o,value:c}=await C.read();if(o)break;if(_(c))for(const w of c)S.push(g(w,t));else{const w=[];for(const E of c)w.push(g(c[E],t));S.push(w)}}}catch(o){throw o}return k.convertJsonToArcade(S,Y(t),!1,!0)})},n.signatures.push({name:"querygraph",min:2,max:4}))}export{wn as registerFunctions};
