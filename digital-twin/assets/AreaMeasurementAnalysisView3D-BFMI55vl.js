import{aK as Ve,aF as te,by as q,aZ as I,aL as Ge,as as p,tb as Ee,ki as Ie,eu as Te,pp as xe,ev as Fe,d2 as oe,qt as We,c5 as Ue,po as Z,ar as le,bF as ke,eI as je,ef as se,ze as ie,pG as qe,zf as he,aM as He,bm as Be,iE as de,aJ as D,aG as Q,zg as Ne,j3 as Je,u$ as Ke,ww as ce,tO as ue,eB as Ze,b7 as pe,eL as Qe,eE as Xe,zh as Ye,dk as W,ea as et,e as l,y as d,a as J,S as ae,f as O,C as ge,ci as tt,dw as me,jc as st,A as re,e9 as it,n as rt,af as nt,y1 as at,y6 as ot,bq as H,y0 as X,y9 as lt,yZ as ht,y7 as _e,y5 as dt,yb as z,ye as ct,bY as ut,zi as pt,wc as U,yg as gt,yh as mt,z1 as _t,yi as yt,yk as ft,yC as vt,ym as wt,yn as Lt,yo as St,yp as $t,yd as V,yf as Pt,yH as bt,mt as Y,yJ as ee,yN as Ct,yL as Mt,yu as At,yv as Vt,qO as De,bt as B,bd as G,v1 as Gt,bf as ye,bg as fe,nP as xt,bK as Dt,bL as ve,eP as Rt,oN as we,eM as Le,lJ as Ot,eO as Se,bM as zt,eQ as Et,lF as It,P as Tt,u as b,zj as Ft,di as $e,bI as Wt,lE as Ut,zk as kt,zl as jt,zm as qt,zn as Ht,lS as Bt}from"./index-CdZN6t8g.js";import{s as Nt}from"./AnalysisView3D-DFaQoHZ4.js";import{e as ne}from"./interfaces-js1RL7O8.js";import{h as Jt,j as Kt,m as Zt,p as Qt,g as Xt}from"./measurementUtils-JJFLNFa-.js";import{k as Pe}from"./euclideanAreaMeasurementUtils-Bh73eIU2.js";import{t as Yt}from"./projectionUtils-CpPjKmK3.js";import{E as be,p as es,P as ts,a as ss}from"./EditGeometryOperations-Bhv2uQPx.js";import{g as Re}from"./quantityFormatUtils-CmGygrwm.js";import{f as Ce,_ as is,m as rs}from"./Segment-C6gfGLJg.js";import{f as E}from"./LineVisualElement-BE9YU7oh.js";import{a as ns}from"./Object3DVisualElement-AW0Y2ZFQ.js";import"./geodesicAreaMeasurementUtils-DUfW0j0O.js";import"./VisualElement-DqST8002.js";import"./TextOverlayItem-Dn2jtv_2.js";function Me(t,e,s,i,r){Ve(k,t),te(j,t,e),q(k,s,k,r),q(j,s,j,r),I(i,j,k),Ge(i,i)}const k=p(),j=p();class as{get numVertices(){return this._length}get hasStagedVertex(){return this._hasCursorPoint}constructor(e){this.validMeasurement=!1,this.positionsWorld=[],this.positionsRender=[],this.positionsFittedWorld=[],this.positionsFittedRender=[],this.positionsGeodesic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=p(),this.areaCentroidRenderCoords=p(),this.geodesicAreaCentroidRenderCoords=p(),this.fittingMode=null,this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=p(),this._planeWorldCoords=Ee(),this._worldUp=p(),this._worldTangent=p(),this._frame=[p(),p(),p()],this._pathVersion=-1,this._hasCursorPoint=!1,this._mode=null,this._tempU=p(),this._tempV=p(),this._tempVec3=p(),this._tempSphere=Ie(),this._sceneView=e;const s=Te(e.spatialReference);this._measurementSR=s,this._lengthMeasurementUnit=xe(s)??"meters",this._areaMeasurementUnit=Fe(s)??"square-meters"}update(e,s,i,r,n,o){const a=s!=null,h=this._pathVersion===e.version,c=this._hasCursorPoint===a,u=this._mode===n;return!(h&&!o&&c&&u&&e.isValidPolygon)&&(this._pathVersion=e.version,this._hasCursorPoint=a,this._updateCursorSegmentLength(e,s),this._update(e,s,i,r,n),!0)}_update(e,s,i,r,n){const o=this._sceneView.renderSpatialReference,a=this._measurementSR,h=i.spatialReference;let c=e.numVertices;const u=!(s==null||s.equals(e.lastPoint)||c>2&&s.equals(e.firstPoint));u&&(c+=1);const g=!e.polygonIsClosed&&c>2,v=e.polygonIsClosed||g;this._resize(c);const y=oe(h),_=h!=null&&We(h)?h:null,P=_!=null&&Ue(h,y),{positionsGeodesic:w,positionsWorld:T,positionsRender:F,positionsSpherical:S}=this,A=(L,C)=>{os(i.elevationProvider,L),W(L,T[C],a),W(L,F[C],o),P&&(W(L,w[C],_),W(L,S[C],y),Ge(S[C],S[C]))};e.forEachVertexPosition((L,C)=>A(L,C)),u&&A(s,c-1);const x=this._updatePathLengths(v);if(this.pathLength=this._length>1?Z(x,this._lengthMeasurementUnit):null,P){const L=this._updateGeodesicPathLengths(v,_);this.geodesicPathLength=L!=null&&this._length>1?L:null}else this.geodesicPathLength=null;if(this._updateMode(n),!v)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(i,o,a,r),P&&this._updateGeodesicArea(i,_),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsRender:this.positionsRender,positionsFittedWorld:this.positionsFittedWorld,positionsFittedRender:this.positionsFittedRender,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorld.length=e,this.positionsRender.length=e,this.positionsFittedWorld.length=e,this.positionsFittedRender.length=e,this.positionsGeodesic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorld.push(p()),this.positionsRender.push(p()),this.positionsFittedWorld.push(le()),this.positionsFittedRender.push(p()),this.positionsGeodesic.push(p()),this.positionsSpherical.push(p()),this.positionsStereographic.push(le()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorld,i=this.pathSegmentLengths;let r=0;const n=this._length;for(let o=0;o<n;++o){const a=i[o]=ke(s[o],s[(o+1)%n]);(o<n-1||e)&&(r+=a)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeodesic,r=this.geodesicPathSegmentLengths;let n=0;const o=this._length;for(let a=0;a<o;++a){const h=je(i[a],i[(a+1)%o],s);if(h==null)return null;const c=se(h,"meters").value,u=r[a]=c;(a<o-1||e)&&(n+=u)}return Z(n,"meters")}_updateAreaAndPerimeterLength(e,s,i,r){const n=e.renderCoordsHelper,o=this.positionsWorld,a=this.positionsRender,h=this.positionsFittedWorld,c=this.positionsFittedRender,u=this._planeWorldCoords,g=this._centroidRenderCoords;ie(a,g),n.worldUpAtPosition(g,this._worldUp),n.worldBasisAtPosition(g,qe.X,this._worldTangent),Me(g,this._worldUp,s,this._worldUp,i),Me(g,this._worldTangent,s,this._worldTangent,i),o.length>2&&Jt(o,u),this.fittingMode=this._selectFittingMode(u,o,this._worldUp,r);let v=0;if(this.fittingMode==="horizontal"){let S=-1/0;a.forEach((A,x)=>{const L=n.getAltitude(a[x]);L>S&&(S=L,v=x)})}const y=o[v];let _=u,P=this._worldTangent;this.fittingMode==="horizontal"?_=this._worldUp:this.fittingMode==="vertical"&&(_=this._tempVec3,P=this._worldUp,he(u,this._worldUp,_)),Ve(this._frame[2],_),he(P,_,this._frame[0]),He(this._frame[1],this._frame[0],this._frame[2]),Be(this._frame[1],this._frame[1]);const w=this._tempVec3,T=this._tempU,F=this._tempV;for(let S=0;S<this._length;++S){const A=h[S],x=c[S];I(w,o[S],y),de(A,D(this._frame[0],w),D(this._frame[1],w)),Q(T,this._frame[0],A[0]),Q(F,this._frame[1],A[1]),te(w,T,F),te(w,w,y),q(w,i,x,s)}this.perimeterLength=this._length>0?this._updatePerimeterLengths():null,ie(c,this.areaCentroidRenderCoords),q(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,i),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?this._computeArea():null}_updateGeodesicArea(e,s){const{renderCoordsHelper:i,spatialReference:r}=e,{positionsSpherical:n,positionsStereographic:o}=this,a=this._tempVec3,h=Kt(n,a);if(!h)return void(this.geodesicArea=null);const c=this._tempU,u=this._tempV;Ne(a,c,u);for(let g=0;g<this._length;++g){const v=D(n[g],c),y=D(n[g],u),_=D(n[g],a);de(o[g],v/_,y/_)}Q(a,a,Je(r).radius),i.toRenderCoords(a,oe(r),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?this._computeGeodesicArea(s):null}_updatePerimeterLengths(){const e=this.positionsFittedWorld,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=Ke(e[r],e[(r+1)%this._length]);return Z(i,this._lengthMeasurementUnit)}_updateIntersectingSegments(){const e=this.positionsFittedWorld,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],a=e[r],h=e[(r+1)%this._length];ce(n,o,a,h)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsFittedWorld,s=this.triangleIndices=ue(Pe(e));let i=0;for(let r=0;r<s.length;r+=3)i+=Ze(e[s[r]],e[s[r+1]],e[s[r+2]]);return pe(i,this._areaMeasurementUnit)}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],a=e[r],h=e[(r+1)%this._length];ce(n,o,a,h)&&(s.add(i),s.add(r))}}_computeGeodesicArea(e){const s=this.positionsGeodesic,i=this.positionsStereographic,r=this.geodesicTriangleIndices=ue(Pe(i));let n=0;for(let o=0;o<r.length;o+=3){const a=Zt(s[r[o]],s[r[o+1]],s[r[o+2]],e);if(a==null)return null;n+=se(a,"square-meters").value}return pe(n,"square-meters")}_selectFittingMode(e,s,i,r){const n=s.map(u=>Math.abs(Qt(e,u))).reduce((u,g)=>Math.max(u,g),0);Xt(s,this._tempSphere);const o=n/(2*this._tempSphere[3]),a=o<r.maxRelativeErrorCoplanar,h=o<r.maxRelativeErrorAlmostCoplanar;let c="horizontal";return a?c="oblique":h&&(c=Math.abs(D(i,e))>Math.cos(Qe(r.verticalAngleThreshold))?"horizontal":"vertical"),c}_updateCursorSegmentLength(e,s){var r;const i=e.lastPoint;e.isValidPolygon||i==null||s==null?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=Xe(i,s),this.stagedSegmentLength=(r=Ye(i,s))==null?void 0:r.direct)}_updateMode(e){if(e===ne.Auto){this.actualMeasurementMode="euclidean";let s=0;this.geodesicPathLength!=null&&(s+=this.geodesicPathLength.value),s>ls&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===ne.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=e}}function os(t,e){e.hasZ||(e.z=et(t,e,"ground")??0)}const ls=1e5;let R=class extends ae{constructor(e){super(e)}initialize(){this._measurementDataManager=new as(this.view),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),O(()=>this.analysisViewData.stagedPoint,()=>this._update(),ge),O(()=>this.analysisViewData.mode,()=>this._update(),ge)]),this._update()}_update(e=!1){const{analysisViewData:s,view:i}=this,r={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(s.path,s.stagedPoint,i,r,s.mode,e)&&(s.measurementData=this._measurementDataManager.getData())}};l([d({constructOnly:!0})],R.prototype,"view",void 0),l([d({constructOnly:!0})],R.prototype,"analysis",void 0),l([d({constructOnly:!0})],R.prototype,"analysisViewData",void 0),R=l([J("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],R);let $=class extends tt.EventedAccessor{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=me()}set areaMeasurement(e){this._set("areaMeasurement",e),e!=null&&this.view!=null&&this._initialize(e,this.view)}set view(e){this._set("view",e),e!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,e)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||this._editGeometry.components.length===0}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=me(this._extent);return this.forEachVertex(s=>{st(e,s.pos)}),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,s){this.removeAllHandles(),this.addHandles(O(()=>e.geometry,()=>{this._updateEditGeometryFromModelGeometry(e,s)},re)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,s){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let i=e.geometry;if(i!=null){const r=it(i,s.spatialReference);r==null&&Yt(e,i.spatialReference,rt.getLogger(this)),i=r}this._editGeometryOperations=i!=null?be.fromGeometry(i,s.state.viewingMode):new be(new es("polygon",ts(!0,!1,s.spatialReference)),s.state.viewingMode),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",r=>{this._makeDirty(r.addedVertices!=null||r.removedVertices!=null),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex(s=>{e.push(s)}),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getFirstVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const s=this._editGeometry.components[0].vertices[0];let i=s;do{if(i.index===e)return i;i=i.rightEdge.rightVertex}while(i!==s&&i!=null);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const s=this._editGeometry.coordinateHelper;this.forEachVertex((i,r)=>{s.vectorToPoint(i.pos,Ae),e(Ae,r)})}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const i=this.view;this._editGeometry.components.push(new ss(i.spatialReference,i.state.viewingMode))}const s=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,s=""){let i=!1;if(this._editGeometry.components.forEach(r=>{r.iterateVertices(n=>{n===e&&(i=!0)})}),!i)throw new Error(`vertex doesnt exist ${s}`);return i}setVertexPosition(e,s){if(!this.constructed)return null;const i=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(s));return this.emit("change"),i}equals(e){if(this.numVertices!==e.numVertices)return!1;let s=!0;return this.forEachVertexPosition((i,r)=>{const n=e.getVertexPositionAsPointFromIndex(r);i.equals(n)||(s=!1)}),!!s}};l([d({value:null})],$.prototype,"areaMeasurement",null),l([d({value:null})],$.prototype,"view",null),l([d()],$.prototype,"isEmptyPolygon",null),l([d()],$.prototype,"isValidPolygon",null),l([d()],$.prototype,"extent",null),l([d()],$.prototype,"spatialReference",null),l([d()],$.prototype,"numVertices",null),l([d()],$.prototype,"polygonIsClosed",null),$=l([J("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementPathHelper")],$);const Ae=new nt;function Oe(t){const e=new at,{vertex:s,fragment:i}=e;return ot(s,t),e.attributes.add(H.POSITION,"vec3"),e.attributes.add(H.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.multipassEnabled&&e.varyings.add("depth","float"),s.code.add(X`
    void main(void) {
      vUV = uv0;
      ${t.multipassEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(lt,t),i.uniforms.add(new ht("size",r=>r.size)),i.uniforms.add(new _e("color1",r=>r.color1)),i.uniforms.add(new _e("color2",r=>r.color2)),i.include(dt),t.transparencyPassType===z.ColorAlpha&&(e.outputs.add("fragColor","vec4",0),e.outputs.add("fragAlpha","float",1)),i.code.add(X`
    void main() {
      ${t.multipassEnabled?"terrainDepthTest(depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      ${t.transparencyPassType===z.ColorAlpha?X`
              fragColor = premultiplyAlpha(fragColor);
              fragAlpha = fragColor.a;`:""}
    }
  `),e}const hs=Object.freeze(Object.defineProperty({__proto__:null,build:Oe},Symbol.toStringTag,{value:"Module"}));class K extends gt{initializeProgram(e){return new mt(e.rctx,K.shader.get().build(this.configuration),_t)}_setPipelineState(e){const s=this.configuration,i=e===z.NONE,r=e===z.FrontFace;return yt({blending:s.transparent?i?cs:ft(e):null,depthTest:{func:vt(e)},depthWrite:i?s.writeDepth?wt:null:Lt(e),drawBuffers:St(e),colorWrite:$t,polygonOffset:i||r?s.polygonOffset?ds:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}K.shader=new ct(hs,()=>ut(()=>Promise.resolve().then(()=>$s),void 0));const ds={factor:0,units:-25},cs=pt(U.SRC_ALPHA,U.ONE,U.ONE_MINUS_SRC_ALPHA,U.ONE_MINUS_SRC_ALPHA);class M extends Pt{constructor(){super(...arguments),this.transparencyPassType=z.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.multipassEnabled=!1,this.cullAboveGround=!1}}l([V({count:z.COUNT})],M.prototype,"transparencyPassType",void 0),l([V()],M.prototype,"transparent",void 0),l([V()],M.prototype,"writeDepth",void 0),l([V()],M.prototype,"polygonOffset",void 0),l([V()],M.prototype,"multipassEnabled",void 0),l([V()],M.prototype,"cullAboveGround",void 0),l([V({constValue:!1})],M.prototype,"occlusionPass",void 0);class us extends bt{constructor(e){super(e,new gs),this.produces=new Map([[Y.OPAQUE_MATERIAL,s=>ee(s)&&!this.parameters.transparent],[Y.TRANSPARENT_MATERIAL,s=>ee(s)&&this.parameters.transparent&&this.parameters.writeDepth],[Y.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,s=>ee(s)&&this.parameters.transparent&&!this.parameters.writeDepth]]),this._configuration=new M}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.multipassEnabled=s.multipassEnabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}createGLMaterial(e){return new ps(e)}createBufferWriter(){return new Ct(Mt)}}class ps extends At{beginSlot(e){return this.ensureTechnique(K,e)}}let gs=class extends Vt{constructor(){super(...arguments),this.size=De(1,1),this.color1=B(.75,.75,.75,1),this.color2=B(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}};class ms extends ns{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=G.OccludeAndTransparent,this._geometry=null,this._size=De(1,1),this._color1=B(1,.5,0,.5),this._color2=B(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){Gt(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){ye(e,this._color1)||(fe(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){ye(e,this._color2)||(fe(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial!=null&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new us({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){this._checkerBoardMaterial!=null&&e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const s=_s;xt(s,this.transform);const i=this._geometry,r=[],n=p();i.position.forEach(h=>{I(n,h,s),r.push(n[0],n[1],n[2])});const o=[];i.uv.forEach(h=>{o.push(h[0],h[1])});const a=new Dt(this._checkerBoardMaterial,[[H.POSITION,new ve(r,i.triangleIndices,3,!0)],[H.UV0,new ve(o,i.triangleIndices,2,!0)]]);e.addGeometry(a)}}const _s=p();let f=class extends ae{get _parameters(){const{accentColor:t,textColor:e}=this.view.effectiveTheme,s=Rt(t),i=we(t,.5),r=we(Le(t),.5),n=Le(e,Ot.Low);return{accentColor:s,transparentAccentColor:i,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:e,textBackgroundColor:Se(n,.6),textCalloutColor:Se(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get _renderUnits(){const t=this.view.renderCoordsHelper.spatialReference;return xe(t)??"meters"}get testData(){}constructor(t){super(t),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=p(),this._originTransform=zt(),this.messages=null,this.viewData=Ss,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_parameters:e,view:s}=this;this._path=new E({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new E({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new E({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new E({view:s,attached:!0,width:e.projectionLineWidth,stipplePattern:Et(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new ms({view:s,attached:!0,isDecoration:!0});const i={attached:!0,view:s,isDecoration:!0};this._areaLabel=new Ce({...i,fontSize:N.Large}),this._perimeterLengthLabel=new Ce({...i,fontSize:N.Small}),this.addHandles([O(()=>[t.mode,this.visible,t.unit,t.measurementData,t.stagedPoint],()=>this._update(),re),O(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),re),It(()=>this._updateMessageBundle()),O(()=>this._parameters,({accentColor:r,transparentAccentColor:n,transparentContrastColor:o,textColor:a,textBackgroundColor:h,textCalloutColor:c})=>{const{_path:u,_intersectedPath:g,_perimeter:v,_projectionLines:y,_measurementArea:_,_areaLabel:P,_perimeterLengthLabel:w}=this;u.color=r,g.color=r,v.color=r,y.color=r,_.color1=n,_.color2=o,P.textColor=a,P.backgroundColor=h,P.calloutColor=c,w.textColor=a,w.backgroundColor=h,w.calloutColor=c},Tt)]),this._updateMessageBundle()}destroy(){this._measurementArea=b(this._measurementArea),this._path=b(this._path),this._intersectedPath=b(this._intersectedPath),this._perimeter=b(this._perimeter),this._intersectedPerimeter=b(this._intersectedPerimeter),this._areaLabel=b(this._areaLabel),this._perimeterLengthLabel=b(this._perimeterLengthLabel),this._projectionLines=b(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e){const s=t.validMeasurement,i=t.actualMeasurementMode==="geodesic",r=i?t.geodesicArea:t.area;let n=1;if(r){const a=fs(r,this.analysisViewData.unit);n=Ft(Math.sqrt(a.value)/Math.sqrt(300)),n*=Math.sqrt($e(1,a.unit,"square-meters")),n=$e(n,"meters",this._renderUnits)}const o={validMeasurement:s,numVertices:t.numVertices,hasStagedVertex:t.hasStagedVertex,path:e,mode:t.actualMeasurementMode,positionsRender:t.positionsRender,positionsFittedWorld:t.positionsFittedWorld,positionsFittedRender:t.positionsFittedRender,intersectingSegments:i?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:i?t.geodesicTriangleIndices:t.triangleIndices,areaCentroid:i?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,perimeterLengthLabelSegmentIndex:0,area:i?t.geodesicArea:t.area,pathLength:i?t.geodesicPathLength:t.pathLength,perimeterLength:t.perimeterLength,checkerSize:n};this._set("viewData",o)}_updateOrigin(){const t=this.viewData;ie(t.positionsRender,this._origin),Wt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=this.view.renderCoordsHelper.spatialReference,i=e.mode,r=[],n=[],o=[],a=e.numVertices,h=e.validMeasurement?a:a-1;for(let u=0;u<h;++u){const g=e[t][u],v=e[t][(u+1)%a];let y=null;switch(i){case"euclidean":y=new rs(g,v);break;case"geodesic":y=new is(g,v,s)}e.intersectingSegments.has(u)?o.push(y):n.push(y),r.push(y)}let c=null;return e.validMeasurement&&e.hasStagedVertex&&h>=2?c=r[r.length-2]:e.hasStagedVertex&&h>=1&&(c=r[r.length-1]),{all:r,nonIntersecting:n,intersecting:o,stagedSegment:c}}_updatePathSegments(){const{visible:t}=this,e=this._createSegments("positionsRender");this._path.setGeometryFromSegments(e.nonIntersecting,this._origin),this._path.visible=t,this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPath.visible=t,this._pathSegments=e.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRender");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsFittedWorld,position:t.positionsFittedRender,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.mode,i=t.numVertices;if(i>0&&t.validMeasurement&&s==="euclidean"){const r=[];for(let n=0;n<i;++n){const o=p();I(o,t.positionsRender[n],this._origin);const a=p();I(a,t.positionsFittedRender[n],this._origin),r.push([o,a])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{area:e,path:s}=t;if(!s)return;const i=this.visible,r=ys(this.messages,e,this.analysisViewData.unit);if(r!=null?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=r,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&i):this._areaLabel.visible=!1,this._set("areaLabel",r),t.validMeasurement&&t.intersectingSegments.size===0){const n=t.mode==="geodesic"||!t.validMeasurement,o=n?t.pathLength:t.perimeterLength,a=vs(this.messages,o,this.analysisViewData.unit);this._set("perimeterLengthLabel",a),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=a,this._perimeterLengthLabel.visible=!0;let h=!0;for(let c=0;c<t.numVertices;++c){const u=(t.perimeterLengthLabelSegmentIndex+c)%t.numVertices,g=n?this._pathSegments[u]:this._perimeterSegments[u];if(h=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:g,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;h=!1}this._perimeterLengthLabel.visible=h&&i}else this._perimeterLengthLabel.visible=!1}_updateMessageBundle(){this.loadingMessages=!0,Ut("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};function ys(t,e,s){return t&&e&&Re(t,e,ze(e,s))}function fs(t,e){return se(t,ze(t,e))}function ze(t,e){switch(e){case"metric":return jt(t.value,t.unit);case"imperial":return kt(t.value,t.unit);default:return e}}function vs(t,e,s){return t&&e&&Re(t,e,ws(e,s))}function ws(t,e){const s=Ls(e);switch(s){case"metric":return Ht(t.value,t.unit);case"imperial":return qt(t.value,t.unit);default:return s}}function Ls(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}var N;l([d()],f.prototype,"_parameters",null),l([d()],f.prototype,"view",void 0),l([d()],f.prototype,"messages",void 0),l([d()],f.prototype,"analysis",void 0),l([d()],f.prototype,"viewData",void 0),l([d()],f.prototype,"analysisViewData",void 0),l([d({readOnly:!0})],f.prototype,"areaLabel",void 0),l([d({readOnly:!0})],f.prototype,"perimeterLengthLabel",void 0),l([d()],f.prototype,"loadingMessages",void 0),l([d()],f.prototype,"visible",null),l([d()],f.prototype,"_renderUnits",null),f=l([J("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],f),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(N||(N={}));const Ss={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,mode:null,positionsRender:null,positionsFittedWorld:null,positionsFittedRender:null,intersectingSegments:null,triangleIndices:null,areaCentroid:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null,area:null,pathLength:null,perimeterLength:null};let m=class extends Nt(ae){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=ne.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new $({view:e,areaMeasurement:t}),this.analysisVisualization=new f({view:e,analysis:t,analysisViewData:this}),this.analysisController=new R({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=b(this.analysisController),this.analysisVisualization=b(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return t==null?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){}};l([d({readOnly:!0})],m.prototype,"type",void 0),l([d({constructOnly:!0,nonNullable:!0})],m.prototype,"analysis",void 0),l([d()],m.prototype,"updating",null),l([d()],m.prototype,"analysisVisualization",void 0),l([d()],m.prototype,"analysisController",void 0),l([d()],m.prototype,"result",null),l([d()],m.prototype,"measurementData",void 0),l([d()],m.prototype,"viewData",null),l([d()],m.prototype,"validMeasurement",null),l([d()],m.prototype,"path",void 0),l([d()],m.prototype,"lastDraggedVertex",void 0),l([d()],m.prototype,"stagedPoint",void 0),l([d()],m.prototype,"mode",void 0),l([d()],m.prototype,"unit",null),l([d(Bt)],m.prototype,"_defaultUnit",void 0),m=l([J("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],m);const Us=m,$s=Object.freeze(Object.defineProperty({__proto__:null,build:Oe},Symbol.toStringTag,{value:"Module"}));export{Us as default};
