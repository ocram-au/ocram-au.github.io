import{km as D,gs as z,gu as F,gv as E,gw as x,kn as G,ko as q}from"./index-B_n9yUkW.js";class A{constructor(){this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}destroy(){this._inFlightResourceMap.clear(),this._resourceMap.clear()}getResource(t){return this._resourceMap.get(t)??null}async fetchResource(t,u){const n=this._resourceMap.get(t);if(n)return{width:n.width,height:n.height};let o=this._inFlightResourceMap.get(t);return o?o.then(s=>({width:s.width,height:s.height})):(o=D(t,u),this._inFlightResourceMap.set(t,o),o.then(s=>(this._inFlightResourceMap.delete(t),this._resourceMap.set(t,s),{width:s.width,height:s.height}),()=>({width:0,height:0})))}deleteResource(t){this._inFlightResourceMap.delete(t),this._resourceMap.delete(t)}loadFont(t){return z(t)}}const K=96/72;class O{constructor(t){this._spatialReference=t,this._imageDataCanvas=null,this._cimResourceManager=new A}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(t,u,n,o,s,a,c,l,_){if(!t)return null;const{data:d}=t;if(!d||d.type!=="CIMSymbolReference"||!d.symbol)return null;const{symbol:b}=d;a||(a=F(b));const h=await E.resolveSymbolOverrides(d,u,this._spatialReference,s,a,c,l),y=this._cimResourceManager,M=[];x.fetchResources(h,y,M),x.fetchFonts(h,y,M),M.length>0&&await Promise.all(M);const{width:i,height:r}=n,f=P(a,i,r,o),e=x.getEnvelope(h,f,y);if(!e)return null;let g=1,I=0,C=0;switch(b.type){case"CIMPointSymbol":case"CIMTextSymbol":{let m=1;e.width>i&&(m=i/e.width);let p=1;e.height>r&&(p=r/e.height),o==="preview"&&(e.width<i&&(m=i/e.width),e.height<r&&(p=r/e.height)),g=Math.min(m,p),I=e.x+e.width/2,C=e.y+e.height/2}break;case"CIMLineSymbol":{(_||e.height>r)&&(g=r/e.height),C=e.y+e.height/2;const m=e.x*g+i/2,p=(e.x+e.width)*g+i/2,{paths:R}=f;R[0][0][0]-=m/g,R[0][2][0]-=(p-i)/g}break;case"CIMPolygonSymbol":{I=e.x+e.width/2,C=e.y+e.height/2;const m=e.x*g+i/2,p=(e.x+e.width)*g+i/2,R=e.y*g+r/2,S=(e.y+e.height)*g+r/2,{rings:w}=f;m<0&&(w[0][0][0]-=m,w[0][3][0]-=m,w[0][4][0]-=m),R<0&&(w[0][0][1]+=R,w[0][1][1]+=R,w[0][4][1]+=R),p>i&&(w[0][1][0]-=p-i,w[0][2][0]-=p-i),S>r&&(w[0][2][1]+=S-r,w[0][3][1]+=S-r)}}const k={type:"cim",data:{type:"CIMSymbolReference",symbol:h}};return this.rasterize(k,i,r,I,C,g,a,1,f)}rasterize(t,u,n,o,s,a,c,l=0,_=null){const{data:d}=t;if(!d||d.type!=="CIMSymbolReference"||!d.symbol)return null;const{symbol:b}=d,h=this._canvas,y=(window.devicePixelRatio||1)*K;h.width=u*y,h.height=n*y,c||(c=F(b)),_||(_=P(c,u,n,"legend")),h.width+=2*l,h.height+=2*l;const M=h.getContext("2d",{willReadFrequently:!0}),i=q.createIdentity();return i.translate(-o,-s),i.scale(a*y,-a*y),i.translate(u*y/2+l,n*y/2+l),M.clearRect(0,0,h.width,h.height),new G(M,this._cimResourceManager,i,!0).drawSymbol(b,_),M.getImageData(0,0,h.width,h.height)}}function P(v,t,u,n){const s=-t/2+1,a=t/2-1,c=u/2-1,l=-u/2+1;switch(v){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[s,0],[0,0],[a,0]]]};default:return n==="legend"?{rings:[[[s,c],[a,0],[a,l],[s,l],[s,c]]]}:{rings:[[[s,c],[a,c],[a,l],[s,l],[s,c]]]}}}export{O as CIMSymbolRasterizer};
