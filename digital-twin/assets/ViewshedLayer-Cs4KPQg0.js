import{lO as C,e as A,A as L,W as j,ht as H,lP as J,eg as E,aN as D,eb as R,r as s,m as r,jN as G,a as F,bO as N,cc as U,ce as W,a6 as Y,cO as k}from"./index-Bmji7YKu.js";import{d as T}from"./Viewshed-Co0WAv-o.js";const $=j.ofType(T);let o=class extends C{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(A(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},L))}get viewsheds(){return this._get("viewsheds")||new $}set viewsheds(e){this._set("viewsheds",H(e,this.viewsheds,$))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const n=this.viewsheds.filter(t=>t.observer!=null),c=n.map(t=>t.observer).toArray(),a=J(c,e);return a.pending!=null?{pending:a.pending,extent:null}:{pending:null,extent:a.geometries.map((t,u)=>{const g=n.at(u);return t!=null&&g!=null?this._computeViewshedExtent(this.viewsheds.at(u),t):null}).filter(t=>t!=null).reduce((t,u)=>B(t,u),null)}}_computeViewshedExtent(e,n){const{farDistance:c,heading:a,tilt:t,horizontalFieldOfView:u,verticalFieldOfView:g}=e,{spatialReference:f}=n,x=u/2,O=g/2,b=c/f.metersPerUnit,S=[E.normalize(a-x),a,E.normalize(a+x)],p=D.fromPoint(n),m=w=>{const d=S.map(l=>E.normalize(l-w));if(d[0]>d[2]||u===360)return b;const h=d.map(l=>Math.abs(l>180?360-l:l)).reduce((l,v)=>l>v?v:l);return h>90?0:b*Math.cos(R(h))};p.xmax+=m(90),p.xmin-=m(-90),p.ymax+=m(0),p.ymin-=m(180);const y=n.z;if(y!=null){let w=y,d=y;const h=t-90,l=N(h+O,-90,90),v=N(h-O,-90,90),V=f!=null&&f.isGeographic?c:b;w+=V*_(l),d+=V*_(v);const q=P(O)*V,M=_(h)*q*(1-P(x));t<90&&(w-=M),t>90&&(d-=M),p.zmax=Math.max(w,y),p.zmin=Math.min(d,y)}return p}clear(){this.viewsheds.removeAll()}};function B(e,n){return e==null?n:n==null?e:e.union(n)}function P(e){return Math.cos(R(e))}function _(e){return Math.sin(R(e))}s([r({type:["viewshed"]})],o.prototype,"type",void 0),s([r({cast:G,type:$,nonNullable:!0})],o.prototype,"viewsheds",null),s([r({readOnly:!0})],o.prototype,"spatialReference",null),s([r()],o.prototype,"_extent",void 0),s([r({readOnly:!0})],o.prototype,"extent",null),s([r({readOnly:!0})],o.prototype,"requiredPropertiesForEditing",null),o=s([F("esri.analysis.ViewshedAnalysis")],o);const z=o;let i=class extends U(W(Y)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new z,this.opacity=1}initialize(){this.addHandles(A(()=>this.source,(e,n)=>{n!=null&&n.parent===this&&(n.parent=null),e!=null&&(e.parent=this)},L))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new z)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,n,c,a){n.viewsheds=e.filter(t=>t.isValid()).map(t=>t.toJSON(a)).toJSON()}};s([r({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),s([r({type:["ViewshedLayer"]})],i.prototype,"operationalLayerType",void 0),s([r({type:z,nonNullable:!0})],i.prototype,"source",void 0),s([r({readOnly:!0})],i.prototype,"spatialReference",null),s([r({readOnly:!0})],i.prototype,"fullExtent",null),s([r({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],i.prototype,"opacity",void 0),s([r({type:["show","hide"]})],i.prototype,"listMode",void 0),s([r({type:j.ofType(T),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],i.prototype,"viewsheds",null),s([k("web-scene","viewsheds")],i.prototype,"writeViewsheds",null),i=s([F("esri.layers.ViewshedLayer")],i);const Q=i;export{Q as default};
