import{aU as xe,ay as p,aW as K,bP as B,bg as T,aX as De,sU as Ee,kU as Fe,my as Ge,dY as We,kF as re,cy as Ue,e3 as X,aw as ne,bV as Be,mA as k,BU as Q,rw as ke,BV as ae,aY as je,bA as qe,ee as oe,aZ as x,a$ as Y,BW as He,eb as Ne,rJ as Xe,zn as le,wn as he,e2 as Ye,bl as de,eh as Ze,iM as F,j$ as Je,g as ie,e as R,C as ce,r as l,m as d,a as N,cK as Ke,dh as ue,js as Qe,A as ee,j_ as et,k as tt,as as st,BX as Re,w4 as it,Az as rt,AF as nt,AH as at,AG as ot,AA as lt,bF as j,AJ as pe,BJ as ht,AI as me,AK as dt,AL as ct,AM as ut,_ as pt,AN as ge,AO as mt,AT as gt,AV as _t,AW as ft,AX as yt,AZ as vt,A$ as wt,pv as Lt,B0 as St,mY as $t,B1 as O,mZ as Z,Bx as J,pz as _e,B6 as At,Bo as Mt,tq as Oe,bo as q,B9 as Ct,bp as b,xj as Pt,br as fe,bs as ye,ps as bt,b$ as Vt,c0 as ve,es as xt,q0 as we,ep as Le,m1 as Dt,eq as Se,bY as Gt,l_ as Rt,P as Ot,u as M,BY as It,hT as $e,bX as Tt,lZ as zt,m8 as Et}from"./index-QRcEofMq.js";import{s as Ft}from"./AnalysisView3D-DdVXrZI5.js";import{e as te}from"./interfaces-js1RL7O8.js";import{g as Wt,j as Ut,m as Bt,p as kt,h as jt}from"./measurementUtils-C6gh8914.js";import{U as Ae}from"./euclideanAreaMeasurementUtils-DzIW2Hjs.js";import{l as qt,h as Ht,g as Ie}from"./quantityFormatUtils-BS6Qk6N6.js";import{u as Nt,f as Xt}from"./geodesicLengthMeasurementUtils-B8HR0rWW.js";import{e as Yt}from"./geodesicMeasurementUtils-D2RMoaLq.js";import{t as Zt,d as I}from"./LineVisualElement-BCWe2mz8.js";import{E as Me,p as Jt,P as Kt,b as Qt}from"./EditGeometryOperations-B10zD9fA.js";import{a as Ce,_ as es,f as ts}from"./Segment-eOmYUbmZ.js";import{a as ss}from"./Object3DVisualElement-Hb2yj6FK.js";import{f as is}from"./DefaultLayouts-DAuCU4BQ.js";import{e as rs}from"./TriangleMaterial-cgwDxBJR.js";import{h as ns}from"./lineStippleUtils-C89mzWlO.js";import"./geodesicAreaMeasurementUtils-DqdH89c5.js";import"./geometryEngine-DX5BtIYH.js";import"./geometryEngineBase-B0ZyeKAX.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-D5t1DmbE.js";import"./line-CmIQVam2.js";import"./VisualElement-CdATycF2.js";import"./TextOverlayItem-CXJV3oIU.js";function Pe(t,e,s,i,r){xe(W,t),K(U,t,e),B(W,s,W,r),B(U,s,U,r),T(i,U,W),De(i,i)}const W=p(),U=p();class as{get numVertices(){return this._length}get hasStagedVertex(){return this._hasCursorPoint}constructor(e){this.validMeasurement=!1,this.positionsWorld=[],this.positionsRender=[],this.positionsFittedWorld=[],this.positionsFittedRender=[],this.positionsGeodesic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=p(),this.areaCentroidRenderCoords=p(),this.geodesicAreaCentroidRenderCoords=p(),this.fittingMode=null,this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=p(),this._planeWorldCoords=Ee(),this._worldUp=p(),this._worldTangent=p(),this._frame=[p(),p(),p()],this._pathVersion=-1,this._hasCursorPoint=!1,this._mode=null,this._tempU=p(),this._tempV=p(),this._tempVec3=p(),this._tempSphere=Fe(),this._sceneView=e;const s=qt(e.spatialReference);this._measurementSR=s,this._lengthMeasurementUnit=Ge(s)??"meters",this._areaMeasurementUnit=We(s)??"square-meters"}update(e,s,i,r,n,o){const a=s!=null,h=this._pathVersion===e.version,c=this._hasCursorPoint===a,u=this._mode===n;return!(h&&!o&&c&&u&&e.isValidPolygon)&&(this._pathVersion=e.version,this._hasCursorPoint=a,this._updateCursorSegmentLength(e,s),this._update(e,s,i,r,n),!0)}_update(e,s,i,r,n){const o=this._sceneView.renderSpatialReference,a=this._measurementSR,h=i.spatialReference;let c=e.numVertices;const u=!(s==null||s.equals(e.lastPoint)||c>2&&s.equals(e.firstPoint));u&&(c+=1);const m=!e.polygonIsClosed&&c>2,v=e.polygonIsClosed||m;this._resize(c);const f=re(h),_=h!=null&&Yt(h)?h:null,A=_!=null&&Ue(h,f),{positionsGeodesic:w,positionsWorld:z,positionsRender:E,positionsSpherical:S}=this,P=(L,C)=>{os(i.elevationProvider,L),F(L,z[C],a),F(L,E[C],o),A&&(F(L,w[C],_),F(L,S[C],f),De(S[C],S[C]))};e.forEachVertexPosition((L,C)=>P(L,C)),u&&P(s,c-1);const V=this._updatePathLengths(v);if(this.pathLength=this._length>1?X(V,this._lengthMeasurementUnit):null,A){const L=this._updateGeodesicPathLengths(v,_);this.geodesicPathLength=L!=null&&this._length>1?L:null}else this.geodesicPathLength=null;if(this._updateMode(n),!v)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(i,o,a,r),A&&this._updateGeodesicArea(i,_),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsRender:this.positionsRender,positionsFittedWorld:this.positionsFittedWorld,positionsFittedRender:this.positionsFittedRender,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorld.length=e,this.positionsRender.length=e,this.positionsFittedWorld.length=e,this.positionsFittedRender.length=e,this.positionsGeodesic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorld.push(p()),this.positionsRender.push(p()),this.positionsFittedWorld.push(ne()),this.positionsFittedRender.push(p()),this.positionsGeodesic.push(p()),this.positionsSpherical.push(p()),this.positionsStereographic.push(ne()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorld,i=this.pathSegmentLengths;let r=0;const n=this._length;for(let o=0;o<n;++o){const a=i[o]=Be(s[o],s[(o+1)%n]);(o<n-1||e)&&(r+=a)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeodesic,r=this.geodesicPathSegmentLengths;let n=0;const o=this._length;for(let a=0;a<o;++a){const h=Nt(i[a],i[(a+1)%o],s);if(h==null)return null;const c=k(h,"meters").value,u=r[a]=c;(a<o-1||e)&&(n+=u)}return X(n,"meters")}_updateAreaAndPerimeterLength(e,s,i,r){const n=e.renderCoordsHelper,o=this.positionsWorld,a=this.positionsRender,h=this.positionsFittedWorld,c=this.positionsFittedRender,u=this._planeWorldCoords,m=this._centroidRenderCoords;Q(a,m),n.worldUpAtPosition(m,this._worldUp),n.worldBasisAtPosition(m,ke.X,this._worldTangent),Pe(m,this._worldUp,s,this._worldUp,i),Pe(m,this._worldTangent,s,this._worldTangent,i),o.length>2&&Wt(o,u),this.fittingMode=this._selectFittingMode(u,o,this._worldUp,r);let v=0;if(this.fittingMode==="horizontal"){let S=-1/0;a.forEach((P,V)=>{const L=n.getAltitude(a[V]);L>S&&(S=L,v=V)})}const f=o[v];let _=u,A=this._worldTangent;this.fittingMode==="horizontal"?_=this._worldUp:this.fittingMode==="vertical"&&(_=this._tempVec3,A=this._worldUp,ae(u,this._worldUp,_)),xe(this._frame[2],_),ae(A,_,this._frame[0]),je(this._frame[1],this._frame[0],this._frame[2]),qe(this._frame[1],this._frame[1]);const w=this._tempVec3,z=this._tempU,E=this._tempV;for(let S=0;S<this._length;++S){const P=h[S],V=c[S];T(w,o[S],f),oe(P,x(this._frame[0],w),x(this._frame[1],w)),Y(z,this._frame[0],P[0]),Y(E,this._frame[1],P[1]),K(w,z,E),K(w,w,f),B(w,i,V,s)}this.perimeterLength=this._length>0?this._updatePerimeterLengths():null,Q(c,this.areaCentroidRenderCoords),B(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,i),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?this._computeArea():null}_updateGeodesicArea(e,s){const{renderCoordsHelper:i,spatialReference:r}=e,{positionsSpherical:n,positionsStereographic:o}=this,a=this._tempVec3,h=Ut(n,a);if(!h)return void(this.geodesicArea=null);const c=this._tempU,u=this._tempV;He(a,c,u);for(let m=0;m<this._length;++m){const v=x(n[m],c),f=x(n[m],u),_=x(n[m],a);oe(o[m],v/_,f/_)}Y(a,a,Ne(r).radius),i.toRenderCoords(a,re(r),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?this._computeGeodesicArea(s):null}_updatePerimeterLengths(){const e=this.positionsFittedWorld,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=Xe(e[r],e[(r+1)%this._length]);return X(i,this._lengthMeasurementUnit)}_updateIntersectingSegments(){const e=this.positionsFittedWorld,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],a=e[r],h=e[(r+1)%this._length];le(n,o,a,h)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsFittedWorld,s=this.triangleIndices=he(Ae(e));let i=0;for(let r=0;r<s.length;r+=3)i+=Ye(e[s[r]],e[s[r+1]],e[s[r+2]]);return de(i,this._areaMeasurementUnit)}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],a=e[r],h=e[(r+1)%this._length];le(n,o,a,h)&&(s.add(i),s.add(r))}}_computeGeodesicArea(e){const s=this.positionsGeodesic,i=this.positionsStereographic,r=this.geodesicTriangleIndices=he(Ae(i));let n=0;for(let o=0;o<r.length;o+=3){const a=Bt(s[r[o]],s[r[o+1]],s[r[o+2]],e);if(a==null)return null;n+=k(a,"square-meters").value}return de(n,"square-meters")}_selectFittingMode(e,s,i,r){const n=s.map(u=>Math.abs(kt(e,u))).reduce((u,m)=>Math.max(u,m),0);jt(s,this._tempSphere);const o=n/(2*this._tempSphere[3]),a=o<r.maxRelativeErrorCoplanar,h=o<r.maxRelativeErrorAlmostCoplanar;let c="horizontal";return a?c="oblique":h&&(c=Math.abs(x(i,e))>Math.cos(Ze(r.verticalAngleThreshold))?"horizontal":"vertical"),c}_updateCursorSegmentLength(e,s){var r;const i=e.lastPoint;e.isValidPolygon||i==null||s==null?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=Xt(i,s),this.stagedSegmentLength=(r=Ht(i,s))==null?void 0:r.direct)}_updateMode(e){if(e===te.Auto){this.actualMeasurementMode="euclidean";let s=0;this.geodesicPathLength!=null&&(s+=this.geodesicPathLength.value),s>ls&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===te.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=e}}function os(t,e){e.hasZ||(e.z=Je(t,e,"ground")??0)}const ls=1e5;let D=class extends ie{constructor(e){super(e)}initialize(){this._measurementDataManager=new as(this.view),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),R(()=>this.analysisViewData.stagedPoint,()=>this._update(),ce),R(()=>this.analysisViewData.mode,()=>this._update(),ce)]),this._update()}_update(e=!1){const{analysisViewData:s,view:i}=this,r={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(s.path,s.stagedPoint,i,r,s.mode,e)&&(s.measurementData=this._measurementDataManager.getData())}};l([d({constructOnly:!0})],D.prototype,"view",void 0),l([d({constructOnly:!0})],D.prototype,"analysis",void 0),l([d({constructOnly:!0})],D.prototype,"analysisViewData",void 0),D=l([N("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],D);let $=class extends Ke.EventedAccessor{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=ue()}set areaMeasurement(e){this._set("areaMeasurement",e),e!=null&&this.view!=null&&this._initialize(e,this.view)}set view(e){this._set("view",e),e!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,e)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||this._editGeometry.components.length===0}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=ue(this._extent);return this.forEachVertex(s=>{Qe(e,s.pos)}),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,s){this.removeAllHandles(),this.addHandles(R(()=>e.geometry,()=>{this._updateEditGeometryFromModelGeometry(e,s)},ee)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,s){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let i=e.geometry;if(i!=null){const r=et(i,s.spatialReference);r==null&&Zt(e,i.spatialReference,tt.getLogger(this)),i=r}this._editGeometryOperations=i!=null?Me.fromGeometry(i,s.state.viewingMode):new Me(new Jt("polygon",Kt(!0,!1,s.spatialReference)),s.state.viewingMode),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",r=>{this._makeDirty(r.addedVertices!=null||r.removedVertices!=null),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex(s=>{e.push(s)}),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getFirstVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const s=this._editGeometry.components[0].vertices[0];let i=s;do{if(i.index===e)return i;i=i.rightEdge.rightVertex}while(i!==s&&i!=null);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const s=this._editGeometry.coordinateHelper;this.forEachVertex((i,r)=>{s.vectorToPoint(i.pos,be),e(be,r)})}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const i=this.view;this._editGeometry.components.push(new Qt(i.spatialReference,i.state.viewingMode))}const s=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,s=""){let i=!1;if(this._editGeometry.components.forEach(r=>{r.iterateVertices(n=>{n===e&&(i=!0)})}),!i)throw new Error(`vertex doesnt exist ${s}`);return i}setVertexPosition(e,s){if(!this.constructed)return null;const i=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(s));return this.emit("change"),i}equals(e){if(this.numVertices!==e.numVertices)return!1;let s=!0;return this.forEachVertexPosition((i,r)=>{const n=e.getVertexPositionAsPointFromIndex(r);i.equals(n)||(s=!1)}),!!s}};l([d({value:null})],$.prototype,"areaMeasurement",null),l([d({value:null})],$.prototype,"view",null),l([d()],$.prototype,"isEmptyPolygon",null),l([d()],$.prototype,"isValidPolygon",null),l([d()],$.prototype,"extent",null),l([d()],$.prototype,"spatialReference",null),l([d()],$.prototype,"numVertices",null),l([d()],$.prototype,"polygonIsClosed",null),$=l([N("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementPathHelper")],$);const be=new st;function se(t,e){return k(t,Re(t.value,t.unit,e))}function Ve(t,e){return k(t,Te(t,e))}function Te(t,e){const s=hs(e);return it(t.value,t.unit,s)}function hs(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-nautical-miles":return"nautical-miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}function ze(t){const e=new rt,{vertex:s,fragment:i,varyings:r}=e;return e.fragment.include(nt,t),e.include(at,t),e.include(ot,t),lt(s,t),e.attributes.add(j.POSITION,"vec3"),e.attributes.add(j.UV0,"vec2"),r.add("vUV","vec2"),r.add("vpos","vec3"),s.main.add(pe`vUV = uv0;
vpos = position;
forwardViewPosDepth((view * vec4(position, 1.0)).xyz);
gl_Position = proj * view * vec4(position, 1.0);`),i.uniforms.add(new ht("size",n=>n.size)),i.uniforms.add(new me("color1",n=>n.color1)),i.uniforms.add(new me("color2",n=>n.color2)),i.include(dt),i.main.add(pe`discardByTerrainDepth();
vec2 uvScaled = vUV / (2.0 * size);
vec2 uv = fract(uvScaled - 0.25);
vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
float t = mix(abs(ab.x + ab.y), 0.5, fade);
fragColor = mix(color2, color1, t);
outputColorHighlightOID(fragColor, vpos);`),e}const ds=Object.freeze(Object.defineProperty({__proto__:null,build:ze},Symbol.toStringTag,{value:"Module"}));class cs extends ct{constructor(e,s){super(e,s,new ut(ds,()=>pt(()=>Promise.resolve().then(()=>Ls),void 0)))}initializePipeline(e){const{oitPass:s,transparent:i,polygonOffset:r,output:n}=e,o=s===ge.NONE,a=s===ge.FrontFace;return mt({blending:i?vt(s):null,depthTest:{func:yt(s)},depthWrite:ft(e),drawBuffers:_t(s,n),colorWrite:gt,polygonOffset:o||a?r?us:null:{factor:-1,units:-25}})}}const us={factor:0,units:-25};class G extends wt{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.textureCoordinateType=Lt.None,this.emissionSource=St.None,this.output=$t.Color,this.occlusionPass=!1,this.objectAndLayerIdColorInstanced=!1}get discardInvisibleFragments(){return this.transparent&&this.writeDepth}}l([O()],G.prototype,"transparent",void 0),l([O()],G.prototype,"writeDepth",void 0),l([O()],G.prototype,"polygonOffset",void 0),l([O()],G.prototype,"terrainDepthTest",void 0),l([O()],G.prototype,"cullAboveTerrain",void 0);class ps extends rs{constructor(e){super(e,gs),this._configuration=new G,this.produces=new Map([[Z.OPAQUE_MATERIAL,s=>J(s)&&!this.transparent],[Z.TRANSPARENT_MATERIAL,s=>J(s)&&this.transparent&&this.parameters.writeDepth],[Z.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,s=>J(s)&&this.transparent&&!this.parameters.writeDepth]])}getConfiguration(e,s){return this._configuration.transparent=this.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.oitPass=s.oitPass,this._configuration.terrainDepthTest=s.terrainDepthTest,this._configuration.cullAboveTerrain=s.cullAboveTerrain,this._configuration}get visible(){return this.parameters.color1[3]>=_e||this.parameters.color2[3]>=_e}get transparent(){return this.parameters.color1[3]<1||this.parameters.color2[3]<1}createGLMaterial(e){return new ms(e)}createBufferWriter(){return new At(is)}}class ms extends Ct{beginSlot(e){return this.getTechnique(cs,e)}}class gs extends Mt{constructor(){super(...arguments),this.size=Oe(1,1),this.color1=q(.75,.75,.75,1),this.color2=q(.5,.5,.5,1),this.writeDepth=!0,this.polygonOffset=!1}}class _s extends ss{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=b.OccludeAndTransparent,this._geometry=null,this._size=Oe(1,1),this._color1=q(1,.5,0,.5),this._color2=q(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){Pt(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){fe(e,this._color1)||(ye(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){fe(e,this._color2)||(ye(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial!=null&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new ps({size:this._size,color1:this._color1,color2:this._color2,writeDepth:!1,polygonOffset:!0,renderOccluded:b.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){this._checkerBoardMaterial!=null&&e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const s=fs;bt(s,this.transform);const i=this._geometry,r=[],n=p();i.position.forEach(h=>{T(n,h,s),r.push(n[0],n[1],n[2])});const o=[];i.uv.forEach(h=>{o.push(h[0],h[1])});const a=new Vt(this._checkerBoardMaterial,[[j.POSITION,new ve(r,i.triangleIndices,3,!0)],[j.UV0,new ve(o,i.triangleIndices,2,!0)]]);e.addGeometry(a)}}const fs=p();let y=class extends ie{get _parameters(){const{accentColor:t,textColor:e}=this.view.effectiveTheme,s=xt(t),i=we(t,.5),r=we(Le(t),.5),n=Le(e,Dt.Low);return{accentColor:s,transparentAccentColor:i,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:e,textBackgroundColor:Se(n,.6),textCalloutColor:Se(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get _renderUnits(){const t=this.view.renderCoordsHelper.spatialReference;return Ge(t)??"meters"}get testData(){}constructor(t){super(t),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=p(),this._originTransform=Gt(),this.messages=null,this.viewData=ws,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_parameters:e,view:s}=this;this._path=new I({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:b.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new I({view:s,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:b.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new I({view:s,attached:!0,width:e.perimeterLineWidth,polygonOffset:!0,renderOccluded:b.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new I({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:b.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new I({view:s,attached:!0,width:e.projectionLineWidth,stipplePattern:ns(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:b.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new _s({view:s,attached:!0,isDecoration:!0});const i={attached:!0,view:s,isDecoration:!0};this._areaLabel=new Ce({...i,fontSize:H.Large}),this._perimeterLengthLabel=new Ce({...i,fontSize:H.Small}),this.addHandles([R(()=>[t.mode,this.visible,t.unit,t.measurementData,t.stagedPoint],()=>this._update(),ee),R(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),ee),Rt(()=>this._updateMessageBundle()),R(()=>this._parameters,({accentColor:r,transparentAccentColor:n,transparentContrastColor:o,textColor:a,textBackgroundColor:h,textCalloutColor:c})=>{const{_path:u,_intersectedPath:m,_perimeter:v,_projectionLines:f,_measurementArea:_,_areaLabel:A,_perimeterLengthLabel:w}=this;u.color=r,m.color=r,v.color=r,f.color=r,_.color1=n,_.color2=o,A.textColor=a,A.backgroundColor=h,A.calloutColor=c,w.textColor=a,w.backgroundColor=h,w.calloutColor=c},Ot)]),this._updateMessageBundle()}destroy(){this._measurementArea=M(this._measurementArea),this._path=M(this._path),this._intersectedPath=M(this._intersectedPath),this._perimeter=M(this._perimeter),this._intersectedPerimeter=M(this._intersectedPerimeter),this._areaLabel=M(this._areaLabel),this._perimeterLengthLabel=M(this._perimeterLengthLabel),this._projectionLines=M(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e){const s=t.validMeasurement,i=t.actualMeasurementMode==="geodesic",r=i?t.geodesicArea:t.area;let n=1;if(r){const a=se(r,this.analysisViewData.unit);n=It(Math.sqrt(a.value)/Math.sqrt(300)),n*=Math.sqrt($e(1,a.unit,"square-meters")),n=$e(n,"meters",this._renderUnits)}const o={validMeasurement:s,numVertices:t.numVertices,hasStagedVertex:t.hasStagedVertex,path:e,mode:t.actualMeasurementMode,positionsRender:t.positionsRender,positionsFittedWorld:t.positionsFittedWorld,positionsFittedRender:t.positionsFittedRender,intersectingSegments:i?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:i?t.geodesicTriangleIndices:t.triangleIndices,areaCentroid:i?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,perimeterLengthLabelSegmentIndex:0,area:i?t.geodesicArea:t.area,pathLength:i?t.geodesicPathLength:t.pathLength,perimeterLength:t.perimeterLength,checkerSize:n};this._set("viewData",o)}_updateOrigin(){const t=this.viewData;Q(t.positionsRender,this._origin),Tt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=this.view.renderCoordsHelper.spatialReference,i=e.mode,r=[],n=[],o=[],a=e.numVertices,h=e.validMeasurement?a:a-1;for(let u=0;u<h;++u){const m=e[t][u],v=e[t][(u+1)%a];let f=null;switch(i){case"euclidean":f=new ts(m,v);break;case"geodesic":f=new es(m,v,s)}e.intersectingSegments.has(u)?o.push(f):n.push(f),r.push(f)}let c=null;return e.validMeasurement&&e.hasStagedVertex&&h>=2?c=r[r.length-2]:e.hasStagedVertex&&h>=1&&(c=r[r.length-1]),{all:r,nonIntersecting:n,intersecting:o,stagedSegment:c}}_updatePathSegments(){const{visible:t}=this,e=this._createSegments("positionsRender");this._path.setGeometryFromSegments(e.nonIntersecting,this._origin),this._path.visible=t,this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPath.visible=t,this._pathSegments=e.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRender");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsFittedWorld,position:t.positionsFittedRender,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.mode,i=t.numVertices;if(i>0&&t.validMeasurement&&s==="euclidean"){const r=[];for(let n=0;n<i;++n){const o=p();T(o,t.positionsRender[n],this._origin);const a=p();T(a,t.positionsFittedRender[n],this._origin),r.push([o,a])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{area:e,path:s}=t;if(!s)return;const i=this.visible,r=ys(this.messages,e,this.analysisViewData.unit);if(r!=null?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=r,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&i):this._areaLabel.visible=!1,this._set("areaLabel",r),t.validMeasurement&&t.intersectingSegments.size===0){const n=t.mode==="geodesic"||!t.validMeasurement,o=n?t.pathLength:t.perimeterLength,a=vs(this.messages,o,this.analysisViewData.unit);this._set("perimeterLengthLabel",a),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=a,this._perimeterLengthLabel.visible=!0;let h=!0;for(let c=0;c<t.numVertices;++c){const u=(t.perimeterLengthLabelSegmentIndex+c)%t.numVertices,m=n?this._pathSegments[u]:this._perimeterSegments[u];if(h=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:m,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;h=!1}this._perimeterLengthLabel.visible=h&&i}else this._perimeterLengthLabel.visible=!1}_updateMessageBundle(){this.loadingMessages=!0,zt("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};function ys(t,e,s){return t&&e&&Ie(t,e,Re(e.value,e.unit,s))}function vs(t,e,s){return t&&e&&Ie(t,e,Te(e,s))}var H;l([d()],y.prototype,"_parameters",null),l([d()],y.prototype,"view",void 0),l([d()],y.prototype,"messages",void 0),l([d()],y.prototype,"analysis",void 0),l([d()],y.prototype,"viewData",void 0),l([d()],y.prototype,"analysisViewData",void 0),l([d({readOnly:!0})],y.prototype,"areaLabel",void 0),l([d({readOnly:!0})],y.prototype,"perimeterLengthLabel",void 0),l([d()],y.prototype,"loadingMessages",void 0),l([d()],y.prototype,"visible",null),l([d()],y.prototype,"_renderUnits",null),y=l([N("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],y),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(H||(H={}));const ws={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,mode:null,positionsRender:null,positionsFittedWorld:null,positionsFittedRender:null,intersectingSegments:null,triangleIndices:null,areaCentroid:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null,area:null,pathLength:null,perimeterLength:null};let g=class extends Ft(ie){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=te.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new $({view:e,areaMeasurement:t}),this.analysisVisualization=new y({view:e,analysis:t,analysisViewData:this}),this.analysisController=new D({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=M(this.analysisController),this.analysisVisualization=M(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;if(t==null)return{area:null,mode:null,perimeter:null};const{unit:e}=this;if(t.actualMeasurementMode==="euclidean"){const{area:r,perimeterLength:n}=t;return{area:r!=null?se(r,e):null,perimeter:n!=null?Ve(n,e):null,mode:"euclidean"}}const{geodesicArea:s,pathLength:i}=t;return{area:s!=null?se(s,e):null,perimeter:i!=null?Ve(i,e):null,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){}};l([d({readOnly:!0})],g.prototype,"type",void 0),l([d({constructOnly:!0,nonNullable:!0})],g.prototype,"analysis",void 0),l([d()],g.prototype,"updating",null),l([d()],g.prototype,"analysisVisualization",void 0),l([d()],g.prototype,"analysisController",void 0),l([d()],g.prototype,"result",null),l([d()],g.prototype,"measurementData",void 0),l([d()],g.prototype,"viewData",null),l([d()],g.prototype,"validMeasurement",null),l([d()],g.prototype,"path",void 0),l([d()],g.prototype,"lastDraggedVertex",void 0),l([d()],g.prototype,"stagedPoint",void 0),l([d()],g.prototype,"mode",void 0),l([d()],g.prototype,"unit",null),l([d(Et)],g.prototype,"_defaultUnit",void 0),g=l([N("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],g);const Ns=g,Ls=Object.freeze(Object.defineProperty({__proto__:null,build:ze},Symbol.toStringTag,{value:"Module"}));export{Ns as default};
