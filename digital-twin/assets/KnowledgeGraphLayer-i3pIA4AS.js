import{fP as M,fR as T,fQ as _,l as S,f as D,g as L,i as v,g7 as E,V as m,m as k,k as b,aS as f,gi as A,B as g,gj as N,b9 as R,b6 as w,ba as I,bl as C,e as o,y as d,q as G,aZ as $,w as O,a as j,bf as U,bg as P,x as z}from"./index-CQXxPdCL.js";import{a as u,M as x,T as F,E as K}from"./KnowledgeGraphSublayer-Dwc82zCs.js";import{R as B}from"./knowledgeGraphService-Cmisn5es.js";import"./FeatureStore-EY6PR9GJ.js";import"./BoundsStore-DfkGIFiI.js";import"./PooledRBush-Dn3b87_K.js";import"./quickselect-DhOsQPh9.js";import"./QueryEngine-BBgxB_iM.js";import"./WhereClause-B8aijA-r.js";import"./TimeOnly-Ddv6u_N4.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-Ck0dj1Jz.js";import"./utils-CMnMOOCn.js";import"./ClassBreaksDefinition-BSKDKZdW.js";import"./optimizedFeatureQueryEngineAdapter-Od-BNW3V.js";import"./clientSideDefaults-zTxZ94AS.js";import"./GraphQueryStreaming-BjHnBFKx.js";let n=class extends M(T(_(S(D(L(v(E(z)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(m.ofType(u)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(m.ofType(u)),this.type="knowledge-graph",this.url=null}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(t){k(t)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache()}async _fetchMetadata(){if(!this.url)throw new b("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await B(this.url);this.knowledgeGraph=e,this._forEachGraphType(t=>{t.name&&this._graphTypeLookup.set(t.name,t)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===f.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new x({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await F(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(t=>{const i=this._graphTypeLookup.get(t.graphTypeName);i&&!e.namedTypeDefinitions.has(i.name)&&e.namedTypeDefinitions.set(i.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,A(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:t}=e;if((t==null?void 0:t.size)>0)t.forEach((i,a)=>{const s=this._graphTypeLookup.get(a);if(!s)return g.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(a);s.type!=="relationship"&&s.type!=="entity"&&(g.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(a))});else if(!e.generateAllSublayers)throw new b("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var s,r;let e=[],t=[];const{inclusionModeDefinition:i}=this,a=i==null?void 0:i.namedTypeDefinitions;!i||i.generateAllSublayers?(e=((s=this.knowledgeGraph.dataModel)==null?void 0:s.entityTypes)??[],t=((r=this.knowledgeGraph.dataModel)==null?void 0:r.relationshipTypes)??[]):a&&a.size>0&&a.forEach((p,h)=>{const l=this._graphTypeLookup.get(h);switch(l==null?void 0:l.type){case"relationship":t.push(l);break;case"entity":e.push(l)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=t}_forEachGraphType(e){var t,i;[...((t=this.knowledgeGraph.dataModel)==null?void 0:t.entityTypes)??[],...((i=this.knowledgeGraph.dataModel)==null?void 0:i.relationshipTypes)??[]].forEach(a=>{e(a)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const a=this._graphTypeLookup.get(i);a&&(this._addSublayer(a).title=i,a.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}this._refreshNamedTypes()}_createSublayers(e,t,i){e.forEach(a=>{const s=this._createSublayer(a);i(s)&&t.push(s),this._updateSublayerCaches(a)})}_addSublayer(e){const t=this._createSublayer(e);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(e){return new u({objectType:e,parentCompositeLayer:this,graphType:e.type,title:e.name})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const a=e.find(s=>s.type===i.graphType&&s.name===i.graphTypeName);a&&(i.objectType=a,i.read({title:a.name},{origin:"service"}),this._updateSublayerCaches(a))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_saveUrlAsNewResource(e,t,i,a){e[t]="<pending>",i.pendingOperations.push(V(this.inclusionModeDefinition).then(s=>{const r=q(a);e[t]=r.itemRelativeUrl,i.toAdd.push({resource:r,content:{type:"blob",blob:s},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:t}]of e.namedTypeDefinitions)if(!t)return!1;return!0}readDefinitionSetMap(e,t,i){return N(e,i)}writeDefinitionSetMap(e,t,i,a){const s=a==null?void 0:a.portalItem,r=a==null?void 0:a.resources,p=R(a==null?void 0:a.origin);if(!s||!r||p==null)return void(e&&(t[i]=w(e,a)));const{inclusionModeDefinition:h}=this;if(!h||this._displaysAllRecords(h))return void(this.definitionSetMap=null);const l=this.originIdOf("inclusionModeDefinition");if(l===f.USER||this._namedTypesModified||p<l)this._saveUrlAsNewResource(t,i,r,s);else if(p===l&&e){const c=w(e,a);I(c)?this._saveUrlAsNewResource(t,i,r,s):t[i]=c}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):g.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===f.DEFAULTS?this._createSublayers(e,this.layers,a=>!!a.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===f.DEFAULTS?this._createSublayers(e,this.tables,a=>!a.geometryType):this._updateSublayers(e,this.tables),(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((a,s)=>{var p;const r=C(this.sublayerIdsCache,s,()=>new Set);(p=a.members)==null||p.forEach(h=>{r.add(h.id)})})}async addRecords(e){await this._handleNewRecords(e)}async removeRecords(e){var i,a,s,r,p,h,l,c;const t=[];for(const y of e)((s=(a=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null?void 0:a.get(y.typeName))==null?void 0:s.useAllData)===!1&&((l=(h=(p=(r=this.dataManager.inclusionModeDefinition)==null?void 0:r.namedTypeDefinitions)==null?void 0:p.get(y.typeName))==null?void 0:h.members)!=null&&l.has(y.id))&&t.push(y);this.dataManager.removeFromLayer(t);for(const y of t)(c=this.sublayerIdsCache.get(y.typeName))==null||c.delete(y.id);return this._refreshNamedTypes(),t}};o([d()],n.prototype,"dataManager",void 0),o([d({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],n.prototype,"definitionSetMap",void 0),o([G("definitionSetMap")],n.prototype,"readDefinitionSetMap",null),o([$("definitionSetMap")],n.prototype,"writeDefinitionSetMap",null),o([d()],n.prototype,"inclusionModeDefinition",null),o([d()],n.prototype,"knowledgeGraph",void 0),o([d({type:m.ofType(u),json:{write:{ignoreOrigin:!0}}})],n.prototype,"layers",void 0),o([d()],n.prototype,"memberEntityTypes",void 0),o([d()],n.prototype,"memberRelationshipTypes",void 0),o([d({type:["KnowledgeGraphLayer"]})],n.prototype,"operationalLayerType",void 0),o([d()],n.prototype,"sublayerIdsCache",void 0),o([d({type:m.ofType(u),json:{write:{ignoreOrigin:!0}}})],n.prototype,"tables",void 0),o([d({json:{read:!1}})],n.prototype,"type",void 0),o([d(O)],n.prototype,"url",void 0),n=o([j("esri.layers.KnowledgeGraphLayer")],n);const he=n;async function V(e){const t=await K(e);return new Blob([t],{type:"application/x-protobuf"})}function q(e){const t=`definitionSetMap-${U()}.dat`,i=P("knowledgeGraphLayer",t);return e.resourceFromPath(i)}export{he as default};
