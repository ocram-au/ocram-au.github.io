import{g as D,r as a,m as r,a as E,ay as _,cM as B,eJ as ae,ed as Fe,vd as je,ew as Ue,ve as Ne,ba as Be,bb as oe,b4 as We,b6 as qe,b7 as Je,as as Re,vf as Ze,vg as ce,bd as K,vh as re,tm as Xe,aU as C,aX as le,a$ as z,aW as F,bq as Se,b8 as $e,cC as He,h as de,aI as he,mG as Q,aJ as W,vi as Ye,bg as N,u1 as k,k as ee,vj as pe,vk as ge,iv as q,hG as J,P,a8 as Ee,f as ve,l as Ke,aL as Qe,r6 as et,vl as _e,vm as tt,hf as me,da as it,T as g,ej as nt,pZ as st,vn as G,j$ as Ae,e as Me,bx as at,A as ot,u as R,hv as ye,by as rt,hu as be,vo as te,nL as fe,iG as Ce,nG as lt,rr as ut,bY as dt,eG as S,W as ct}from"./index-Bmji7YKu.js";import{s as ht}from"./AnalysisView3D-CTwH8Ua8.js";import{t as we,d as ie}from"./LineVisualElement-DpiGRICQ.js";import{e as De,f as ke,a as xe}from"./ShadedColorMaterial.glsl-DGkgFMNS.js";import{r as Ge}from"./manipulatorUtils-CcVnA87L.js";import{c as pt}from"./LaserlinePath.glsl-cxLhztzg.js";import{o as gt}from"./AnalysisToolBase-DUHCCmsD.js";import{p as Oe}from"./InteractiveToolBase-D0SNS2TX.js";import{S as Te}from"./PointVisualElement-CuBjL7_2.js";import{a as vt,v as _t}from"./analysisViewUtils-8Fq-lKsQ.js";import"./Object3DVisualElement-DnFakURl.js";import"./VisualElement-CSTEZTPY.js";import"./line-CcCVXHgM.js";import"./ColorMaterial.glsl-BbKGeYi5.js";import"./TriangleMaterial-DyFujZRM.js";import"./EditGeometryOperations-7m4ixBVO.js";let $=class extends D{constructor(e){super(e),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};a([r()],$.prototype,"target",void 0),a([r()],$.prototype,"intersectedGraphic",void 0),a([r()],$.prototype,"intersectedLocation",void 0),a([r()],$.prototype,"elevationAlignedTargetLocation",void 0),a([r({type:Boolean})],$.prototype,"visible",void 0),$=a([E("esri.views.3d.analysis.LineOfSightAnalysisResult")],$);const mt=$;let H=class extends D{constructor(e){super(e),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:_(),observerSurfaceNormal:null,observerFeatureId:null,target:_(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:_(),targetAdjusted:_()},this.computationResult={start:_(),end:_(),intersection:_(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};a([r()],H.prototype,"target",void 0),a([r()],H.prototype,"elevationAlignedTargetLocation",void 0),a([r()],H.prototype,"inputPoints",void 0),a([r()],H.prototype,"computationResult",void 0),a([r()],H.prototype,"result",void 0),H=a([E("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],H);var ue;let I=ue=class extends D{constructor(t){super(t)}clone(){return new ue({type:this.type,id:B(this.id),mapPoint:B(this.mapPoint),renderPoint:ae(this.renderPoint),normal:B(this.normal),ray:B(this.ray),graphic:this.graphic})}equals(t){return this.type===t.type&&this.id===t.id&&Fe(this.mapPoint,t.mapPoint)&&je(this.renderPoint,t.renderPoint)&&Ue(this.normal,t.normal)&&Ne(this.ray,t.ray)&&this.graphic===t.graphic}};a([r()],I.prototype,"type",void 0),a([r({constructOnly:!0})],I.prototype,"id",void 0),a([r({constructOnly:!0})],I.prototype,"mapPoint",void 0),a([r({constructOnly:!0})],I.prototype,"renderPoint",void 0),a([r({constructOnly:!0})],I.prototype,"normal",void 0),a([r({constructOnly:!0})],I.prototype,"graphic",void 0),a([r({constructOnly:!0})],I.prototype,"ray",void 0),I=ue=a([E("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],I);let x=class extends D{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=Be(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=oe.MIN}getScreenPointIntersection(t){const e=We(t,qe.get()),i=Je(this.view.state.camera,e,ne);return this._getRayIntersection(i)}_getRayIntersection(t,e){const{view:i,intersector:n}=this;if(t==null||i.sceneIntersectionHelper==null)return null;n.options.store=oe.MIN,i.sceneIntersectionHelper.intersectToolIntersectorRay(t,n,e);const s=n.results.min;if(s.target==null)return null;const o=_();if(!s.getIntersectionPoint(o)||(e==null?void 0:e.maxDistance)!=null&&!s.withinDistance(e.maxDistance))return null;const l=i.renderCoordsHelper.fromRenderCoords(o,new Re({spatialReference:i.spatialReference})),d=ae(s.normal);if(Ze(s))return new I({type:K.TERRAIN,id:s.target.lij.slice(),mapPoint:l,renderPoint:o,normal:d,ray:ce(t),graphic:null});const h=re(s,i);if(h==null)return null;const{layer:c,sourceLayer:u}=h,p=(u==null?void 0:u.type)==="scene"?Xe(h,u.objectIdField):h.uid;return new I({type:K.OBJECT,id:`${c==null?void 0:c.uid}/${p}`,mapPoint:l,renderPoint:o,normal:d,ray:ce(t),graphic:h})}updateFromGroundIntersection(t,e,i){const n=yt,s=bt,o=ft,l=Ie;C(s,t),this.view.renderCoordsHelper.worldUpAtPosition(s,o),le(o,o);const d=this.view.basemapTerrain.visibleElevationBounds,h=(e>=0?1:-1)*((d?Math.abs(d.max-d.min):100)+Math.abs(e));z(l,o,h),F(n,s,l),Se(n,s,ne);const c=this._getRayIntersection(ne,{include:this._terrainIntersectionOptionsLayerUids,maxDistance:h});if(c!=null){const u=Ie;return z(u,o,e),F(i,c.renderPoint,u),ae(c.normal)}return C(i,t),null}};a([r()],x.prototype,"view",void 0),a([r()],x.prototype,"intersector",void 0),x=a([E("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],x);const yt=_(),bt=_(),ft=_(),Ie=_(),ne=$e();let m=class extends He.EventedMixin(D){constructor(t){super(t),this.updateOnCameraChange=!0,this._observerGroundOffsetRenderSpace=0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new de,this._frameTask=he,this._computationHandles=new Q,this._externalObserverUpdate=!0}initialize(){var e;const t=(e=this.view.resourceController)==null?void 0:e.scheduler;this._frameTask=t?t.registerTask(W.LINE_OF_SIGHT_TOOL):he,this._intersector=new x({view:this.view}),this.addHandles([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(t){this._frameTask.priority=t}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(t){this.analysisViewData.observerEngineLocation=t}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(t){const e=t.computation,{inputPoints:i,computationResult:n}=e,{observerAdjusted:s,targetAdjusted:o}=i,{start:l,end:d}=n;C(l,s),C(d,o),this._canCompute(e)?this._computeIntersection(t):Ct(t),e.notifyResultChanged(),this.emit("result-changed",{target:t.computation.target,result:e.result})}_adjustStartEndPositions(t){const{view:e}=this,{inputPoints:i}=t,{observer:n,target:s,observerAdjusted:o,targetAdjusted:l}=i;C(o,n),C(l,s),Ye(e,this._intersector.intersector,i);const{observerSurfaceNormal:d,targetSurfaceNormal:h}=i,c=this._screenPixelSize,u=Y;d!=null?C(u,d):N(u,l,o);const p=c;le(u,u),z(u,u,Math.min(p,1)),F(o,o,u),h!=null?C(u,h):N(u,o,l);const v=e.state.camera.computeScreenPixelSizeAt(l);le(u,u),z(u,u,Math.min(v,1)),F(l,l,u)}_computeIntersection({computation:t,interpolationInfo:e}){const{view:i}=this,{sceneIntersectionHelper:n,renderCoordsHelper:s}=i;if(n==null)return;const o=this._intersector.intersector,{computationResult:l,inputPoints:d}=t,{observer:h,target:c}=d,{start:u,end:p}=l,v=Se(u,p,Ot);o.options.store=oe.MIN,n.intersectToolIntersectorRay(v,o);const L=o.results.min,O=l.intersection,j=Y;let y=!0;if(L!=null&&L.getIntersectionPoint(O)){C(e.originalIntersection,O),C(e.originalObserver,u),C(e.originalTarget,p),s.fromRenderCoords(O,j,i.spatialReference);const w=1-k(p,c)/k(u,c);y=k(h,O)>=w*k(h,c)}const A=new Re(j,i.spatialReference);{const{result:w,target:V}=t;w!=null?(w.target=V,w.intersectedGraphic=y?null:re(L,i),w.intersectedLocation=y?null:A,w.visible=y):t.result=new mt({target:V,elevationAlignedTargetLocation:t.elevationAlignedTargetLocation,intersectedGraphic:y?null:re(L,i),intersectedLocation:y?null:A,visible:y})}l.isValid=d.isValid=!0,l.isTargetVisible=y}_canCompute(t){const e=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(e==null||t.elevationAlignedTargetLocation==null||i==null)return!1;const{observerAdjusted:n,targetAdjusted:s}=t.inputPoints,o=i.intersectsPoint(n),l=i.intersectsPoint(s);return o&&l}_onObserverPositionChange(t,e,i,n,s){if(this._externalObserverUpdate=s,t==null)return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(e==null)return we(this.analysis,t.spatialReference,ee.getLogger(this)),void(this.analysisViewData.elevationAlignedObserver=null);const o=Pe(e,i),{absoluteZ:l,elevation:d}=pe(e.x,e.y,e.z,this.view.spatialReference,this.view,o),h=e.clone();h.z=l,this._effectiveObserverElevationMode=o.mode,this.analysisViewData.elevationAlignedObserver=h;const c=_();this.view.renderCoordsHelper.toRenderCoords(h,c),this._elevationAlignedObserverPositionRenderSpace=c,this._observerGroundOffsetRenderSpace=l-d,this._observerFeatureId=ge(n),this.priority=W.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(t,e,i,n,s){const{inputPoints:o}=t;switch(C(o.observer,e),o.observerFeatureId=s,o.observerSurfaceNormal=null,n){case"on-the-ground":case"relative-to-ground":{const l=this._intersector.updateFromGroundIntersection(o.observer,i,o.observer);o.observerFeatureId==null&&(o.observerSurfaceNormal=l)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=W.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(t,e,i,n,s,o=!0){const l=t.inputPoints;if(o&&(l.isValid=!1),i==null)return e!=null&&we(this.analysis,e.spatialReference,ee.getLogger(this)),t.elevationAlignedTargetLocation=null,void t.notifyInputPointsChanged();const d=Pe(i,n),{absoluteZ:h,elevation:c}=pe(i.x,i.y,i.z,this.view.spatialReference,this.view,d),u=i.clone();switch(u.z=h,t.elevationAlignedTargetLocation=u,this.view.renderCoordsHelper.toRenderCoords(t.elevationAlignedTargetLocation,l.target),l.targetFeatureId=ge(s),l.targetSurfaceNormal=null,d.mode){case"on-the-ground":case"relative-to-ground":{const p=this._intersector.updateFromGroundIntersection(l.target,h-c,l.target);l.targetFeatureId==null&&(l.targetSurfaceNormal=p)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=W.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(t){return q([this._updatingHandles.add(()=>({computation:t,targetPosition:t.target.position,targetElevationInfo:t.target.elevationInfo,targetFeatureInfo:t.target.feature,projectedTargetPosition:J(t.target.position,this.view.spatialReference)}),({computation:e,targetPosition:i,targetElevationInfo:n,targetFeatureInfo:s,projectedTargetPosition:o})=>{o.pending==null?this._onTargetPositionChange(e,i,o.geometry,n,s):this._updatingHandles.addPromise(o.pending)},P)])}_connectComputationToObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this.analysisViewData.elevationAlignedObserver}),({computation:e})=>{this._externalObserverUpdate&&(e.inputPoints.isValid=!1,e.notifyInputPointsChanged())},P)}_connectComputationToRenderSpaceObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:e,observer:i,observerGroundOffset:n,observerElevationMode:s,observerFeatureId:o})=>{this._onObserverRenderSpacePositionChangeForComputation(e,i,n,s,o)},P)}_connectComputationToCamera(t){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:e})=>{!this.updateOnCameraChange||t.inputPoints.isValid&&!e||t.notifyInputPointsChanged()})}_connectComputationToSlicePlane(t){return this._updatingHandles.add(()=>this.view.slicePlane,()=>{t.inputPoints.isValid=!1,t.notifyInputPointsChanged()})}_connectComputationToElevation(t){const e=(i,n)=>{const s=this.analysis.observer,o=t.target;let l=null,d=null,h=null,c=null,u=null,p=null;if((s==null?void 0:s.position)!=null){const v=J(s.position,this.view.spatialReference);if(v.pending!=null)return this._updatingHandles.addPromise(v.pending),void v.pending.finally(()=>e(i,n));l=v.geometry,d=s.elevationInfo,h=s.feature}if(o.position!=null){const v=J(o.position,this.view.spatialReference);if(v.pending!=null)return this._updatingHandles.addPromise(v.pending),void v.pending.finally(()=>e(i,n));c=v.geometry,u=o.elevationInfo,p=o.feature}l==null&&c==null||(et(i,n,Z,this.view.spatialReference),l!=null&&_e(Z,l)&&this._onObserverPositionChange(s!=null?s.position:null,l,d,h,!1),c!=null&&_e(Z,c)&&this._onTargetPositionChange(t,o.position,c,u,p,!1),l!=null&&c!=null&&tt(Z,l,c)&&t.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",({extent:i,spatialReference:n})=>e(i,n))}_connectComputationToTask(t){let e=null;const i={computation:t,interpolationInfo:{originalIntersection:_(),originalObserver:_(),originalTarget:_()}};return q([this._updatingHandles.add(()=>t.inputPoints,()=>{e=ve(e),e=Ke(async n=>{await Qe(this._frameTask.schedule(()=>this._computeResult(i),n))})},{initial:!0,equals:()=>!1}),Ee(()=>e=ve(e))])}_connectComputation(t){const e=this._computationHandles;e.has(t)||e.add([this._connectComputationToTarget(t),this._connectComputationToObserver(t),this._connectComputationToRenderSpaceObserver(t),this._connectComputationToCamera(t),this._connectComputationToSlicePlane(t),this._connectComputationToElevation(t),this._connectComputationToTask(t)],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_onComputationCollectionChange({added:t,removed:e}){for(const i of e)this._disconnectComputation(i);for(const i of t)this._connectComputation(i)}_onTargetCollectionChange({added:t,removed:e}){for(const i of e)this._removeTarget(i);for(const i of t)this._addTarget(i)}_onCursorTargetChange(t,e){e!=null&&this._removeTarget(e),t!=null&&this._addTarget(t)}_addTarget(t){this._computations.some(e=>e.target===t)||this._computations.add(new H({target:t}))}_removeTarget(t){const e=this._computations.findIndex(i=>i.target===t);this._computations.removeAt(e)}_connectObserver(){return q([this._updatingHandles.add(()=>({observerPosition:this.analysis.observer!=null?this.analysis.observer.position:null,projectedObserverPosition:J(this.analysis.observer!=null?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:this.analysis.observer!=null?this.analysis.observer.elevationInfo:null,observerFeatureInfo:this.analysis.observer!=null?this.analysis.observer.feature:null}),({observerPosition:t,projectedObserverPosition:e,observerElevationInfo:i,observerFeatureInfo:n})=>{e.pending==null?this._onObserverPositionChange(t,e.geometry,i,n,!0):this._updatingHandles.addPromise(e.pending)},P)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,t=>this._onComputationCollectionChange(t),{initial:!0,final:!0})}_connectTargets(){return q([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,t=>this._onTargetCollectionChange(t),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(t,e)=>{this._onCursorTargetChange(t,e)})])}get _isCameraDirty(){const t=this.analysisViewData.elevationAlignedObserver,{view:e}=this,{renderCoordsHelper:i}=e;if(t==null||i==null)return!1;const n=Y;i.toRenderCoords(t,n);const s=e.state.camera.computeScreenPixelSizeAt(n);return Math.abs((s-this._screenPixelSize)/this._screenPixelSize)>wt}};function Pe(t,e){return t.hasZ?e??{mode:"absolute-height",offset:0}:{mode:"on-the-ground",offset:0}}function Ct({computation:t,interpolationInfo:e}){const{computationResult:i,inputPoints:n}=t,{start:s,end:o,intersection:l}=i,{originalIntersection:d,originalObserver:h,originalTarget:c}=e;if(C(l,d),n.isValid){const u=Y,p=k(h,d)/k(h,c);me(u,s,h),z(u,u,1-p),F(l,l,u),me(u,o,c),z(u,u,p),F(l,l,u),i.isValid=!0}else t.result=null,i.isValid=!1,i.isTargetVisible=!1}a([r({constructOnly:!0})],m.prototype,"analysis",void 0),a([r({constructOnly:!0})],m.prototype,"analysisViewData",void 0),a([r({constructOnly:!0})],m.prototype,"view",void 0),a([r()],m.prototype,"updating",null),a([r()],m.prototype,"priority",null),a([r()],m.prototype,"updateOnCameraChange",void 0),a([r()],m.prototype,"_computations",null),a([r()],m.prototype,"_elevationAlignedObserverPositionRenderSpace",null),a([r()],m.prototype,"_observerGroundOffsetRenderSpace",void 0),a([r()],m.prototype,"_effectiveObserverElevationMode",void 0),a([r()],m.prototype,"_observerFeatureId",void 0),a([r()],m.prototype,"_screenPixelSize",null),a([r({readOnly:!0})],m.prototype,"_updatingHandles",void 0),a([r()],m.prototype,"_frameTask",void 0),a([r()],m.prototype,"_isCameraDirty",null),m=a([E("esri.views.3d.analysis.LineOfSight.LineOfSightController")],m);const wt=.1,Y=_(),Ot=$e(),Z=it();let Tt=class{constructor(){this.glowWidth=8,this.innerWidth=.75}};const It=new Tt;function Pt(t){const e=t.accentColor;return{glowColor:e,innerColor:nt(e),globalAlpha:.75*e.a}}class Lt{constructor(){this.size=.5}}const Vt=new Lt;function Le(t){return st(t.accentColor,.75)}class Rt{constructor(){this.size=.5,this.visibleColor=new g([3,252,111,.75]),this.occludedColor=new g([252,3,69,.75]),this.undefinedColor=new g([127,127,127,.75])}}const St=new Rt;let $t=class{constructor(){this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new g([3,252,111,1]),this.visibleOuterColor=new g([3,252,111,.15]),this.occludedInnerColor=new g([252,3,69,1]),this.occludedOuterColor=new g([252,3,69,.1]),this.undefinedInnerColor=new g([255,255,255,1]),this.undefinedOuterColor=new g([127,127,127,.2])}};const X=new $t;class Ht extends De{constructor(e,i){const n=ke(Le(e.effectiveTheme)),s=Ae(n,Vt.size,32,32),o=new xe(s);super({view:e,renderObjects:[o],metadata:i,elevationInfo:{mode:"absolute-height",offset:0}}),Ge(this),this.themeHandle=Me(()=>({color:Le(e.effectiveTheme)}),l=>{n.setParameters(l)})}destroy(){this.themeHandle.remove(),super.destroy()}}let Et=class extends De{constructor(e,i){const{size:n,visibleColor:s,occludedColor:o,undefinedColor:l}=St;super({view:e,renderObjects:[se(n,s,G.Custom1),se(n,o,G.Custom2),se(n,l,G.Custom3)],metadata:i,elevationInfo:{mode:"absolute-height",offset:0}}),Ge(this)}};function se(t,e,i){return new xe(Ae(ke(g.toUnitRGBA(e)),t,32,32),i)}var M;(function(t){t.Ready="ready",t.Creating="creating",t.Created="created"})(M||(M={}));let b=class extends gt{constructor(e){super(e),this._creationMode=!1,this.removeIncompleteOnCancel=!1,this.analysisViewData=null,this._latestPointerMovePointerType=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new Q,this._updatingHandles=new de,this._manipulatorHandles=new Q,this._targetTrackerManipulator=null}initialize(){this._intersector=new x({view:this.view}),this.addHandles(Me(()=>this.state,e=>{e===M.Created&&this.finishToolCreation()},ot)),this._observerManipulator=this._createObserverManipulator(),this._createLaserLine(),this.addHandles([this._updatingHandles.add(()=>{var e;return(e=this.analysisViewData)==null?void 0:e.elevationAlignedObserver},e=>this._onObserverLocationChange(e),P),this._updatingHandles.add(()=>Pt(this.view.effectiveTheme),({glowColor:e,innerColor:i,globalAlpha:n})=>this._updateLaserLineStyle(e,i,n),P),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),e=>this._updateLaserLineRenderer(e)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),P),this._updatingHandles.add(()=>({active:this.active,hasGrabbedManipulators:this.hasGrabbedManipulators}),({active:e,hasGrabbedManipulators:i})=>{this._creationMode=!!e&&(this._creationMode||!i)},P)])}destroy(){this._updatingHandles=R(this._updatingHandles),this._manipulatorHandles=R(this._manipulatorHandles),this._analysisHandles=R(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeLaserLine(),this._intersector=null,this._set("analysis",null)}get state(){var e;return this.active?!this.hasGrabbedManipulators||this._creationMode?M.Creating:M.Created:((e=this.analysis.observer)==null?void 0:e.position)!=null?M.Created:M.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return this.analysisViewData!=null&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&this._latestPointerMovePointerType==="mouse"}get _shouldRenderTracker(){var e;return this._showTracker&&((e=this.analysis.observer)==null?void 0:e.position)!=null&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(e){switch(e.type){case"immediate-double-click":this._doubleClickHandler(e);break;case"key-down":this._keyDownHandler(e);break;case"pointer-move":this._pointerMoveHandler(e)}}onInputEventAfter(e){e.type==="immediate-click"&&this._clickHandler(e)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,e=>this._onComputationsCollectionChange(e),{initial:!0,final:!0})}_onComputationsCollectionChange({added:e,removed:i}){for(const n of i)this._disconnectComputation(n);for(const n of e)this._connectComputation(n)}_connectComputation(e){if(this.destroyed)return void ee.getLogger(this).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const i=this._analysisHandles;if(i.has(e))return;const n=this._createTargetManipulator(e.target);this._targetTrackerManipulator==null&&n.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=n,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),i.add([this._updatingHandles.add(()=>Dt(e),()=>Mt(n,e),P),this._updatingHandles.add(()=>e.elevationAlignedTargetLocation,s=>this._onTargetLocationChange(s,n),P)],e)}_disconnectComputation(e){if(this.destroyed)return void ee.getLogger(this).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(e);const i=this._getTargetManipulator(e.target);i!=null&&(this.manipulators.remove(i),this._manipulatorHandles.remove(i),this._targetTrackerManipulator!=null&&this._targetTrackerManipulator===i&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=R(this.analysisViewData.cursorTarget)}_createTargetManipulator(e){const i={target:e,type:"target"},n=new Et(this.view,i);return this._manipulatorHandles.add([this._createTargetManipulatorDragPipeline(n),n.events.on("grab-changed",s=>this._manipulatorGrabChanged(n,s)),n.events.on("immediate-click",s=>this._manipulatorClick(n,s))],n),this.manipulators.add(n),e.position!=null?n.elevationAlignedLocation=e.position:n.available=!1,n}_getTargetManipulator(e){let i=null;return this.manipulators.forEach(n=>{const s=n.manipulator;i==null&&s.metadata.type==="target"&&s.metadata.target===e&&(i=s)}),i}_createObserverManipulator(){const e=new Ht(this.view,{type:"observer",intersection:null});return this._manipulatorHandles.add([this._createObserverManipulatorDragPipeline(e),e.events.on("grab-changed",i=>this._manipulatorGrabChanged(e,i)),e.events.on("immediate-click",i=>this._manipulatorClick(e,i))],e),this.manipulators.add(e),e}_screenToIntersection(){return e=>{const i=this._intersector.getScreenPointIntersection(e.screenEnd);return i==null?null:{...e,intersection:i}}}_createTargetManipulatorDragPipeline(e){return Oe(e,(i,n,s)=>{n.next(this._screenToIntersection()).next(this._updateTargetDragStep(e)).next(()=>this._updateLaserLineRenderer()),s.next(At(e.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(e){return Oe(e,(i,n,s)=>{n.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),s.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return e=>(e.intersection.mapPoint!=null?(this.analysis.observer==null&&(this.analysis.observer=new ye),this._updateFromIntersection(this.analysis.observer,e.intersection)):this.analysis.observer=null,e)}_cancelObserverDragStep(){var i;const e=((i=this.analysis.observer)==null?void 0:i.position)!=null?this.analysis.observer.clone():null;return n=>(this.analysis.observer=e,n)}_updateTargetDragStep(e){return i=>{this._updateFromIntersection(e.metadata.target,i.intersection);const n=i.intersection.mapPoint;return n!=null&&(e.elevationAlignedLocation=n),i}}_manipulatorGrabChanged(e,i){switch(i.action){case"start":this._grabbedManipulator=e;break;case"end":this._grabbedManipulator===e&&(this._grabbedManipulator=null)}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:this.analysis.observer!=null?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(e=this._laserLineRendererDependencies()){const{laserlineVisualElement:i,grabbedManipulator:n,shouldRenderTracker:s,observerPosition:o,visible:l}=e;if(i==null)return;const d=n??(s&&o!=null?this._targetTrackerManipulator:null);d!=null&&l?(i.visible=!0,i.heightManifoldTarget=d.renderLocation,d!==this._observerManipulator?i.lineVerticalPlaneSegment=rt(this._observerManipulator.renderLocation,d.renderLocation,kt):i.lineVerticalPlaneSegment=null):(i.visible=!1,i.heightManifoldTarget=null,i.lineVerticalPlaneSegment=null)}_createLaserLine(){this._removeLaserLine();const{glowWidth:e,innerWidth:i}=It;this._laserlineVisualElement=new pt({view:this.view,attached:!0,visible:this.visible,style:{glowWidth:e,innerWidth:i},isDecoration:!0})}_removeLaserLine(){this._laserlineVisualElement!=null&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_updateLaserLineStyle(e,i,n){const s=this._laserlineVisualElement;if(s==null)return;const o=s.style;s.style={...o,glowColor:g.toUnitRGB(e),innerColor:g.toUnitRGB(i),globalAlpha:n}}_onObserverLocationChange(e){e!=null?(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=e):this._observerManipulator.available=!1}_onTargetLocationChange(e,i){e!=null?(i.elevationAlignedLocation=e,i!==this._targetTrackerManipulator&&(i.available=!0)):i.available=!1}_addPointFromClickEvent(e){var n;const i=this._intersector.getScreenPointIntersection(e);if((i==null?void 0:i.mapPoint)!=null)if(((n=this.analysis.observer)==null?void 0:n.position)!=null){this._clearCursorTracker();const s=new be;this._updateFromIntersection(s,i),this.analysis.targets.add(s)}else{const s=new ye;this._updateFromIntersection(s,i),this.analysis.observer=s}}_clickHandler(e){this.active&&e.button!==te.Right&&(this._addPointFromClickEvent(fe(e)),e.stopPropagation())}_doubleClickHandler(e){this.active&&e.button!==te.Right&&(this.stop(),e.stopPropagation())}_keyDownHandler(e){this.active&&e.key==="Escape"&&(this.stop(),e.stopPropagation())}_pointerMoveHandler(e){var s;if(this.hasGrabbedManipulators||(this._latestPointerMovePointerType=e.pointerType,this._updateLaserLineRenderer(),!this._showTracker||((s=this.analysis.observer)==null?void 0:s.position)==null))return;const i=fe(e),n=this._intersector.getScreenPointIntersection(i);(n==null?void 0:n.mapPoint)!=null&&(this.analysisViewData.cursorTarget==null&&(this.analysisViewData.cursorTarget=new be),this._updateFromIntersection(this.analysisViewData.cursorTarget,n),this._updateLaserLineRenderer())}_updateFromIntersection(e,i){if(i.mapPoint==null)return e.position=null,e.elevationInfo=null,void(e.feature=null);switch(i.type){case K.OBJECT:if(i.graphic!=null){const s=i.graphic,o=lt(s);o.mode==="on-the-ground"&&(o.mode="relative-to-ground",o.offset=0),e.elevationInfo=new Ce(o),e.feature=s}else e.elevationInfo=null,e.feature=null;break;case K.TERRAIN:e.elevationInfo=new Ce({mode:"on-the-ground"}),e.feature=null;break;default:e.elevationInfo=null,e.feature=null}const n=i.mapPoint.clone();n.z=ut(this.view,n,{mode:"absolute-height",offset:0},e.elevationInfo),e.position=n}_manipulatorClick(e,i){if(e.metadata.type==="observer"||e.grabbing||e.dragging||i.button!==te.Right||this.analysis.targets.length<=1)return;const{target:n}=e.metadata;this.analysis.targets.remove(n),i.stopPropagation()}get testInfo(){}};function At(t){var i;const e=(i=t.position)==null?void 0:i.clone();return n=>(t.position=e,n)}function Mt(t,e){const{isValid:i,isTargetVisible:n}=e.computationResult;t.state=i?n?G.Custom1:G.Custom2:G.Custom3}function Dt(t){const{isValid:e,isTargetVisible:i}=t.computationResult;return{isValid:e,isTargetVisible:i}}a([r({constructOnly:!0})],b.prototype,"view",void 0),a([r({constructOnly:!0})],b.prototype,"analysis",void 0),a([r()],b.prototype,"_creationMode",void 0),a([r({readOnly:!0})],b.prototype,"state",null),a([r({readOnly:!0})],b.prototype,"cursor",null),a([r()],b.prototype,"removeIncompleteOnCancel",void 0),a([r({readOnly:!0})],b.prototype,"updating",null),a([r({constructOnly:!0})],b.prototype,"analysisViewData",void 0),a([r({readOnly:!0})],b.prototype,"_showTracker",null),a([r()],b.prototype,"_latestPointerMovePointerType",void 0),a([r()],b.prototype,"_shouldRenderTracker",null),a([r()],b.prototype,"_laserlineVisualElement",void 0),a([r()],b.prototype,"_grabbedManipulator",void 0),b=a([E("esri.views.3d.analysis.LineOfSight.LineOfSightTool")],b);const kt=at();class xt{constructor(e,i,n,s){this.visibleLineVisualElement=e,this.occludedLineVisualElement=i,this.undefinedLineVisualElement=n,this.targetVisualElement=s}destroy(){this.visibleLineVisualElement.destroy(),this.occludedLineVisualElement.destroy(),this.undefinedLineVisualElement.destroy(),this.targetVisualElement.destroy()}}let T=class extends D{constructor(t){super(t),this._lineOfSightVisualElements=new Array,this._computationHandles=new Q,this._updatingHandles=new de}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=R(this._updatingHandles),this._computationHandles=R(this._computationHandles),this._observerVisualElement=R(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get test(){}_createLineOfSightVisualization(){const t=X,e=this.view,i=this.isDecoration,n={view:e,attached:!0,width:t.outerWidth,innerWidth:t.innerWidth,isDecoration:i},s=g.toUnitRGBA(t.visibleOuterColor),o=g.toUnitRGBA(t.visibleInnerColor),l=g.toUnitRGBA(t.occludedOuterColor),d=g.toUnitRGBA(t.occludedInnerColor),h=g.toUnitRGBA(t.undefinedOuterColor),c=g.toUnitRGBA(t.undefinedInnerColor),u=new ie({...n,color:s,innerColor:o}),p=new ie({...n,color:l,innerColor:d}),v=new ie({...n,color:h,innerColor:c}),L=new Te({view:e,attached:!0,...Ve,size:8,isDecoration:i}),O=new xt(u,p,v,L);return this._lineOfSightVisualElements.push(O),O}_destroyLineOfSightVisualization(t){t.destroy(),this._lineOfSightVisualElements.splice(this._lineOfSightVisualElements.indexOf(t),1)}_updateLineOfSightVisualization(t,e,i){const n=X,{computationResult:s,inputPoints:o}=t,{start:l,end:d,intersection:h,isValid:c,isTargetVisible:u}=s,{observer:p}=o,v=jt;v[12]=p[0],v[13]=p[1],v[14]=p[2];const L=N(Gt,l,p),O=N(zt,d,p),j=N(Ft,h,p),{visibleLineVisualElement:y,occludedLineVisualElement:A,undefinedLineVisualElement:w,targetVisualElement:V}=e,ze=this.analysisViewData.elevationAlignedObserver==null||t.elevationAlignedTargetLocation==null,U=this.visible&&!ze;y.visible=U,A.visible=U,w.visible=U,V.visible=U,V.attached=!i.interactiveAndEditable,U&&(y.geometry=null,A.geometry=null,w.geometry=null,V.geometry=t.elevationAlignedTargetLocation,c?u?(y.geometry=[[S(L),S(O)]],y.transform=v,y.color=g.toUnitRGBA(n.visibleOuterColor),V.color=g.toUnitRGBA(n.visibleInnerColor)):(y.geometry=[[S(L),S(j)]],y.transform=v,y.color=g.toUnitRGBA(n.occludedOuterColor),A.geometry=[[S(j),S(O)]],A.transform=v,V.color=g.toUnitRGBA(n.occludedInnerColor)):(w.geometry=[[S(L),S(O)]],w.transform=v,V.color=g.toUnitRGBA(n.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(t){const{computationResult:e}=t,{occludedOuterColor:i,visibleOuterColor:n}=X;return{computationResult:e,occludedOuterColor:i,visibleOuterColor:n,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(t){const e=this._computationHandles;if(e.has(t))return;const i=this._createLineOfSightVisualization();e.add([this._updatingHandles.add(()=>this._getLineOfSightVisualizationDependencies(t),n=>this._updateLineOfSightVisualization(t,i,n),{initial:!0,equals:()=>!1}),Ee(()=>this._destroyLineOfSightVisualization(i))],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:e}){for(const i of e)this._disconnectComputation(i);for(const i of t)this._connectComputation(i)}_createObserverVisualization(){const t=g.toUnitRGBA(X.visibleInnerColor),e=new Te({view:this.view,color:t,...Ve,isDecoration:this.isDecoration});this._observerVisualElement=e,this.addHandles(this._updatingHandles.add(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:i,interactiveAndEditable:n,visible:s})=>{i!=null&&!n&&s?(e.geometry=i,this._observerVisualElement.attached=!0):e.attached=!1},P))}};a([r({constructOnly:!0})],T.prototype,"analysis",void 0),a([r({constructOnly:!0})],T.prototype,"analysisViewData",void 0),a([r({constructOnly:!0})],T.prototype,"view",void 0),a([r({readOnly:!0})],T.prototype,"visible",null),a([r({constructOnly:!0})],T.prototype,"isDecoration",void 0),a([r()],T.prototype,"updating",null),a([r()],T.prototype,"interactiveAndEditable",null),a([r()],T.prototype,"test",null),T=a([E("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],T);const Ve={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},Gt=_(),zt=_(),Ft=_(),jt=dt();let f=class extends ht(He.EventedMixin(D)){constructor(t){super(t),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new ct,this.elevationAlignedObserver=null,this.observerEngineLocation=_(),this.cursorTarget=null,this.editable=!0}initialize(){const t=this.view,e=this.analysis;this._analysisController=new m({analysis:e,analysisViewData:this,view:t}),this._analysisVisualization=new T({analysis:e,analysisViewData:this,view:t,isDecoration:!this.parent}),this.addHandles([this._analysisController.on("result-changed",i=>{i.target!==this.cursorTarget&&this.emit("result-changed",i)}),vt(this,b)])}destroy(){_t(this),this._analysisController=R(this._analysisController),this._analysisVisualization=R(this._analysisVisualization)}get results(){return this.computations.map(t=>t.result)}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return this._analysisController!=null&&this._analysisController.updating||this._analysisVisualization!=null&&this._analysisVisualization.updating}getResultForTarget(t){var e;return(e=this.computations.find(i=>i.target===t))==null?void 0:e.result}get testInfo(){}};a([r({readOnly:!0})],f.prototype,"type",void 0),a([r({constructOnly:!0,nonNullable:!0})],f.prototype,"analysis",void 0),a([r()],f.prototype,"tool",void 0),a([r({readOnly:!0})],f.prototype,"results",null),a([r()],f.prototype,"priority",null),a([r()],f.prototype,"computations",void 0),a([r()],f.prototype,"elevationAlignedObserver",void 0),a([r()],f.prototype,"observerEngineLocation",void 0),a([r()],f.prototype,"cursorTarget",void 0),a([r()],f.prototype,"updating",null),a([r()],f.prototype,"editable",void 0),a([r()],f.prototype,"_analysisController",void 0),a([r()],f.prototype,"_analysisVisualization",void 0),f=a([E("esri.views.3d.analysis.LineOfSightAnalysisView3D")],f);const ci=f;export{ci as default};
